{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Optional, EventEmitter, SecurityContext, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { BehaviorSubject, EMPTY, throwError, from, zip, animationFrameScheduler } from 'rxjs';\nimport { filter, map, take, switchMap, tap, catchError } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nvar HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS'); // @dynamic\n\nvar HighlightLoader = /*#__PURE__*/function () {\n  function HighlightLoader(doc, platformId, _options) {\n    var _this = this;\n\n    _classCallCheck(this, HighlightLoader);\n\n    this._options = _options; // Stream that emits when hljs library is loaded and ready to use\n\n    this._ready = new BehaviorSubject(null);\n    this.ready = this._ready.asObservable().pipe(filter(function (hljs) {\n      return !!hljs;\n    }), map(function (hljs) {\n      return hljs;\n    }), take(1)); // Check if hljs is already available\n\n    if (isPlatformBrowser(platformId) && doc.defaultView.hljs) {\n      this._ready.next(doc.defaultView.hljs);\n    } else {\n      // Load hljs library\n      this._loadLibrary().pipe(switchMap(function (hljs) {\n        if (_this._options && _this._options.lineNumbersLoader) {\n          // Make hljs available on window object (required for the line numbers library)\n          doc.defaultView.hljs = hljs; // Load line numbers library\n\n          return _this.loadLineNumbers().pipe(tap(function () {\n            return _this._ready.next(hljs);\n          }));\n        } else {\n          _this._ready.next(hljs);\n\n          return EMPTY;\n        }\n      }), catchError(function (e) {\n        console.error('[HLJS] ', e);\n        return EMPTY;\n      })).subscribe();\n    }\n  }\n  /**\n   * Lazy-Load highlight.js library\n   */\n\n\n  _createClass(HighlightLoader, [{\n    key: \"_loadLibrary\",\n    value: function _loadLibrary() {\n      var _this2 = this;\n\n      if (this._options) {\n        if (this._options.fullLibraryLoader && this._options.coreLibraryLoader) {\n          return throwError('The full library and the core library were imported, only one of them should be imported!');\n        }\n\n        if (this._options.fullLibraryLoader && this._options.languages) {\n          return throwError('The highlighting languages were imported they are not needed!');\n        }\n\n        if (this._options.coreLibraryLoader && !this._options.languages) {\n          return throwError('The highlighting languages were not imported!');\n        }\n\n        if (!this._options.coreLibraryLoader && this._options.languages) {\n          return throwError('The core library was not imported!');\n        }\n\n        if (this._options.fullLibraryLoader) {\n          return this.loadFullLibrary();\n        }\n\n        if (this._options.coreLibraryLoader && this._options.languages && Object.keys(this._options.languages).length) {\n          return this.loadCoreLibrary().pipe(switchMap(function (hljs) {\n            return _this2._loadLanguages(hljs);\n          }));\n        }\n      }\n\n      return throwError('Highlight.js library was not imported!');\n    }\n    /**\n     * Lazy-load highlight.js languages\n     */\n\n  }, {\n    key: \"_loadLanguages\",\n    value: function _loadLanguages(hljs) {\n      var languages = Object.entries(this._options.languages).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            langName = _ref2[0],\n            langLoader = _ref2[1];\n\n        return importModule(langLoader()).pipe(tap(function (langFunc) {\n          return hljs.registerLanguage(langName, langFunc);\n        }));\n      });\n      return zip.apply(void 0, _toConsumableArray(languages)).pipe(map(function () {\n        return hljs;\n      }));\n    }\n    /**\n     * Import highlight.js core library\n     */\n\n  }, {\n    key: \"loadCoreLibrary\",\n    value: function loadCoreLibrary() {\n      return importModule(this._options.coreLibraryLoader());\n    }\n    /**\n     * Import highlight.js library with all languages\n     */\n\n  }, {\n    key: \"loadFullLibrary\",\n    value: function loadFullLibrary() {\n      return importModule(this._options.fullLibraryLoader());\n    }\n    /**\n     * Import line numbers library\n     */\n\n  }, {\n    key: \"loadLineNumbers\",\n    value: function loadLineNumbers() {\n      return importModule(this._options.lineNumbersLoader());\n    }\n  }]);\n\n  return HighlightLoader;\n}();\n\nHighlightLoader.ɵfac = function HighlightLoader_Factory(t) {\n  return new (t || HighlightLoader)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n};\n\nHighlightLoader.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function HighlightLoader_Factory() {\n    return new HighlightLoader(i0.ɵɵinject(i1.DOCUMENT), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n  },\n  token: HighlightLoader,\n  providedIn: \"root\"\n});\n\nHighlightLoader.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HIGHLIGHT_OPTIONS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightLoader, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Map loader response to module object\n */\n\n\nvar importModule = function importModule(moduleLoader) {\n  return from(moduleLoader).pipe(filter(function (module) {\n    return !!module && !!module.default;\n  }), map(function (module) {\n    return module.default;\n  }));\n};\n\nvar ɵ0 = importModule;\n\nvar HighlightJS = /*#__PURE__*/function () {\n  function HighlightJS(_loader, options) {\n    var _this3 = this;\n\n    _classCallCheck(this, HighlightJS);\n\n    this._loader = _loader;\n    this._hljs = null; // Load highlight.js library on init\n\n    _loader.ready.pipe().subscribe(function (hljs) {\n      _this3._hljs = hljs;\n\n      if (options && options.config) {\n        // Set global config if present\n        hljs.configure(options.config);\n\n        if (hljs.listLanguages().length < 1) {\n          console.error('[HighlightJS]: No languages were registered!');\n        }\n      }\n    });\n  } // A reference for hljs library\n\n\n  _createClass(HighlightJS, [{\n    key: \"hljs\",\n    get: function get() {\n      return this._hljs;\n    }\n    /**\n     * Core highlighting function.\n     * @param name Accepts a language name, or an alias\n     * @param value A string with the code to highlight.\n     * @param ignore_illegals When present and evaluates to a true value, forces highlighting to finish\n     * even in case of detecting illegal syntax for the language instead of throwing an exception.\n     * @param continuation An optional mode stack representing unfinished parsing.\n     * When present, the function will restart parsing from this state instead of initializing a new one\n     */\n\n  }, {\n    key: \"highlight\",\n    value: function highlight(name, value, ignore_illegals, continuation) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.highlight(name, value, ignore_illegals, continuation);\n      }));\n    }\n    /**\n     * Highlighting with language detection.\n     * @param value Accepts a string with the code to highlight\n     * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\n     */\n\n  }, {\n    key: \"highlightAuto\",\n    value: function highlightAuto(value, languageSubset) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.highlightAuto(value, languageSubset);\n      }));\n    }\n    /**\n     * Post-processing of the highlighted markup.\n     * Currently consists of replacing indentation TAB characters and using <br> tags instead of new-line characters.\n     * Options are set globally with configure.\n     * @param value Accepts a string with the highlighted markup\n     */\n\n  }, {\n    key: \"fixMarkup\",\n    value: function fixMarkup(value) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.fixMarkup(value);\n      }));\n    }\n    /**\n     * Applies highlighting to a DOM node containing code.\n     * The function uses language detection by default but you can specify the language in the class attribute of the DOM node.\n     * See the class reference for all available language names and aliases.\n     * @param block The element to apply highlight on.\n     */\n\n  }, {\n    key: \"highlightBlock\",\n    value: function highlightBlock(block) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.highlightBlock(block);\n      }));\n    }\n    /**\n     * Configures global options:\n     * @param config HighlightJs configuration argument\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure(config) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.configure(config);\n      }));\n    }\n    /**\n     * Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n     */\n\n  }, {\n    key: \"initHighlighting\",\n    value: function initHighlighting() {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.initHighlighting();\n      }));\n    }\n    /**\n     * Adds new language to the library under the specified name. Used mostly internally.\n     * @param name A string with the name of the language being registered\n     * @param language A function that returns an object which represents the language definition.\n     * The function is passed the hljs object to be able to use common regular expressions defined within it.\n     */\n\n  }, {\n    key: \"registerLanguage\",\n    value: function registerLanguage(name, language) {\n      return this._loader.ready.pipe(tap(function (hljs) {\n        return hljs.registerLanguage(name, language);\n      }));\n    }\n    /**\n     * @return The languages names list.\n     */\n\n  }, {\n    key: \"listLanguages\",\n    value: function listLanguages() {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.listLanguages();\n      }));\n    }\n    /**\n     * Looks up a language by name or alias.\n     * @param name Language name\n     * @return The language object if found, undefined otherwise.\n     */\n\n  }, {\n    key: \"getLanguage\",\n    value: function getLanguage(name) {\n      return this._loader.ready.pipe(map(function (hljs) {\n        return hljs.getLanguage(name);\n      }));\n    }\n    /**\n     * Display line numbers\n     * @param el Code element\n     */\n\n  }, {\n    key: \"lineNumbersBlock\",\n    value: function lineNumbersBlock(el) {\n      return this._loader.ready.pipe(filter(function (hljs) {\n        return !!hljs.lineNumbersBlock;\n      }), tap(function (hljs) {\n        return hljs.lineNumbersBlock(el);\n      }));\n    }\n  }]);\n\n  return HighlightJS;\n}();\n\nHighlightJS.ɵfac = function HighlightJS_Factory(t) {\n  return new (t || HighlightJS)(ɵngcc0.ɵɵinject(HighlightLoader), ɵngcc0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n};\n\nHighlightJS.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function HighlightJS_Factory() {\n    return new HighlightJS(i0.ɵɵinject(HighlightLoader), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8));\n  },\n  token: HighlightJS,\n  providedIn: \"root\"\n});\n\nHighlightJS.ctorParameters = function () {\n  return [{\n    type: HighlightLoader\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HIGHLIGHT_OPTIONS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightJS, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: HighlightLoader\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\nvar Highlight = /*#__PURE__*/function () {\n  function Highlight(el, _hljs, _sanitizer, _options) {\n    _classCallCheck(this, Highlight);\n\n    this._hljs = _hljs;\n    this._sanitizer = _sanitizer;\n    this._options = _options; // Stream that emits when code string is highlighted\n\n    this.highlighted = new EventEmitter();\n    this._nativeElement = el.nativeElement;\n  }\n\n  _createClass(Highlight, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.code && changes.code && typeof changes.code.currentValue !== 'undefined' && changes.code.currentValue !== changes.code.previousValue) {\n        this.highlightElement(this.code, this.languages);\n      }\n    }\n    /**\n     * Highlighting with language detection and fix markup.\n     * @param code Accepts a string with the code to highlight\n     * @param languages An optional array of language names and aliases restricting detection to only those languages.\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\n     */\n\n  }, {\n    key: \"highlightElement\",\n    value: function highlightElement(code, languages) {\n      var _this4 = this;\n\n      // Set code text before highlighting\n      this.setTextContent(code);\n\n      this._hljs.highlightAuto(code, languages).subscribe(function (res) {\n        // Set highlighted code\n        _this4.setInnerHTML(res.value); // Check if user want to show line numbers\n\n\n        if (_this4.lineNumbers && _this4._options && _this4._options.lineNumbersLoader) {\n          _this4.addLineNumbers();\n        } // Forward highlight response to the highlighted output\n\n\n        _this4.highlighted.emit(res);\n      });\n    }\n  }, {\n    key: \"addLineNumbers\",\n    value: function addLineNumbers() {\n      var _this5 = this;\n\n      // Clean up line numbers observer\n      this.destroyLineNumbersObserver();\n      animationFrameScheduler.schedule(function () {\n        // Add line numbers\n        _this5._hljs.lineNumbersBlock(_this5._nativeElement).subscribe(); // If lines count is 1, the line numbers library will not add numbers\n        // Observe changes to add 'hljs-line-numbers' class only when line numbers is added to the code element\n\n\n        _this5._lineNumbersObs = new MutationObserver(function () {\n          if (_this5._nativeElement.firstElementChild && _this5._nativeElement.firstElementChild.tagName.toUpperCase() === 'TABLE') {\n            _this5._nativeElement.classList.add('hljs-line-numbers');\n          }\n\n          _this5.destroyLineNumbersObserver();\n        });\n\n        _this5._lineNumbersObs.observe(_this5._nativeElement, {\n          childList: true\n        });\n      });\n    }\n  }, {\n    key: \"destroyLineNumbersObserver\",\n    value: function destroyLineNumbersObserver() {\n      if (this._lineNumbersObs) {\n        this._lineNumbersObs.disconnect();\n\n        this._lineNumbersObs = null;\n      }\n    }\n  }, {\n    key: \"setTextContent\",\n    value: function setTextContent(content) {\n      var _this6 = this;\n\n      animationFrameScheduler.schedule(function () {\n        return _this6._nativeElement.textContent = content;\n      });\n    }\n  }, {\n    key: \"setInnerHTML\",\n    value: function setInnerHTML(content) {\n      var _this7 = this;\n\n      animationFrameScheduler.schedule(function () {\n        return _this7._nativeElement.innerHTML = _this7._sanitizer.sanitize(SecurityContext.HTML, content) || '';\n      });\n    }\n  }]);\n\n  return Highlight;\n}();\n\nHighlight.ɵfac = function Highlight_Factory(t) {\n  return new (t || Highlight)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(HighlightJS), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(HIGHLIGHT_OPTIONS, 8));\n};\n\nHighlight.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: Highlight,\n  selectors: [[\"\", \"highlight\", \"\"]],\n  hostVars: 2,\n  hostBindings: function Highlight_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"hljs\", true);\n    }\n  },\n  inputs: {\n    code: [\"highlight\", \"code\"],\n    languages: \"languages\",\n    lineNumbers: \"lineNumbers\"\n  },\n  outputs: {\n    highlighted: \"highlighted\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nHighlight.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: HighlightJS\n  }, {\n    type: DomSanitizer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HIGHLIGHT_OPTIONS]\n    }]\n  }];\n};\n\nHighlight.propDecorators = {\n  code: [{\n    type: Input,\n    args: ['highlight']\n  }],\n  languages: [{\n    type: Input\n  }],\n  lineNumbers: [{\n    type: Input\n  }],\n  highlighted: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Highlight, [{\n    type: Directive,\n    args: [{\n      host: {\n        '[class.hljs]': 'true'\n      },\n      selector: '[highlight]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: HighlightJS\n    }, {\n      type: ɵngcc1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HIGHLIGHT_OPTIONS]\n      }]\n    }];\n  }, {\n    highlighted: [{\n      type: Output\n    }],\n    code: [{\n      type: Input,\n      args: ['highlight']\n    }],\n    languages: [{\n      type: Input\n    }],\n    lineNumbers: [{\n      type: Input\n    }]\n  });\n})();\n\nvar HighlightModule = /*#__PURE__*/_createClass(function HighlightModule() {\n  _classCallCheck(this, HighlightModule);\n});\n\nHighlightModule.ɵfac = function HighlightModule_Factory(t) {\n  return new (t || HighlightModule)();\n};\n\nHighlightModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: HighlightModule\n});\nHighlightModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Highlight],\n      exports: [Highlight]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HighlightModule, {\n    declarations: [Highlight],\n    exports: [Highlight]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightJS, HighlightLoader, HighlightModule, ɵ0 };","map":{"version":3,"sources":["C:/Users/user/Desktop/fgs/front/fgs/node_modules/ngx-highlightjs/__ivy_ngcc__/fesm2015/ngx-highlightjs.js"],"names":["i0","InjectionToken","Injectable","Inject","PLATFORM_ID","Optional","EventEmitter","SecurityContext","Directive","ElementRef","Input","Output","NgModule","DomSanitizer","BehaviorSubject","EMPTY","throwError","from","zip","animationFrameScheduler","filter","map","take","switchMap","tap","catchError","i1","isPlatformBrowser","DOCUMENT","ɵngcc0","ɵngcc1","HIGHLIGHT_OPTIONS","HighlightLoader","doc","platformId","_options","_ready","ready","asObservable","pipe","hljs","defaultView","next","_loadLibrary","lineNumbersLoader","loadLineNumbers","e","console","error","subscribe","fullLibraryLoader","coreLibraryLoader","languages","loadFullLibrary","Object","keys","length","loadCoreLibrary","_loadLanguages","entries","langName","langLoader","importModule","langFunc","registerLanguage","ɵfac","HighlightLoader_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","ctorParameters","type","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","moduleLoader","module","default","ɵ0","HighlightJS","_loader","options","_hljs","config","configure","listLanguages","name","value","ignore_illegals","continuation","highlight","languageSubset","highlightAuto","fixMarkup","block","highlightBlock","initHighlighting","language","getLanguage","el","lineNumbersBlock","HighlightJS_Factory","Highlight","_sanitizer","highlighted","_nativeElement","nativeElement","changes","code","currentValue","previousValue","highlightElement","setTextContent","res","setInnerHTML","lineNumbers","addLineNumbers","emit","destroyLineNumbersObserver","schedule","_lineNumbersObs","MutationObserver","firstElementChild","tagName","toUpperCase","classList","add","observe","childList","disconnect","content","textContent","innerHTML","sanitize","HTML","Highlight_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","Highlight_HostBindings","rf","ctx","ɵɵclassProp","inputs","outputs","features","ɵɵNgOnChangesFeature","propDecorators","host","selector","HighlightModule","HighlightModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":";;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,WAA7C,EAA0DC,QAA1D,EAAoEC,YAApE,EAAkFC,eAAlF,EAAmGC,SAAnG,EAA8GC,UAA9G,EAA0HC,KAA1H,EAAiIC,MAAjI,EAAyIC,QAAzI,QAAyJ,eAAzJ;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,eAAT,EAA0BC,KAA1B,EAAiCC,UAAjC,EAA6CC,IAA7C,EAAmDC,GAAnD,EAAwDC,uBAAxD,QAAuF,MAAvF;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,GAAvC,EAA4CC,UAA5C,QAA8D,gBAA9D;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,iBAA5C;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AACA,IAAMC,iBAAiB,GAAG,IAAI9B,cAAJ,CAAmB,mBAAnB,CAA1B,C,CAEA;;IACM+B,e;AACF,2BAAYC,GAAZ,EAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC;AAAA;;AAAA;;AACnC,SAAKA,QAAL,GAAgBA,QAAhB,CADmC,CAEnC;;AACA,SAAKC,MAAL,GAAc,IAAItB,eAAJ,CAAoB,IAApB,CAAd;AACA,SAAKuB,KAAL,GAAa,KAAKD,MAAL,CAAYE,YAAZ,GAA2BC,IAA3B,CAAgCnB,MAAM,CAAC,UAACoB,IAAD;AAAA,aAAU,CAAC,CAACA,IAAZ;AAAA,KAAD,CAAtC,EAA0DnB,GAAG,CAAC,UAACmB,IAAD;AAAA,aAAUA,IAAV;AAAA,KAAD,CAA7D,EAA+ElB,IAAI,CAAC,CAAD,CAAnF,CAAb,CAJmC,CAKnC;;AACA,QAAIK,iBAAiB,CAACO,UAAD,CAAjB,IAAiCD,GAAG,CAACQ,WAAJ,CAAgBD,IAArD,EAA2D;AACvD,WAAKJ,MAAL,CAAYM,IAAZ,CAAiBT,GAAG,CAACQ,WAAJ,CAAgBD,IAAjC;AACH,KAFD,MAGK;AACD;AACA,WAAKG,YAAL,GAAoBJ,IAApB,CAAyBhB,SAAS,CAAC,UAACiB,IAAD,EAAU;AACzC,YAAI,KAAI,CAACL,QAAL,IAAiB,KAAI,CAACA,QAAL,CAAcS,iBAAnC,EAAsD;AAClD;AACAX,UAAAA,GAAG,CAACQ,WAAJ,CAAgBD,IAAhB,GAAuBA,IAAvB,CAFkD,CAGlD;;AACA,iBAAO,KAAI,CAACK,eAAL,GAAuBN,IAAvB,CAA4Bf,GAAG,CAAC;AAAA,mBAAM,KAAI,CAACY,MAAL,CAAYM,IAAZ,CAAiBF,IAAjB,CAAN;AAAA,WAAD,CAA/B,CAAP;AACH,SALD,MAMK;AACD,UAAA,KAAI,CAACJ,MAAL,CAAYM,IAAZ,CAAiBF,IAAjB;;AACA,iBAAOzB,KAAP;AACH;AACJ,OAXiC,CAAlC,EAWIU,UAAU,CAAC,UAACqB,CAAD,EAAO;AAClBC,QAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAyBF,CAAzB;AACA,eAAO/B,KAAP;AACH,OAHa,CAXd,EAcIkC,SAdJ;AAeH;AACJ;AACD;AACJ;AACA;;;;;WACI,wBAAe;AAAA;;AACX,UAAI,KAAKd,QAAT,EAAmB;AACf,YAAI,KAAKA,QAAL,CAAce,iBAAd,IAAmC,KAAKf,QAAL,CAAcgB,iBAArD,EAAwE;AACpE,iBAAOnC,UAAU,CAAC,2FAAD,CAAjB;AACH;;AACD,YAAI,KAAKmB,QAAL,CAAce,iBAAd,IAAmC,KAAKf,QAAL,CAAciB,SAArD,EAAgE;AAC5D,iBAAOpC,UAAU,CAAC,+DAAD,CAAjB;AACH;;AACD,YAAI,KAAKmB,QAAL,CAAcgB,iBAAd,IAAmC,CAAC,KAAKhB,QAAL,CAAciB,SAAtD,EAAiE;AAC7D,iBAAOpC,UAAU,CAAC,+CAAD,CAAjB;AACH;;AACD,YAAI,CAAC,KAAKmB,QAAL,CAAcgB,iBAAf,IAAoC,KAAKhB,QAAL,CAAciB,SAAtD,EAAiE;AAC7D,iBAAOpC,UAAU,CAAC,oCAAD,CAAjB;AACH;;AACD,YAAI,KAAKmB,QAAL,CAAce,iBAAlB,EAAqC;AACjC,iBAAO,KAAKG,eAAL,EAAP;AACH;;AACD,YAAI,KAAKlB,QAAL,CAAcgB,iBAAd,IAAmC,KAAKhB,QAAL,CAAciB,SAAjD,IAA8DE,MAAM,CAACC,IAAP,CAAY,KAAKpB,QAAL,CAAciB,SAA1B,EAAqCI,MAAvG,EAA+G;AAC3G,iBAAO,KAAKC,eAAL,GAAuBlB,IAAvB,CAA4BhB,SAAS,CAAC,UAACiB,IAAD;AAAA,mBAAU,MAAI,CAACkB,cAAL,CAAoBlB,IAApB,CAAV;AAAA,WAAD,CAArC,CAAP;AACH;AACJ;;AACD,aAAOxB,UAAU,CAAC,wCAAD,CAAjB;AACH;AACD;AACJ;AACA;;;;WACI,wBAAewB,IAAf,EAAqB;AACjB,UAAMY,SAAS,GAAGE,MAAM,CAACK,OAAP,CAAe,KAAKxB,QAAL,CAAciB,SAA7B,EAAwC/B,GAAxC,CAA4C;AAAA;AAAA,YAAEuC,QAAF;AAAA,YAAYC,UAAZ;;AAAA,eAA4BC,YAAY,CAACD,UAAU,EAAX,CAAZ,CAA2BtB,IAA3B,CAAgCf,GAAG,CAAC,UAACuC,QAAD;AAAA,iBAAcvB,IAAI,CAACwB,gBAAL,CAAsBJ,QAAtB,EAAgCG,QAAhC,CAAd;AAAA,SAAD,CAAnC,CAA5B;AAAA,OAA5C,CAAlB;AACA,aAAO7C,GAAG,MAAH,4BAAOkC,SAAP,GAAkBb,IAAlB,CAAuBlB,GAAG,CAAC;AAAA,eAAMmB,IAAN;AAAA,OAAD,CAA1B,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,2BAAkB;AACd,aAAOsB,YAAY,CAAC,KAAK3B,QAAL,CAAcgB,iBAAd,EAAD,CAAnB;AACH;AACD;AACJ;AACA;;;;WACI,2BAAkB;AACd,aAAOW,YAAY,CAAC,KAAK3B,QAAL,CAAce,iBAAd,EAAD,CAAnB;AACH;AACD;AACJ;AACA;;;;WACI,2BAAkB;AACd,aAAOY,YAAY,CAAC,KAAK3B,QAAL,CAAcS,iBAAd,EAAD,CAAnB;AACH;;;;;;AAELZ,eAAe,CAACiC,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAInC,eAAV,EAA2BH,MAAM,CAACuC,QAAP,CAAgBxC,QAAhB,CAA3B,EAAsDC,MAAM,CAACuC,QAAP,CAAgBhE,WAAhB,CAAtD,EAAoFyB,MAAM,CAACuC,QAAP,CAAgBrC,iBAAhB,EAAmC,CAAnC,CAApF,CAAP;AAAoI,CAAjM;;AACAC,eAAe,CAACqC,KAAhB,GAAwBrE,EAAE,CAACsE,kBAAH,CAAsB;AAAEC,EAAAA,OAAO,EAAE,SAASL,uBAAT,GAAmC;AAAE,WAAO,IAAIlC,eAAJ,CAAoBhC,EAAE,CAACoE,QAAH,CAAY1C,EAAE,CAACE,QAAf,CAApB,EAA8C5B,EAAE,CAACoE,QAAH,CAAYpE,EAAE,CAACI,WAAf,CAA9C,EAA2EJ,EAAE,CAACoE,QAAH,CAAYrC,iBAAZ,EAA+B,CAA/B,CAA3E,CAAP;AAAuH,GAAvK;AAAyKyC,EAAAA,KAAK,EAAExC,eAAhL;AAAiMyC,EAAAA,UAAU,EAAE;AAA7M,CAAtB,CAAxB;;AACAzC,eAAe,CAAC0C,cAAhB,GAAiC;AAAA,SAAM,CACnC;AAAEC,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,UAAU,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAExE,MAAR;AAAgB2E,MAAAA,IAAI,EAAE,CAAClD,QAAD;AAAtB,KAAD;AAA/B,GADmC,EAEnC;AAAE+C,IAAAA,IAAI,EAAErB,MAAR;AAAgBuB,IAAAA,UAAU,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAExE,MAAR;AAAgB2E,MAAAA,IAAI,EAAE,CAAC1E,WAAD;AAAtB,KAAD;AAA5B,GAFmC,EAGnC;AAAEuE,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,UAAU,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAEtE;AAAR,KAAD,EAAqB;AAAEsE,MAAAA,IAAI,EAAExE,MAAR;AAAgB2E,MAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAAtB,KAArB;AAA/B,GAHmC,CAAN;AAAA,CAAjC;;AAKA,CAAC,YAAY;AAAE,GAAC,OAAOgD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlD,MAAM,CAACmD,iBAAP,CAAyBhD,eAAzB,EAA0C,CAAC;AACrG2C,IAAAA,IAAI,EAAEzE,UAD+F;AAErG4E,IAAAA,IAAI,EAAE,CAAC;AACCL,MAAAA,UAAU,EAAE;AADb,KAAD;AAF+F,GAAD,CAA1C,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAEE,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AAC9CF,QAAAA,IAAI,EAAExE,MADwC;AAE9C2E,QAAAA,IAAI,EAAE,CAAClD,QAAD;AAFwC,OAAD;AAA/B,KAAD,EAGX;AAAE+C,MAAAA,IAAI,EAAErB,MAAR;AAAgBuB,MAAAA,UAAU,EAAE,CAAC;AAC/BF,QAAAA,IAAI,EAAExE,MADyB;AAE/B2E,QAAAA,IAAI,EAAE,CAAC1E,WAAD;AAFyB,OAAD;AAA5B,KAHW,EAMX;AAAEuE,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AAClCF,QAAAA,IAAI,EAAEtE;AAD4B,OAAD,EAElC;AACCsE,QAAAA,IAAI,EAAExE,MADP;AAEC2E,QAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAFP,OAFkC;AAA/B,KANW,CAAP;AAWF,GAhB8C,EAgB5C,IAhB4C,CAAnD;AAgBe,CAhB9B;AAiBA;AACA;AACA;;;AACA,IAAM+B,YAAY,GAAG,SAAfA,YAAe,CAACmB,YAAD,EAAkB;AACnC,SAAOhE,IAAI,CAACgE,YAAD,CAAJ,CAAmB1C,IAAnB,CAAwBnB,MAAM,CAAC,UAAC8D,MAAD;AAAA,WAAY,CAAC,CAACA,MAAF,IAAY,CAAC,CAACA,MAAM,CAACC,OAAjC;AAAA,GAAD,CAA9B,EAA0E9D,GAAG,CAAC,UAAC6D,MAAD;AAAA,WAAYA,MAAM,CAACC,OAAnB;AAAA,GAAD,CAA7E,CAAP;AACH,CAFD;;AAGA,IAAMC,EAAE,GAAGtB,YAAX;;IAEMuB,W;AACF,uBAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAAA;;AAC1B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAa,IAAb,CAF0B,CAG1B;;AACAF,IAAAA,OAAO,CAACjD,KAAR,CAAcE,IAAd,GAAqBU,SAArB,CAA+B,UAACT,IAAD,EAAU;AACrC,MAAA,MAAI,CAACgD,KAAL,GAAahD,IAAb;;AACA,UAAI+C,OAAO,IAAIA,OAAO,CAACE,MAAvB,EAA+B;AAC3B;AACAjD,QAAAA,IAAI,CAACkD,SAAL,CAAeH,OAAO,CAACE,MAAvB;;AACA,YAAIjD,IAAI,CAACmD,aAAL,GAAqBnC,MAArB,GAA8B,CAAlC,EAAqC;AACjCT,UAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACH;AACJ;AACJ,KATD;AAUH,G,CACD;;;;;SACA,eAAW;AACP,aAAO,KAAKwC,KAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAUI,IAAV,EAAgBC,KAAhB,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsD;AAClD,aAAO,KAAKT,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAACwD,SAAL,CAAeJ,IAAf,EAAqBC,KAArB,EAA4BC,eAA5B,EAA6CC,YAA7C,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,uBAAcF,KAAd,EAAqBI,cAArB,EAAqC;AACjC,aAAO,KAAKX,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAAC0D,aAAL,CAAmBL,KAAnB,EAA0BI,cAA1B,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,mBAAUJ,KAAV,EAAiB;AACb,aAAO,KAAKP,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAAC2D,SAAL,CAAeN,KAAf,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,wBAAeO,KAAf,EAAsB;AAClB,aAAO,KAAKd,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAAC6D,cAAL,CAAoBD,KAApB,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,mBAAUX,MAAV,EAAkB;AACd,aAAO,KAAKH,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAACkD,SAAL,CAAeD,MAAf,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,4BAAmB;AACf,aAAO,KAAKH,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAAC8D,gBAAL,EAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiBV,IAAjB,EAAuBW,QAAvB,EAAiC;AAC7B,aAAO,KAAKjB,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBf,GAAG,CAAC,UAACgB,IAAD;AAAA,eAAUA,IAAI,CAACwB,gBAAL,CAAsB4B,IAAtB,EAA4BW,QAA5B,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,yBAAgB;AACZ,aAAO,KAAKjB,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAACmD,aAAL,EAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,qBAAYC,IAAZ,EAAkB;AACd,aAAO,KAAKN,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBlB,GAAG,CAAC,UAACmB,IAAD;AAAA,eAAUA,IAAI,CAACgE,WAAL,CAAiBZ,IAAjB,CAAV;AAAA,OAAD,CAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,0BAAiBa,EAAjB,EAAqB;AACjB,aAAO,KAAKnB,OAAL,CAAajD,KAAb,CAAmBE,IAAnB,CAAwBnB,MAAM,CAAC,UAACoB,IAAD;AAAA,eAAU,CAAC,CAACA,IAAI,CAACkE,gBAAjB;AAAA,OAAD,CAA9B,EAAmElF,GAAG,CAAC,UAACgB,IAAD;AAAA,eAAUA,IAAI,CAACkE,gBAAL,CAAsBD,EAAtB,CAAV;AAAA,OAAD,CAAtE,CAAP;AACH;;;;;;AAELpB,WAAW,CAACpB,IAAZ,GAAmB,SAAS0C,mBAAT,CAA6BxC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIkB,WAAV,EAAuBxD,MAAM,CAACuC,QAAP,CAAgBpC,eAAhB,CAAvB,EAAyDH,MAAM,CAACuC,QAAP,CAAgBrC,iBAAhB,EAAmC,CAAnC,CAAzD,CAAP;AAAyG,CAA9J;;AACAsD,WAAW,CAAChB,KAAZ,GAAoBrE,EAAE,CAACsE,kBAAH,CAAsB;AAAEC,EAAAA,OAAO,EAAE,SAASoC,mBAAT,GAA+B;AAAE,WAAO,IAAItB,WAAJ,CAAgBrF,EAAE,CAACoE,QAAH,CAAYpC,eAAZ,CAAhB,EAA8ChC,EAAE,CAACoE,QAAH,CAAYrC,iBAAZ,EAA+B,CAA/B,CAA9C,CAAP;AAA0F,GAAtI;AAAwIyC,EAAAA,KAAK,EAAEa,WAA/I;AAA4JZ,EAAAA,UAAU,EAAE;AAAxK,CAAtB,CAApB;;AACAY,WAAW,CAACX,cAAZ,GAA6B;AAAA,SAAM,CAC/B;AAAEC,IAAAA,IAAI,EAAE3C;AAAR,GAD+B,EAE/B;AAAE2C,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,UAAU,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAEtE;AAAR,KAAD,EAAqB;AAAEsE,MAAAA,IAAI,EAAExE,MAAR;AAAgB2E,MAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAAtB,KAArB;AAA/B,GAF+B,CAAN;AAAA,CAA7B;;AAIA,CAAC,YAAY;AAAE,GAAC,OAAOgD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlD,MAAM,CAACmD,iBAAP,CAAyBK,WAAzB,EAAsC,CAAC;AACjGV,IAAAA,IAAI,EAAEzE,UAD2F;AAEjG4E,IAAAA,IAAI,EAAE,CAAC;AACCL,MAAAA,UAAU,EAAE;AADb,KAAD;AAF2F,GAAD,CAAtC,EAK1D,YAAY;AAAE,WAAO,CAAC;AAAEE,MAAAA,IAAI,EAAE3C;AAAR,KAAD,EAA4B;AAAE2C,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AACzEF,QAAAA,IAAI,EAAEtE;AADmE,OAAD,EAEzE;AACCsE,QAAAA,IAAI,EAAExE,MADP;AAEC2E,QAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAFP,OAFyE;AAA/B,KAA5B,CAAP;AAKF,GAV8C,EAU5C,IAV4C,CAAnD;AAUe,CAV9B;;IAYM6E,S;AACF,qBAAYH,EAAZ,EAAgBjB,KAAhB,EAAuBqB,UAAvB,EAAmC1E,QAAnC,EAA6C;AAAA;;AACzC,SAAKqD,KAAL,GAAaA,KAAb;AACA,SAAKqB,UAAL,GAAkBA,UAAlB;AACA,SAAK1E,QAAL,GAAgBA,QAAhB,CAHyC,CAIzC;;AACA,SAAK2E,WAAL,GAAmB,IAAIxG,YAAJ,EAAnB;AACA,SAAKyG,cAAL,GAAsBN,EAAE,CAACO,aAAzB;AACH;;;;WACD,qBAAYC,OAAZ,EAAqB;AACjB,UAAI,KAAKC,IAAL,IACAD,OAAO,CAACC,IADR,IAEA,OAAOD,OAAO,CAACC,IAAR,CAAaC,YAApB,KAAqC,WAFrC,IAGAF,OAAO,CAACC,IAAR,CAAaC,YAAb,KAA8BF,OAAO,CAACC,IAAR,CAAaE,aAH/C,EAG8D;AAC1D,aAAKC,gBAAL,CAAsB,KAAKH,IAA3B,EAAiC,KAAK9D,SAAtC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB8D,IAAjB,EAAuB9D,SAAvB,EAAkC;AAAA;;AAC9B;AACA,WAAKkE,cAAL,CAAoBJ,IAApB;;AACA,WAAK1B,KAAL,CAAWU,aAAX,CAAyBgB,IAAzB,EAA+B9D,SAA/B,EAA0CH,SAA1C,CAAoD,UAACsE,GAAD,EAAS;AACzD;AACA,QAAA,MAAI,CAACC,YAAL,CAAkBD,GAAG,CAAC1B,KAAtB,EAFyD,CAGzD;;;AACA,YAAI,MAAI,CAAC4B,WAAL,IAAoB,MAAI,CAACtF,QAAzB,IAAqC,MAAI,CAACA,QAAL,CAAcS,iBAAvD,EAA0E;AACtE,UAAA,MAAI,CAAC8E,cAAL;AACH,SANwD,CAOzD;;;AACA,QAAA,MAAI,CAACZ,WAAL,CAAiBa,IAAjB,CAAsBJ,GAAtB;AACH,OATD;AAUH;;;WACD,0BAAiB;AAAA;;AACb;AACA,WAAKK,0BAAL;AACAzG,MAAAA,uBAAuB,CAAC0G,QAAxB,CAAiC,YAAM;AACnC;AACA,QAAA,MAAI,CAACrC,KAAL,CAAWkB,gBAAX,CAA4B,MAAI,CAACK,cAAjC,EAAiD9D,SAAjD,GAFmC,CAGnC;AACA;;;AACA,QAAA,MAAI,CAAC6E,eAAL,GAAuB,IAAIC,gBAAJ,CAAqB,YAAM;AAC9C,cAAI,MAAI,CAAChB,cAAL,CAAoBiB,iBAApB,IAAyC,MAAI,CAACjB,cAAL,CAAoBiB,iBAApB,CAAsCC,OAAtC,CAA8CC,WAA9C,OAAgE,OAA7G,EAAsH;AAClH,YAAA,MAAI,CAACnB,cAAL,CAAoBoB,SAApB,CAA8BC,GAA9B,CAAkC,mBAAlC;AACH;;AACD,UAAA,MAAI,CAACR,0BAAL;AACH,SALsB,CAAvB;;AAMA,QAAA,MAAI,CAACE,eAAL,CAAqBO,OAArB,CAA6B,MAAI,CAACtB,cAAlC,EAAkD;AAAEuB,UAAAA,SAAS,EAAE;AAAb,SAAlD;AACH,OAZD;AAaH;;;WACD,sCAA6B;AACzB,UAAI,KAAKR,eAAT,EAA0B;AACtB,aAAKA,eAAL,CAAqBS,UAArB;;AACA,aAAKT,eAAL,GAAuB,IAAvB;AACH;AACJ;;;WACD,wBAAeU,OAAf,EAAwB;AAAA;;AACpBrH,MAAAA,uBAAuB,CAAC0G,QAAxB,CAAiC;AAAA,eAAM,MAAI,CAACd,cAAL,CAAoB0B,WAApB,GAAkCD,OAAxC;AAAA,OAAjC;AACH;;;WACD,sBAAaA,OAAb,EAAsB;AAAA;;AAClBrH,MAAAA,uBAAuB,CAAC0G,QAAxB,CAAiC;AAAA,eAAM,MAAI,CAACd,cAAL,CAAoB2B,SAApB,GAAgC,MAAI,CAAC7B,UAAL,CAAgB8B,QAAhB,CAAyBpI,eAAe,CAACqI,IAAzC,EAA+CJ,OAA/C,KAA2D,EAAjG;AAAA,OAAjC;AACH;;;;;;AAEL5B,SAAS,CAAC3C,IAAV,GAAiB,SAAS4E,iBAAT,CAA2B1E,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIyC,SAAV,EAAqB/E,MAAM,CAACiH,iBAAP,CAAyBjH,MAAM,CAACpB,UAAhC,CAArB,EAAkEoB,MAAM,CAACiH,iBAAP,CAAyBzD,WAAzB,CAAlE,EAAyGxD,MAAM,CAACiH,iBAAP,CAAyBhH,MAAM,CAACjB,YAAhC,CAAzG,EAAwJgB,MAAM,CAACiH,iBAAP,CAAyB/G,iBAAzB,EAA4C,CAA5C,CAAxJ,CAAP;AAAiN,CAAlQ;;AACA6E,SAAS,CAACmC,IAAV,GAAiB,aAAclH,MAAM,CAACmH,iBAAP,CAAyB;AAAErE,EAAAA,IAAI,EAAEiC,SAAR;AAAmBqC,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDC,EAAAA,QAAQ,EAAE,CAAjE;AAAoEC,EAAAA,YAAY,EAAE,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzLxH,MAAAA,MAAM,CAAC0H,WAAP,CAAmB,MAAnB,EAA2B,IAA3B;AACH;AAAE,GAFiD;AAE/CC,EAAAA,MAAM,EAAE;AAAEtC,IAAAA,IAAI,EAAE,CAAC,WAAD,EAAc,MAAd,CAAR;AAA+B9D,IAAAA,SAAS,EAAE,WAA1C;AAAuDqE,IAAAA,WAAW,EAAE;AAApE,GAFuC;AAE8CgC,EAAAA,OAAO,EAAE;AAAE3C,IAAAA,WAAW,EAAE;AAAf,GAFvD;AAEuF4C,EAAAA,QAAQ,EAAE,CAAC7H,MAAM,CAAC8H,oBAAR;AAFjG,CAAzB,CAA/B;;AAGA/C,SAAS,CAAClC,cAAV,GAA2B;AAAA,SAAM,CAC7B;AAAEC,IAAAA,IAAI,EAAElE;AAAR,GAD6B,EAE7B;AAAEkE,IAAAA,IAAI,EAAEU;AAAR,GAF6B,EAG7B;AAAEV,IAAAA,IAAI,EAAE9D;AAAR,GAH6B,EAI7B;AAAE8D,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,UAAU,EAAE,CAAC;AAAEF,MAAAA,IAAI,EAAEtE;AAAR,KAAD,EAAqB;AAAEsE,MAAAA,IAAI,EAAExE,MAAR;AAAgB2E,MAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAAtB,KAArB;AAA/B,GAJ6B,CAAN;AAAA,CAA3B;;AAMA6E,SAAS,CAACgD,cAAV,GAA2B;AACvB1C,EAAAA,IAAI,EAAE,CAAC;AAAEvC,IAAAA,IAAI,EAAEjE,KAAR;AAAeoE,IAAAA,IAAI,EAAE,CAAC,WAAD;AAArB,GAAD,CADiB;AAEvB1B,EAAAA,SAAS,EAAE,CAAC;AAAEuB,IAAAA,IAAI,EAAEjE;AAAR,GAAD,CAFY;AAGvB+G,EAAAA,WAAW,EAAE,CAAC;AAAE9C,IAAAA,IAAI,EAAEjE;AAAR,GAAD,CAHU;AAIvBoG,EAAAA,WAAW,EAAE,CAAC;AAAEnC,IAAAA,IAAI,EAAEhE;AAAR,GAAD;AAJU,CAA3B;;AAMA,CAAC,YAAY;AAAE,GAAC,OAAOoE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlD,MAAM,CAACmD,iBAAP,CAAyB4B,SAAzB,EAAoC,CAAC;AAC/FjC,IAAAA,IAAI,EAAEnE,SADyF;AAE/FsE,IAAAA,IAAI,EAAE,CAAC;AACC+E,MAAAA,IAAI,EAAE;AACF,wBAAgB;AADd,OADP;AAICC,MAAAA,QAAQ,EAAE;AAJX,KAAD;AAFyF,GAAD,CAApC,EAQ1D,YAAY;AAAE,WAAO,CAAC;AAAEnF,MAAAA,IAAI,EAAE9C,MAAM,CAACpB;AAAf,KAAD,EAA8B;AAAEkE,MAAAA,IAAI,EAAEU;AAAR,KAA9B,EAAqD;AAAEV,MAAAA,IAAI,EAAE7C,MAAM,CAACjB;AAAf,KAArD,EAAoF;AAAE8D,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AACjIF,QAAAA,IAAI,EAAEtE;AAD2H,OAAD,EAEjI;AACCsE,QAAAA,IAAI,EAAExE,MADP;AAEC2E,QAAAA,IAAI,EAAE,CAAC/C,iBAAD;AAFP,OAFiI;AAA/B,KAApF,CAAP;AAKF,GAb8C,EAa5C;AAAE+E,IAAAA,WAAW,EAAE,CAAC;AAC1BnC,MAAAA,IAAI,EAAEhE;AADoB,KAAD,CAAf;AAEVuG,IAAAA,IAAI,EAAE,CAAC;AACPvC,MAAAA,IAAI,EAAEjE,KADC;AAEPoE,MAAAA,IAAI,EAAE,CAAC,WAAD;AAFC,KAAD,CAFI;AAKV1B,IAAAA,SAAS,EAAE,CAAC;AACZuB,MAAAA,IAAI,EAAEjE;AADM,KAAD,CALD;AAOV+G,IAAAA,WAAW,EAAE,CAAC;AACd9C,MAAAA,IAAI,EAAEjE;AADQ,KAAD;AAPH,GAb4C,CAAnD;AAsBC,CAtBhB;;IAwBMqJ,e;;;;AAENA,eAAe,CAAC9F,IAAhB,GAAuB,SAAS+F,uBAAT,CAAiC7F,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAI4F,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACE,IAAhB,GAAuB,aAAcpI,MAAM,CAACqI,gBAAP,CAAwB;AAAEvF,EAAAA,IAAI,EAAEoF;AAAR,CAAxB,CAArC;AACAA,eAAe,CAACI,IAAhB,GAAuB,aAActI,MAAM,CAACuI,gBAAP,CAAwB,EAAxB,CAArC;;AACA,CAAC,YAAY;AAAE,GAAC,OAAOrF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlD,MAAM,CAACmD,iBAAP,CAAyB+E,eAAzB,EAA0C,CAAC;AACrGpF,IAAAA,IAAI,EAAE/D,QAD+F;AAErGkE,IAAAA,IAAI,EAAE,CAAC;AACCuF,MAAAA,YAAY,EAAE,CAACzD,SAAD,CADf;AAEC0D,MAAAA,OAAO,EAAE,CAAC1D,SAAD;AAFV,KAAD;AAF+F,GAAD,CAA1C,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,CANtB;;AAOA,CAAC,YAAY;AAAE,GAAC,OAAO2D,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD1I,MAAM,CAAC2I,kBAAP,CAA0BT,eAA1B,EAA2C;AAAEM,IAAAA,YAAY,EAAE,CAACzD,SAAD,CAAhB;AAA6B0D,IAAAA,OAAO,EAAE,CAAC1D,SAAD;AAAtC,GAA3C,CAAnD;AAAqJ,CAApK;AAEA;AACA;AACA;;;AAEA,SAAS7E,iBAAT,EAA4B6E,SAA5B,EAAuCvB,WAAvC,EAAoDrD,eAApD,EAAqE+H,eAArE,EAAsF3E,EAAtF","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, PLATFORM_ID, Optional, EventEmitter, SecurityContext, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { BehaviorSubject, EMPTY, throwError, from, zip, animationFrameScheduler } from 'rxjs';\nimport { filter, map, take, switchMap, tap, catchError } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nconst HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');\n\n// @dynamic\nclass HighlightLoader {\n    constructor(doc, platformId, _options) {\n        this._options = _options;\n        // Stream that emits when hljs library is loaded and ready to use\n        this._ready = new BehaviorSubject(null);\n        this.ready = this._ready.asObservable().pipe(filter((hljs) => !!hljs), map((hljs) => hljs), take(1));\n        // Check if hljs is already available\n        if (isPlatformBrowser(platformId) && doc.defaultView.hljs) {\n            this._ready.next(doc.defaultView.hljs);\n        }\n        else {\n            // Load hljs library\n            this._loadLibrary().pipe(switchMap((hljs) => {\n                if (this._options && this._options.lineNumbersLoader) {\n                    // Make hljs available on window object (required for the line numbers library)\n                    doc.defaultView.hljs = hljs;\n                    // Load line numbers library\n                    return this.loadLineNumbers().pipe(tap(() => this._ready.next(hljs)));\n                }\n                else {\n                    this._ready.next(hljs);\n                    return EMPTY;\n                }\n            }), catchError((e) => {\n                console.error('[HLJS] ', e);\n                return EMPTY;\n            })).subscribe();\n        }\n    }\n    /**\n     * Lazy-Load highlight.js library\n     */\n    _loadLibrary() {\n        if (this._options) {\n            if (this._options.fullLibraryLoader && this._options.coreLibraryLoader) {\n                return throwError('The full library and the core library were imported, only one of them should be imported!');\n            }\n            if (this._options.fullLibraryLoader && this._options.languages) {\n                return throwError('The highlighting languages were imported they are not needed!');\n            }\n            if (this._options.coreLibraryLoader && !this._options.languages) {\n                return throwError('The highlighting languages were not imported!');\n            }\n            if (!this._options.coreLibraryLoader && this._options.languages) {\n                return throwError('The core library was not imported!');\n            }\n            if (this._options.fullLibraryLoader) {\n                return this.loadFullLibrary();\n            }\n            if (this._options.coreLibraryLoader && this._options.languages && Object.keys(this._options.languages).length) {\n                return this.loadCoreLibrary().pipe(switchMap((hljs) => this._loadLanguages(hljs)));\n            }\n        }\n        return throwError('Highlight.js library was not imported!');\n    }\n    /**\n     * Lazy-load highlight.js languages\n     */\n    _loadLanguages(hljs) {\n        const languages = Object.entries(this._options.languages).map(([langName, langLoader]) => importModule(langLoader()).pipe(tap((langFunc) => hljs.registerLanguage(langName, langFunc))));\n        return zip(...languages).pipe(map(() => hljs));\n    }\n    /**\n     * Import highlight.js core library\n     */\n    loadCoreLibrary() {\n        return importModule(this._options.coreLibraryLoader());\n    }\n    /**\n     * Import highlight.js library with all languages\n     */\n    loadFullLibrary() {\n        return importModule(this._options.fullLibraryLoader());\n    }\n    /**\n     * Import line numbers library\n     */\n    loadLineNumbers() {\n        return importModule(this._options.lineNumbersLoader());\n    }\n}\nHighlightLoader.ɵfac = function HighlightLoader_Factory(t) { return new (t || HighlightLoader)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(HIGHLIGHT_OPTIONS, 8)); };\nHighlightLoader.ɵprov = i0.ɵɵdefineInjectable({ factory: function HighlightLoader_Factory() { return new HighlightLoader(i0.ɵɵinject(i1.DOCUMENT), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8)); }, token: HighlightLoader, providedIn: \"root\" });\nHighlightLoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HIGHLIGHT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightLoader, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HIGHLIGHT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * Map loader response to module object\n */\nconst importModule = (moduleLoader) => {\n    return from(moduleLoader).pipe(filter((module) => !!module && !!module.default), map((module) => module.default));\n};\nconst ɵ0 = importModule;\n\nclass HighlightJS {\n    constructor(_loader, options) {\n        this._loader = _loader;\n        this._hljs = null;\n        // Load highlight.js library on init\n        _loader.ready.pipe().subscribe((hljs) => {\n            this._hljs = hljs;\n            if (options && options.config) {\n                // Set global config if present\n                hljs.configure(options.config);\n                if (hljs.listLanguages().length < 1) {\n                    console.error('[HighlightJS]: No languages were registered!');\n                }\n            }\n        });\n    }\n    // A reference for hljs library\n    get hljs() {\n        return this._hljs;\n    }\n    /**\n     * Core highlighting function.\n     * @param name Accepts a language name, or an alias\n     * @param value A string with the code to highlight.\n     * @param ignore_illegals When present and evaluates to a true value, forces highlighting to finish\n     * even in case of detecting illegal syntax for the language instead of throwing an exception.\n     * @param continuation An optional mode stack representing unfinished parsing.\n     * When present, the function will restart parsing from this state instead of initializing a new one\n     */\n    highlight(name, value, ignore_illegals, continuation) {\n        return this._loader.ready.pipe(map((hljs) => hljs.highlight(name, value, ignore_illegals, continuation)));\n    }\n    /**\n     * Highlighting with language detection.\n     * @param value Accepts a string with the code to highlight\n     * @param languageSubset An optional array of language names and aliases restricting detection to only those languages.\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\n     */\n    highlightAuto(value, languageSubset) {\n        return this._loader.ready.pipe(map((hljs) => hljs.highlightAuto(value, languageSubset)));\n    }\n    /**\n     * Post-processing of the highlighted markup.\n     * Currently consists of replacing indentation TAB characters and using <br> tags instead of new-line characters.\n     * Options are set globally with configure.\n     * @param value Accepts a string with the highlighted markup\n     */\n    fixMarkup(value) {\n        return this._loader.ready.pipe(map((hljs) => hljs.fixMarkup(value)));\n    }\n    /**\n     * Applies highlighting to a DOM node containing code.\n     * The function uses language detection by default but you can specify the language in the class attribute of the DOM node.\n     * See the class reference for all available language names and aliases.\n     * @param block The element to apply highlight on.\n     */\n    highlightBlock(block) {\n        return this._loader.ready.pipe(map((hljs) => hljs.highlightBlock(block)));\n    }\n    /**\n     * Configures global options:\n     * @param config HighlightJs configuration argument\n     */\n    configure(config) {\n        return this._loader.ready.pipe(map((hljs) => hljs.configure(config)));\n    }\n    /**\n     * Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n     */\n    initHighlighting() {\n        return this._loader.ready.pipe(map((hljs) => hljs.initHighlighting()));\n    }\n    /**\n     * Adds new language to the library under the specified name. Used mostly internally.\n     * @param name A string with the name of the language being registered\n     * @param language A function that returns an object which represents the language definition.\n     * The function is passed the hljs object to be able to use common regular expressions defined within it.\n     */\n    registerLanguage(name, language) {\n        return this._loader.ready.pipe(tap((hljs) => hljs.registerLanguage(name, language)));\n    }\n    /**\n     * @return The languages names list.\n     */\n    listLanguages() {\n        return this._loader.ready.pipe(map((hljs) => hljs.listLanguages()));\n    }\n    /**\n     * Looks up a language by name or alias.\n     * @param name Language name\n     * @return The language object if found, undefined otherwise.\n     */\n    getLanguage(name) {\n        return this._loader.ready.pipe(map((hljs) => hljs.getLanguage(name)));\n    }\n    /**\n     * Display line numbers\n     * @param el Code element\n     */\n    lineNumbersBlock(el) {\n        return this._loader.ready.pipe(filter((hljs) => !!hljs.lineNumbersBlock), tap((hljs) => hljs.lineNumbersBlock(el)));\n    }\n}\nHighlightJS.ɵfac = function HighlightJS_Factory(t) { return new (t || HighlightJS)(ɵngcc0.ɵɵinject(HighlightLoader), ɵngcc0.ɵɵinject(HIGHLIGHT_OPTIONS, 8)); };\nHighlightJS.ɵprov = i0.ɵɵdefineInjectable({ factory: function HighlightJS_Factory() { return new HighlightJS(i0.ɵɵinject(HighlightLoader), i0.ɵɵinject(HIGHLIGHT_OPTIONS, 8)); }, token: HighlightJS, providedIn: \"root\" });\nHighlightJS.ctorParameters = () => [\n    { type: HighlightLoader },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HIGHLIGHT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightJS, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: HighlightLoader }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HIGHLIGHT_OPTIONS]\n            }] }]; }, null); })();\n\nclass Highlight {\n    constructor(el, _hljs, _sanitizer, _options) {\n        this._hljs = _hljs;\n        this._sanitizer = _sanitizer;\n        this._options = _options;\n        // Stream that emits when code string is highlighted\n        this.highlighted = new EventEmitter();\n        this._nativeElement = el.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (this.code &&\n            changes.code &&\n            typeof changes.code.currentValue !== 'undefined' &&\n            changes.code.currentValue !== changes.code.previousValue) {\n            this.highlightElement(this.code, this.languages);\n        }\n    }\n    /**\n     * Highlighting with language detection and fix markup.\n     * @param code Accepts a string with the code to highlight\n     * @param languages An optional array of language names and aliases restricting detection to only those languages.\n     * The subset can also be set with configure, but the local parameter overrides the option if set.\n     */\n    highlightElement(code, languages) {\n        // Set code text before highlighting\n        this.setTextContent(code);\n        this._hljs.highlightAuto(code, languages).subscribe((res) => {\n            // Set highlighted code\n            this.setInnerHTML(res.value);\n            // Check if user want to show line numbers\n            if (this.lineNumbers && this._options && this._options.lineNumbersLoader) {\n                this.addLineNumbers();\n            }\n            // Forward highlight response to the highlighted output\n            this.highlighted.emit(res);\n        });\n    }\n    addLineNumbers() {\n        // Clean up line numbers observer\n        this.destroyLineNumbersObserver();\n        animationFrameScheduler.schedule(() => {\n            // Add line numbers\n            this._hljs.lineNumbersBlock(this._nativeElement).subscribe();\n            // If lines count is 1, the line numbers library will not add numbers\n            // Observe changes to add 'hljs-line-numbers' class only when line numbers is added to the code element\n            this._lineNumbersObs = new MutationObserver(() => {\n                if (this._nativeElement.firstElementChild && this._nativeElement.firstElementChild.tagName.toUpperCase() === 'TABLE') {\n                    this._nativeElement.classList.add('hljs-line-numbers');\n                }\n                this.destroyLineNumbersObserver();\n            });\n            this._lineNumbersObs.observe(this._nativeElement, { childList: true });\n        });\n    }\n    destroyLineNumbersObserver() {\n        if (this._lineNumbersObs) {\n            this._lineNumbersObs.disconnect();\n            this._lineNumbersObs = null;\n        }\n    }\n    setTextContent(content) {\n        animationFrameScheduler.schedule(() => this._nativeElement.textContent = content);\n    }\n    setInnerHTML(content) {\n        animationFrameScheduler.schedule(() => this._nativeElement.innerHTML = this._sanitizer.sanitize(SecurityContext.HTML, content) || '');\n    }\n}\nHighlight.ɵfac = function Highlight_Factory(t) { return new (t || Highlight)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(HighlightJS), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(HIGHLIGHT_OPTIONS, 8)); };\nHighlight.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Highlight, selectors: [[\"\", \"highlight\", \"\"]], hostVars: 2, hostBindings: function Highlight_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"hljs\", true);\n    } }, inputs: { code: [\"highlight\", \"code\"], languages: \"languages\", lineNumbers: \"lineNumbers\" }, outputs: { highlighted: \"highlighted\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nHighlight.ctorParameters = () => [\n    { type: ElementRef },\n    { type: HighlightJS },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HIGHLIGHT_OPTIONS,] }] }\n];\nHighlight.propDecorators = {\n    code: [{ type: Input, args: ['highlight',] }],\n    languages: [{ type: Input }],\n    lineNumbers: [{ type: Input }],\n    highlighted: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Highlight, [{\n        type: Directive,\n        args: [{\n                host: {\n                    '[class.hljs]': 'true'\n                },\n                selector: '[highlight]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: HighlightJS }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HIGHLIGHT_OPTIONS]\n            }] }]; }, { highlighted: [{\n            type: Output\n        }], code: [{\n            type: Input,\n            args: ['highlight']\n        }], languages: [{\n            type: Input\n        }], lineNumbers: [{\n            type: Input\n        }] }); })();\n\nclass HighlightModule {\n}\nHighlightModule.ɵfac = function HighlightModule_Factory(t) { return new (t || HighlightModule)(); };\nHighlightModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HighlightModule });\nHighlightModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Highlight],\n                exports: [Highlight]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HighlightModule, { declarations: [Highlight], exports: [Highlight] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HIGHLIGHT_OPTIONS, Highlight, HighlightJS, HighlightLoader, HighlightModule, ɵ0 };\n\n"]},"metadata":{},"sourceType":"module"}