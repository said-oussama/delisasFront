{"ast":null,"code":"import _get from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function timeoutWith(due, withObservable) {\n  var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : async;\n  return function (source) {\n    var absoluteTimeout = isDate(due);\n    var waitFor = absoluteTimeout ? +due - scheduler.now() : Math.abs(due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nvar TimeoutWithOperator = /*#__PURE__*/function () {\n  function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n    _classCallCheck(this, TimeoutWithOperator);\n\n    this.waitFor = waitFor;\n    this.absoluteTimeout = absoluteTimeout;\n    this.withObservable = withObservable;\n    this.scheduler = scheduler;\n  }\n\n  _createClass(TimeoutWithOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n  }]);\n\n  return TimeoutWithOperator;\n}();\n\nvar TimeoutWithSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(TimeoutWithSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(TimeoutWithSubscriber);\n\n  function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n    var _this;\n\n    _classCallCheck(this, TimeoutWithSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.absoluteTimeout = absoluteTimeout;\n    _this.waitFor = waitFor;\n    _this.withObservable = withObservable;\n    _this.scheduler = scheduler;\n    _this.action = null;\n\n    _this.scheduleTimeout();\n\n    return _this;\n  }\n\n  _createClass(TimeoutWithSubscriber, [{\n    key: \"scheduleTimeout\",\n    value: function scheduleTimeout() {\n      var action = this.action;\n\n      if (action) {\n        this.action = action.schedule(this, this.waitFor);\n      } else {\n        this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.absoluteTimeout) {\n        this.scheduleTimeout();\n      }\n\n      _get(_getPrototypeOf(TimeoutWithSubscriber.prototype), \"_next\", this).call(this, value);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.action = null;\n      this.scheduler = null;\n      this.withObservable = null;\n    }\n  }], [{\n    key: \"dispatchTimeout\",\n    value: function dispatchTimeout(subscriber) {\n      var withObservable = subscriber.withObservable;\n\n      subscriber._unsubscribeAndRecycle();\n\n      subscriber.add(subscribeToResult(subscriber, withObservable));\n    }\n  }]);\n\n  return TimeoutWithSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/f/fgs/node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js"],"names":["async","isDate","OuterSubscriber","subscribeToResult","timeoutWith","due","withObservable","scheduler","source","absoluteTimeout","waitFor","now","Math","abs","lift","TimeoutWithOperator","subscriber","subscribe","TimeoutWithSubscriber","destination","action","scheduleTimeout","schedule","add","dispatchTimeout","value","_unsubscribeAndRecycle"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,oBAAtB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,cAA1B,EAA6D;AAAA,MAAnBC,SAAmB,uEAAPP,KAAO;AAChE,SAAO,UAACQ,MAAD,EAAY;AACf,QAAIC,eAAe,GAAGR,MAAM,CAACI,GAAD,CAA5B;AACA,QAAIK,OAAO,GAAGD,eAAe,GAAI,CAACJ,GAAD,GAAOE,SAAS,CAACI,GAAV,EAAX,GAA8BC,IAAI,CAACC,GAAL,CAASR,GAAT,CAA3D;AACA,WAAOG,MAAM,CAACM,IAAP,CAAY,IAAIC,mBAAJ,CAAwBL,OAAxB,EAAiCD,eAAjC,EAAkDH,cAAlD,EAAkEC,SAAlE,CAAZ,CAAP;AACH,GAJD;AAKH;;IACKQ,mB;AACF,+BAAYL,OAAZ,EAAqBD,eAArB,EAAsCH,cAAtC,EAAsDC,SAAtD,EAAiE;AAAA;;AAC7D,SAAKG,OAAL,GAAeA,OAAf;AACA,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKH,cAAL,GAAsBA,cAAtB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;;;WACD,cAAKS,UAAL,EAAiBR,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACS,SAAP,CAAiB,IAAIC,qBAAJ,CAA0BF,UAA1B,EAAsC,KAAKP,eAA3C,EAA4D,KAAKC,OAAjE,EAA0E,KAAKJ,cAA/E,EAA+F,KAAKC,SAApG,CAAjB,CAAP;AACH;;;;;;IAECW,qB;;;;;AACF,iCAAYC,WAAZ,EAAyBV,eAAzB,EAA0CC,OAA1C,EAAmDJ,cAAnD,EAAmEC,SAAnE,EAA8E;AAAA;;AAAA;;AAC1E,8BAAMY,WAAN;AACA,UAAKV,eAAL,GAAuBA,eAAvB;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKJ,cAAL,GAAsBA,cAAtB;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKa,MAAL,GAAc,IAAd;;AACA,UAAKC,eAAL;;AAP0E;AAQ7E;;;;WAMD,2BAAkB;AACd,UAAQD,MAAR,GAAmB,IAAnB,CAAQA,MAAR;;AACA,UAAIA,MAAJ,EAAY;AACR,aAAKA,MAAL,GAAcA,MAAM,CAACE,QAAP,CAAgB,IAAhB,EAAsB,KAAKZ,OAA3B,CAAd;AACH,OAFD,MAGK;AACD,aAAKa,GAAL,CAAS,KAAKH,MAAL,GAAc,KAAKb,SAAL,CAAee,QAAf,CAAwBJ,qBAAqB,CAACM,eAA9C,EAA+D,KAAKd,OAApE,EAA6E,IAA7E,CAAvB;AACH;AACJ;;;WACD,eAAMe,KAAN,EAAa;AACT,UAAI,CAAC,KAAKhB,eAAV,EAA2B;AACvB,aAAKY,eAAL;AACH;;AACD,uFAAYI,KAAZ;AACH;;;WACD,wBAAe;AACX,WAAKL,MAAL,GAAc,IAAd;AACA,WAAKb,SAAL,GAAiB,IAAjB;AACA,WAAKD,cAAL,GAAsB,IAAtB;AACH;;;WAxBD,yBAAuBU,UAAvB,EAAmC;AAC/B,UAAQV,cAAR,GAA2BU,UAA3B,CAAQV,cAAR;;AACAU,MAAAA,UAAU,CAACU,sBAAX;;AACAV,MAAAA,UAAU,CAACO,GAAX,CAAepB,iBAAiB,CAACa,UAAD,EAAaV,cAAb,CAAhC;AACH;;;;EAd+BJ,e","sourcesContent":["import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function timeoutWith(due, withObservable, scheduler = async) {\n    return (source) => {\n        let absoluteTimeout = isDate(due);\n        let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nclass TimeoutWithOperator {\n    constructor(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n}\nclass TimeoutWithSubscriber extends OuterSubscriber {\n    constructor(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        super(destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    static dispatchTimeout(subscriber) {\n        const { withObservable } = subscriber;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    }\n    scheduleTimeout() {\n        const { action } = this;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    }\n    _next(value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        super._next(value);\n    }\n    _unsubscribe() {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}