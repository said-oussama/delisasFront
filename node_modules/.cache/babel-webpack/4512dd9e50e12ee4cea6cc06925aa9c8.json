{"ast":null,"code":"import _classCallCheck from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\n\nvar isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return typeof row === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nfunction jsonsHeaders(array) {\n  return Array.from(new Set(array.map(function (item) {\n    return Object.keys(item);\n  }).reduce(function (a, b) {\n    return [].concat(_toConsumableArray(a), _toConsumableArray(b));\n  }, [])));\n}\n\nfunction jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons); // allow headers to have custom labels, defaulting to having the header data key be the label\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return header in object ? object[header] : '';\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n}\n\nvar elementOrEmpty = function elementOrEmpty(element) {\n  return element || element === 0 ? element : '';\n};\n\nfunction joiner(data) {\n  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  return data.map(function (row, index) {\n    return row.map(function (element) {\n      return '\"' + elementOrEmpty(element) + '\"';\n    }).join(delimiter);\n  }).join(\"\\n\");\n}\n\nfunction arrays2csv(data, headers, delimiter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, delimiter);\n}\n\nfunction jsons2csv(data, headers, delimiter) {\n  return joiner(jsons2arrays(data, headers), delimiter);\n}\n\nfunction string2csv(data, headers, delimiter) {\n  return headers ? \"\".concat(headers.join(delimiter), \"\\n\").concat(data) : data;\n}\n\nfunction toCSV(data, headers, delimiter) {\n  if (isJsons(data)) {\n    return jsons2csv(data, headers, delimiter);\n  }\n\n  if (isArrays(data)) {\n    return arrays2csv(data, headers, delimiter);\n  }\n\n  if (typeof data === 'string') {\n    return string2csv(data, headers, delimiter);\n  }\n\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n}\n\nfunction blob(data) {\n  var uFEFF = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var headers = arguments.length > 2 ? arguments[2] : undefined;\n  var delimiter = arguments.length > 3 ? arguments[3] : undefined;\n  var csv = toCSV(data, headers, delimiter);\n  return new Blob([uFEFF ? \"\\uFEFF\" : '', csv], {\n    type: 'text/csv'\n  });\n}\n\nfunction buildURI(data) {\n  var uFEFF = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var headers = arguments.length > 2 ? arguments[2] : undefined;\n  var delimiter = arguments.length > 3 ? arguments[3] : undefined;\n  return URL.createObjectURL(blob(data, uFEFF, headers, delimiter));\n}\n\nvar CsvDirective = /*#__PURE__*/function () {\n  function CsvDirective(sanitizer) {\n    _classCallCheck(this, CsvDirective);\n\n    this.sanitizer = sanitizer;\n    /** the body of the csv */\n\n    this.data = [];\n    /** Set the seperator between values */\n\n    this.delimiter = ',';\n    /** adds a Byte order mark to setup the csv as UTF-8  */\n\n    this.uFEFF = true;\n    /** filename */\n\n    this.download = 'data.csv';\n    this.target = this.isIEBrowser() ? '' : '_blank';\n  }\n  /** Set the filename of the csv. Default is `data.csv` */\n\n\n  _createClass(CsvDirective, [{\n    key: \"filename\",\n    set: function set(a) {\n      this.download = a;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      // IE handling\n      if (this.isIEBrowser()) {\n        var file = blob(this.data, this.uFEFF, this.headers, this.delimiter);\n        window.navigator.msSaveBlob(file, this.download);\n      }\n    }\n  }, {\n    key: \"isIEBrowser\",\n    value: function isIEBrowser() {\n      return !!window.navigator.msSaveOrOpenBlob;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.href = this.sanitizer.bypassSecurityTrustResourceUrl(buildURI(this.data, this.uFEFF, this.headers, this.delimiter));\n    }\n  }]);\n\n  return CsvDirective;\n}();\n\nCsvDirective.ɵfac = function CsvDirective_Factory(t) {\n  return new (t || CsvDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer));\n};\n\nCsvDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CsvDirective,\n  selectors: [[\"\", \"csvLink\", \"\"]],\n  hostVars: 3,\n  hostBindings: function CsvDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CsvDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"download\", ctx.download)(\"target\", ctx.target)(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrlOrResourceUrl);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    delimiter: \"delimiter\",\n    uFEFF: \"uFEFF\",\n    target: \"target\",\n    filename: \"filename\",\n    headers: \"headers\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nCsvDirective.ctorParameters = function () {\n  return [{\n    type: DomSanitizer\n  }];\n};\n\nCsvDirective.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  headers: [{\n    type: Input\n  }],\n  delimiter: [{\n    type: Input\n  }],\n  filename: [{\n    type: Input\n  }],\n  uFEFF: [{\n    type: Input\n  }],\n  href: [{\n    type: HostBinding\n  }],\n  download: [{\n    type: HostBinding\n  }],\n  target: [{\n    type: Input\n  }, {\n    type: HostBinding\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CsvDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[csvLink]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.DomSanitizer\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    delimiter: [{\n      type: Input\n    }],\n    uFEFF: [{\n      type: Input\n    }],\n    download: [{\n      type: HostBinding\n    }],\n    target: [{\n      type: Input\n    }, {\n      type: HostBinding\n    }],\n    filename: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    href: [{\n      type: HostBinding\n    }],\n    headers: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CsvModule = /*#__PURE__*/_createClass(function CsvModule() {\n  _classCallCheck(this, CsvModule);\n});\n\nCsvModule.ɵfac = function CsvModule_Factory(t) {\n  return new (t || CsvModule)();\n};\n\nCsvModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CsvModule\n});\nCsvModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CsvModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CsvDirective],\n      exports: [CsvDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CsvModule, {\n    declarations: [CsvDirective],\n    exports: [CsvDirective]\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CsvDirective, CsvModule, arrays2csv, blob, buildURI, elementOrEmpty, isArrays, isJsons, joiner, jsons2arrays, jsons2csv, jsonsHeaders, string2csv, toCSV };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/f/fgs/node_modules/@ctrl/ngx-csv/__ivy_ngcc__/fesm2015/ctrl-ngx-csv.js"],"names":["Directive","Input","HostBinding","HostListener","NgModule","DomSanitizer","ɵngcc0","ɵngcc1","isJsons","array","Array","isArray","every","row","isArrays","jsonsHeaders","from","Set","map","item","Object","keys","reduce","a","b","jsons2arrays","jsons","headers","headerLabels","headerKeys","header","label","key","data","object","elementOrEmpty","element","joiner","delimiter","index","join","arrays2csv","jsons2csv","string2csv","toCSV","TypeError","blob","uFEFF","csv","Blob","type","buildURI","URL","createObjectURL","CsvDirective","sanitizer","download","target","isIEBrowser","file","window","navigator","msSaveBlob","msSaveOrOpenBlob","href","bypassSecurityTrustResourceUrl","ɵfac","CsvDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","hostVars","hostBindings","CsvDirective_HostBindings","rf","ctx","ɵɵlistener","CsvDirective_click_HostBindingHandler","onClick","ɵɵhostProperty","ɵɵsanitizeUrlOrResourceUrl","inputs","filename","features","ɵɵNgOnChangesFeature","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","CsvModule","CsvModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nconst isJsons = (array) => Array.isArray(array) &&\n    array.every(row => typeof row === 'object' && !(row instanceof Array));\nconst isArrays = (array) => Array.isArray(array) && array.every(row => Array.isArray(row));\nfunction jsonsHeaders(array) {\n    return Array.from(new Set(array.map(item => Object.keys(item)).reduce((a, b) => [...a, ...b], [])));\n}\nfunction jsons2arrays(jsons, headers) {\n    headers = headers || jsonsHeaders(jsons);\n    // allow headers to have custom labels, defaulting to having the header data key be the label\n    let headerLabels = headers;\n    let headerKeys = headers;\n    if (isJsons(headers)) {\n        headerLabels = headers.map(header => header.label);\n        headerKeys = headers.map(header => header.key);\n    }\n    const data = jsons.map(object => headerKeys.map(header => (header in object ? object[header] : '')));\n    return [headerLabels, ...data];\n}\nconst elementOrEmpty = (element) => element || element === 0 ? element : '';\nfunction joiner(data, delimiter = ',') {\n    return data\n        .map((row, index) => row.map((element) => '\"' + elementOrEmpty(element) + '\"').join(delimiter))\n        .join(`\\n`);\n}\nfunction arrays2csv(data, headers, delimiter) {\n    return joiner(headers ? [headers, ...data] : data, delimiter);\n}\nfunction jsons2csv(data, headers, delimiter) {\n    return joiner(jsons2arrays(data, headers), delimiter);\n}\nfunction string2csv(data, headers, delimiter) {\n    return headers ? `${headers.join(delimiter)}\\n${data}` : data;\n}\nfunction toCSV(data, headers, delimiter) {\n    if (isJsons(data)) {\n        return jsons2csv(data, headers, delimiter);\n    }\n    if (isArrays(data)) {\n        return arrays2csv(data, headers, delimiter);\n    }\n    if (typeof data === 'string') {\n        return string2csv(data, headers, delimiter);\n    }\n    throw new TypeError(`Data should be a \"String\", \"Array of arrays\" OR \"Array of objects\" `);\n}\nfunction blob(data, uFEFF = true, headers, delimiter) {\n    const csv = toCSV(data, headers, delimiter);\n    return new Blob([uFEFF ? '\\uFEFF' : '', csv], { type: 'text/csv' });\n}\nfunction buildURI(data, uFEFF = true, headers, delimiter) {\n    return URL.createObjectURL(blob(data, uFEFF, headers, delimiter));\n}\n\nclass CsvDirective {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n        /** the body of the csv */\n        this.data = [];\n        /** Set the seperator between values */\n        this.delimiter = ',';\n        /** adds a Byte order mark to setup the csv as UTF-8  */\n        this.uFEFF = true;\n        /** filename */\n        this.download = 'data.csv';\n        this.target = this.isIEBrowser() ? '' : '_blank';\n    }\n    /** Set the filename of the csv. Default is `data.csv` */\n    set filename(a) {\n        this.download = a;\n    }\n    onClick() {\n        // IE handling\n        if (this.isIEBrowser()) {\n            const file = blob(this.data, this.uFEFF, this.headers, this.delimiter);\n            window.navigator.msSaveBlob(file, this.download);\n        }\n    }\n    isIEBrowser() {\n        return !!window.navigator.msSaveOrOpenBlob;\n    }\n    ngOnChanges() {\n        this.href = this.sanitizer.bypassSecurityTrustResourceUrl(buildURI(this.data, this.uFEFF, this.headers, this.delimiter));\n    }\n}\nCsvDirective.ɵfac = function CsvDirective_Factory(t) { return new (t || CsvDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };\nCsvDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CsvDirective, selectors: [[\"\", \"csvLink\", \"\"]], hostVars: 3, hostBindings: function CsvDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CsvDirective_click_HostBindingHandler() { return ctx.onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"download\", ctx.download)(\"target\", ctx.target)(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrlOrResourceUrl);\n    } }, inputs: { data: \"data\", delimiter: \"delimiter\", uFEFF: \"uFEFF\", target: \"target\", filename: \"filename\", headers: \"headers\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCsvDirective.ctorParameters = () => [\n    { type: DomSanitizer }\n];\nCsvDirective.propDecorators = {\n    data: [{ type: Input }],\n    headers: [{ type: Input }],\n    delimiter: [{ type: Input }],\n    filename: [{ type: Input }],\n    uFEFF: [{ type: Input }],\n    href: [{ type: HostBinding }],\n    download: [{ type: HostBinding }],\n    target: [{ type: Input }, { type: HostBinding }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CsvDirective, [{\n        type: Directive,\n        args: [{ selector: '[csvLink]' }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { data: [{\n            type: Input\n        }], delimiter: [{\n            type: Input\n        }], uFEFF: [{\n            type: Input\n        }], download: [{\n            type: HostBinding\n        }], target: [{\n            type: Input\n        }, {\n            type: HostBinding\n        }], filename: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], href: [{\n            type: HostBinding\n        }], headers: [{\n            type: Input\n        }] }); })();\n\nclass CsvModule {\n}\nCsvModule.ɵfac = function CsvModule_Factory(t) { return new (t || CsvModule)(); };\nCsvModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CsvModule });\nCsvModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CsvModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CsvDirective],\n                exports: [CsvDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CsvModule, { declarations: [CsvDirective], exports: [CsvDirective] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CsvDirective, CsvModule, arrays2csv, blob, buildURI, elementOrEmpty, isArrays, isJsons, joiner, jsons2arrays, jsons2csv, jsonsHeaders, string2csv, toCSV };\n\n"]},"metadata":{},"sourceType":"module"}