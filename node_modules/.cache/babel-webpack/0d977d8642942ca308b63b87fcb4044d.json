{"ast":null,"code":"import _inherits from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/f/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function audit(durationSelector) {\n  return function auditOperatorFunction(source) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nvar AuditOperator = /*#__PURE__*/function () {\n  function AuditOperator(durationSelector) {\n    _classCallCheck(this, AuditOperator);\n\n    this.durationSelector = durationSelector;\n  }\n\n  _createClass(AuditOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n  }]);\n\n  return AuditOperator;\n}();\n\nvar AuditSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(AuditSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(AuditSubscriber);\n\n  function AuditSubscriber(destination, durationSelector) {\n    var _this;\n\n    _classCallCheck(this, AuditSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.durationSelector = durationSelector;\n    _this.hasValue = false;\n    return _this;\n  }\n\n  _createClass(AuditSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.value = value;\n      this.hasValue = true;\n\n      if (!this.throttled) {\n        var duration;\n\n        try {\n          var durationSelector = this.durationSelector;\n          duration = durationSelector(value);\n        } catch (err) {\n          return this.destination.error(err);\n        }\n\n        var innerSubscription = subscribeToResult(this, duration);\n\n        if (!innerSubscription || innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }, {\n    key: \"clearThrottle\",\n    value: function clearThrottle() {\n      var value = this.value,\n          hasValue = this.hasValue,\n          throttled = this.throttled;\n\n      if (throttled) {\n        this.remove(throttled);\n        this.throttled = null;\n        throttled.unsubscribe();\n      }\n\n      if (hasValue) {\n        this.value = null;\n        this.hasValue = false;\n        this.destination.next(value);\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {\n      this.clearThrottle();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.clearThrottle();\n    }\n  }]);\n\n  return AuditSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/f/fgs/node_modules/rxjs/_esm2015/internal/operators/audit.js"],"names":["OuterSubscriber","subscribeToResult","audit","durationSelector","auditOperatorFunction","source","lift","AuditOperator","subscriber","subscribe","AuditSubscriber","destination","hasValue","value","throttled","duration","err","error","innerSubscription","closed","clearThrottle","add","remove","unsubscribe","next","outerValue","innerValue","outerIndex","innerIndex"],"mappings":";;;;AAAA,SAASA,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,KAAT,CAAeC,gBAAf,EAAiC;AACpC,SAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AAC1C,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBJ,gBAAlB,CAAZ,CAAP;AACH,GAFD;AAGH;;IACKI,a;AACF,yBAAYJ,gBAAZ,EAA8B;AAAA;;AAC1B,SAAKA,gBAAL,GAAwBA,gBAAxB;AACH;;;;WACD,cAAKK,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKL,gBAArC,CAAjB,CAAP;AACH;;;;;;IAECO,e;;;;;AACF,2BAAYC,WAAZ,EAAyBR,gBAAzB,EAA2C;AAAA;;AAAA;;AACvC,8BAAMQ,WAAN;AACA,UAAKR,gBAAL,GAAwBA,gBAAxB;AACA,UAAKS,QAAL,GAAgB,KAAhB;AAHuC;AAI1C;;;;WACD,eAAMC,KAAN,EAAa;AACT,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKD,QAAL,GAAgB,IAAhB;;AACA,UAAI,CAAC,KAAKE,SAAV,EAAqB;AACjB,YAAIC,QAAJ;;AACA,YAAI;AACA,cAAQZ,gBAAR,GAA6B,IAA7B,CAAQA,gBAAR;AACAY,UAAAA,QAAQ,GAAGZ,gBAAgB,CAACU,KAAD,CAA3B;AACH,SAHD,CAIA,OAAOG,GAAP,EAAY;AACR,iBAAO,KAAKL,WAAL,CAAiBM,KAAjB,CAAuBD,GAAvB,CAAP;AACH;;AACD,YAAME,iBAAiB,GAAGjB,iBAAiB,CAAC,IAAD,EAAOc,QAAP,CAA3C;;AACA,YAAI,CAACG,iBAAD,IAAsBA,iBAAiB,CAACC,MAA5C,EAAoD;AAChD,eAAKC,aAAL;AACH,SAFD,MAGK;AACD,eAAKC,GAAL,CAAS,KAAKP,SAAL,GAAiBI,iBAA1B;AACH;AACJ;AACJ;;;WACD,yBAAgB;AACZ,UAAQL,KAAR,GAAuC,IAAvC,CAAQA,KAAR;AAAA,UAAeD,QAAf,GAAuC,IAAvC,CAAeA,QAAf;AAAA,UAAyBE,SAAzB,GAAuC,IAAvC,CAAyBA,SAAzB;;AACA,UAAIA,SAAJ,EAAe;AACX,aAAKQ,MAAL,CAAYR,SAAZ;AACA,aAAKA,SAAL,GAAiB,IAAjB;AACAA,QAAAA,SAAS,CAACS,WAAV;AACH;;AACD,UAAIX,QAAJ,EAAc;AACV,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKD,QAAL,GAAgB,KAAhB;AACA,aAAKD,WAAL,CAAiBa,IAAjB,CAAsBX,KAAtB;AACH;AACJ;;;WACD,oBAAWY,UAAX,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,UAA/C,EAA2D;AACvD,WAAKR,aAAL;AACH;;;WACD,0BAAiB;AACb,WAAKA,aAAL;AACH;;;;EA7CyBpB,e","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass AuditSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            let duration;\n            try {\n                const { durationSelector } = this;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            const innerSubscription = subscribeToResult(this, duration);\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}