{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nfunction isElement(node) {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\n\nvar FileLikeObject = /*#__PURE__*/function () {\n  /**\n   * @param {?} fileOrInput\n   */\n  function FileLikeObject(fileOrInput) {\n    _classCallCheck(this, FileLikeObject);\n\n    this.rawFile = fileOrInput;\n    /** @type {?} */\n\n    var isInput = isElement(fileOrInput);\n    /** @type {?} */\n\n    var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    /** @type {?} */\n\n    var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    /** @type {?} */\n\n    var method = '_createFrom' + postfix;\n\n    /** @type {?} */\n    this[method](fakePathOrObject);\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n\n\n  _createClass(FileLikeObject, [{\n    key: \"_createFromFakePath\",\n    value: function _createFromFakePath(path) {\n      this.lastModifiedDate = void 0;\n      this.size = void 0;\n      this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n      this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createFromObject\",\n    value: function _createFromObject(object) {\n      this.size = object.size;\n      this.type = object.type;\n      this.name = object.name;\n    }\n  }]);\n\n  return FileLikeObject;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileLikeObject.prototype.lastModifiedDate;\n  /** @type {?} */\n\n  FileLikeObject.prototype.size;\n  /** @type {?} */\n\n  FileLikeObject.prototype.type;\n  /** @type {?} */\n\n  FileLikeObject.prototype.name;\n  /** @type {?} */\n\n  FileLikeObject.prototype.rawFile;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileItem = /*#__PURE__*/function () {\n  /**\n   * @param {?} uploader\n   * @param {?} some\n   * @param {?} options\n   */\n  function FileItem(uploader, some, options) {\n    _classCallCheck(this, FileItem);\n\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n\n    this.url = uploader.options.url;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileItem, [{\n    key: \"upload\",\n    value: function upload() {\n      try {\n        this.uploader.uploadItem(this);\n      } catch (e) {\n        this.uploader._onCompleteItem(this, '', 0, {});\n\n        this.uploader._onErrorItem(this, '', 0, {});\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBeforeUpload\",\n    value: function onBeforeUpload() {\n      return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBuildForm\",\n    value: function onBuildForm(form) {\n      return {\n        form: form\n      };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgress\",\n    value: function onProgress(progress) {\n      return {\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCancel\",\n    value: function onCancel(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onComplete\",\n    value: function onComplete(response, status, headers) {\n      return {\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBeforeUpload\",\n    value: function _onBeforeUpload() {\n      this.isReady = true;\n      this.isUploading = true;\n      this.isUploaded = false;\n      this.isSuccess = false;\n      this.isCancel = false;\n      this.isError = false;\n      this.progress = 0;\n      this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBuildForm\",\n    value: function _onBuildForm(form) {\n      this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress(progress) {\n      this.progress = progress;\n      this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSuccess\",\n    value: function _onSuccess(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = true;\n      this.isSuccess = true;\n      this.isCancel = false;\n      this.isError = false;\n      this.progress = 100;\n      this.index = void 0;\n      this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onError\",\n    value: function _onError(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = true;\n      this.isSuccess = false;\n      this.isCancel = false;\n      this.isError = true;\n      this.progress = 0;\n      this.index = void 0;\n      this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCancel\",\n    value: function _onCancel(response, status, headers) {\n      this.isReady = false;\n      this.isUploading = false;\n      this.isUploaded = false;\n      this.isSuccess = false;\n      this.isCancel = true;\n      this.isError = false;\n      this.progress = 0;\n      this.index = void 0;\n      this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onComplete\",\n    value: function _onComplete(response, status, headers) {\n      this.onComplete(response, status, headers);\n\n      if (this.uploader.options.removeAfterUpload) {\n        this.remove();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_prepareToUploading\",\n    value: function _prepareToUploading() {\n      this.index = this.index || ++this.uploader._nextIndex;\n      this.isReady = true;\n    }\n  }]);\n\n  return FileItem;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileItem.prototype.file;\n  /** @type {?} */\n\n  FileItem.prototype._file;\n  /** @type {?} */\n\n  FileItem.prototype.alias;\n  /** @type {?} */\n\n  FileItem.prototype.url;\n  /** @type {?} */\n\n  FileItem.prototype.method;\n  /** @type {?} */\n\n  FileItem.prototype.headers;\n  /** @type {?} */\n\n  FileItem.prototype.withCredentials;\n  /** @type {?} */\n\n  FileItem.prototype.formData;\n  /** @type {?} */\n\n  FileItem.prototype.isReady;\n  /** @type {?} */\n\n  FileItem.prototype.isUploading;\n  /** @type {?} */\n\n  FileItem.prototype.isUploaded;\n  /** @type {?} */\n\n  FileItem.prototype.isSuccess;\n  /** @type {?} */\n\n  FileItem.prototype.isCancel;\n  /** @type {?} */\n\n  FileItem.prototype.isError;\n  /** @type {?} */\n\n  FileItem.prototype.progress;\n  /** @type {?} */\n\n  FileItem.prototype.index;\n  /** @type {?} */\n\n  FileItem.prototype._xhr;\n  /** @type {?} */\n\n  FileItem.prototype._form;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.uploader;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.some;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileItem.prototype.options;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileType = /*#__PURE__*/function () {\n  function FileType() {\n    _classCallCheck(this, FileType);\n  }\n\n  _createClass(FileType, null, [{\n    key: \"getMimeClass\",\n    value:\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    function getMimeClass(file) {\n      /** @type {?} */\n      var mimeClass = 'application';\n\n      if (this.mime_psd.indexOf(file.type) !== -1) {\n        mimeClass = 'image';\n      } else if (file.type.match('image.*')) {\n        mimeClass = 'image';\n      } else if (file.type.match('video.*')) {\n        mimeClass = 'video';\n      } else if (file.type.match('audio.*')) {\n        mimeClass = 'audio';\n      } else if (file.type === 'application/pdf') {\n        mimeClass = 'pdf';\n      } else if (this.mime_compress.indexOf(file.type) !== -1) {\n        mimeClass = 'compress';\n      } else if (this.mime_doc.indexOf(file.type) !== -1) {\n        mimeClass = 'doc';\n      } else if (this.mime_xsl.indexOf(file.type) !== -1) {\n        mimeClass = 'xls';\n      } else if (this.mime_ppt.indexOf(file.type) !== -1) {\n        mimeClass = 'ppt';\n      }\n\n      if (mimeClass === 'application') {\n        mimeClass = this.fileTypeDetection(file.name);\n      }\n\n      return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n\n  }, {\n    key: \"fileTypeDetection\",\n    value: function fileTypeDetection(inputFilename) {\n      /** @type {?} */\n      var types = {\n        'jpg': 'image',\n        'jpeg': 'image',\n        'tif': 'image',\n        'psd': 'image',\n        'bmp': 'image',\n        'png': 'image',\n        'nef': 'image',\n        'tiff': 'image',\n        'cr2': 'image',\n        'dwg': 'image',\n        'cdr': 'image',\n        'ai': 'image',\n        'indd': 'image',\n        'pin': 'image',\n        'cdp': 'image',\n        'skp': 'image',\n        'stp': 'image',\n        '3dm': 'image',\n        'mp3': 'audio',\n        'wav': 'audio',\n        'wma': 'audio',\n        'mod': 'audio',\n        'm4a': 'audio',\n        'compress': 'compress',\n        'zip': 'compress',\n        'rar': 'compress',\n        '7z': 'compress',\n        'lz': 'compress',\n        'z01': 'compress',\n        'bz2': 'compress',\n        'gz': 'compress',\n        'pdf': 'pdf',\n        'xls': 'xls',\n        'xlsx': 'xls',\n        'ods': 'xls',\n        'mp4': 'video',\n        'avi': 'video',\n        'wmv': 'video',\n        'mpg': 'video',\n        'mts': 'video',\n        'flv': 'video',\n        '3gp': 'video',\n        'vob': 'video',\n        'm4v': 'video',\n        'mpeg': 'video',\n        'm2ts': 'video',\n        'mov': 'video',\n        'doc': 'doc',\n        'docx': 'doc',\n        'eps': 'doc',\n        'txt': 'doc',\n        'odt': 'doc',\n        'rtf': 'doc',\n        'ppt': 'ppt',\n        'pptx': 'ppt',\n        'pps': 'ppt',\n        'ppsx': 'ppt',\n        'odp': 'ppt'\n      };\n      /** @type {?} */\n\n      var chunks = inputFilename.split('.');\n\n      if (chunks.length < 2) {\n        return 'application';\n      }\n      /** @type {?} */\n\n\n      var extension = chunks[chunks.length - 1].toLowerCase();\n\n      if (types[extension] === undefined) {\n        return 'application';\n      } else {\n        return types[extension];\n      }\n    }\n  }]);\n\n  return FileType;\n}();\n/*  MS office  */\n\n\nFileType.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'];\nFileType.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'];\nFileType.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n/* PSD */\n\nFileType.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n/* Compressed files */\n\nFileType.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\n\nif (false) {\n  /** @type {?} */\n  FileType.mime_doc;\n  /** @type {?} */\n\n  FileType.mime_xsl;\n  /** @type {?} */\n\n  FileType.mime_ppt;\n  /** @type {?} */\n\n  FileType.mime_psd;\n  /** @type {?} */\n\n  FileType.mime_compress;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction _isFile(value) {\n  return File && value instanceof File;\n}\n/**\n * @record\n */\n\n\nfunction Headers() {}\n\nif (false) {\n  /** @type {?} */\n  Headers.prototype.name;\n  /** @type {?} */\n\n  Headers.prototype.value;\n}\n/**\n * @record\n */\n\n\nfunction FileUploaderOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.allowedMimeType;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.allowedFileType;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.autoUpload;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.isHTML5;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.filters;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.headers;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.method;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.authToken;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.maxFileSize;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.queueLimit;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.removeAfterUpload;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.url;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.disableMultipart;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.itemAlias;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.authTokenHeader;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.additionalParameter;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.parametersBeforeFiles;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.formatDataFunction;\n  /** @type {?|undefined} */\n\n  FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\n\nvar FileUploader = /*#__PURE__*/function () {\n  /**\n   * @param {?} options\n   */\n  function FileUploader(options) {\n    _classCallCheck(this, FileUploader);\n\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction:\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function formatDataFunction(item) {\n        return item._file;\n      },\n      formatDataFunctionIsAsync: false\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  _createClass(FileUploader, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = Object.assign(this.options, options);\n      this.authToken = this.options.authToken;\n      this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n      this.autoUpload = this.options.autoUpload;\n      this.options.filters.unshift({\n        name: 'queueLimit',\n        fn: this._queueLimitFilter\n      });\n\n      if (this.options.maxFileSize) {\n        this.options.filters.unshift({\n          name: 'fileSize',\n          fn: this._fileSizeFilter\n        });\n      }\n\n      if (this.options.allowedFileType) {\n        this.options.filters.unshift({\n          name: 'fileType',\n          fn: this._fileTypeFilter\n        });\n      }\n\n      if (this.options.allowedMimeType) {\n        this.options.filters.unshift({\n          name: 'mimeType',\n          fn: this._mimeTypeFilter\n        });\n      }\n\n      for (var i = 0; i < this.queue.length; i++) {\n        this.queue[i].url = this.options.url;\n      }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n\n  }, {\n    key: \"addToQueue\",\n    value: function addToQueue(files, options, filters) {\n      var _this = this;\n\n      /** @type {?} */\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var file = _step.value;\n          list.push(file);\n        }\n        /** @type {?} */\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var arrayOfFilters = this._getFilters(filters);\n      /** @type {?} */\n\n\n      var count = this.queue.length;\n      /** @type {?} */\n\n      var addedFileItems = [];\n      list.map(\n      /**\n      * @param {?} some\n      * @return {?}\n      */\n      function (some) {\n        if (!options) {\n          options = _this.options;\n        }\n        /** @type {?} */\n\n\n        var temp = new FileLikeObject(some);\n\n        if (_this._isValidFile(temp, arrayOfFilters, options)) {\n          /** @type {?} */\n          var fileItem = new FileItem(_this, some, options);\n          addedFileItems.push(fileItem);\n\n          _this.queue.push(fileItem);\n\n          _this._onAfterAddingFile(fileItem);\n        } else {\n          /** @type {?} */\n          var filter = arrayOfFilters[_this._failFilterIndex];\n\n          _this._onWhenAddingFileFailed(temp, filter, options);\n        }\n      });\n\n      if (this.queue.length !== count) {\n        this._onAfterAddingAll(addedFileItems);\n\n        this.progress = this._getTotalProgress();\n      }\n\n      this._render();\n\n      if (this.options.autoUpload) {\n        this.uploadAll();\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFromQueue\",\n    value: function removeFromQueue(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n\n      if (item.isUploading) {\n        item.cancel();\n      }\n\n      this.queue.splice(index, 1);\n      this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearQueue\",\n    value: function clearQueue() {\n      while (this.queue.length) {\n        this.queue[0].remove();\n      }\n\n      this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"uploadItem\",\n    value: function uploadItem(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n      /** @type {?} */\n\n      var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n      item._prepareToUploading();\n\n      if (this.isUploading) {\n        return;\n      }\n\n      this.isUploading = true;\n\n      /** @type {?} */\n      this[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancelItem\",\n    value: function cancelItem(value) {\n      /** @type {?} */\n      var index = this.getIndexOfItem(value);\n      /** @type {?} */\n\n      var item = this.queue[index];\n      /** @type {?} */\n\n      var prop = this.options.isHTML5 ? item._xhr : item._form;\n\n      if (item && item.isUploading) {\n        prop.abort();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"uploadAll\",\n    value: function uploadAll() {\n      /** @type {?} */\n      var items = this.getNotUploadedItems().filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return !item.isUploading;\n      });\n\n      if (!items.length) {\n        return;\n      }\n\n      items.map(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item._prepareToUploading();\n      });\n      items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"cancelAll\",\n    value: function cancelAll() {\n      /** @type {?} */\n      var items = this.getNotUploadedItems();\n      items.map(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item.cancel();\n      });\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isFile\",\n    value: function isFile(value) {\n      return _isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isFileLikeObject\",\n    value: function isFileLikeObject(value) {\n      return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"getIndexOfItem\",\n    value: function getIndexOfItem(value) {\n      return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNotUploadedItems\",\n    value: function getNotUploadedItems() {\n      return this.queue.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return !item.isUploaded;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getReadyItems\",\n    value: function getReadyItems() {\n      return this.queue.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item.isReady && !item.isUploading;\n      }).sort(\n      /**\n      * @param {?} item1\n      * @param {?} item2\n      * @return {?}\n      */\n      function (item1, item2) {\n        return item1.index - item2.index;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n\n  }, {\n    key: \"onAfterAddingAll\",\n    value: function onAfterAddingAll(fileItems) {\n      return {\n        fileItems: fileItems\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBuildItemForm\",\n    value: function onBuildItemForm(fileItem, form) {\n      return {\n        fileItem: fileItem,\n        form: form\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"onAfterAddingFile\",\n    value: function onAfterAddingFile(fileItem) {\n      return {\n        fileItem: fileItem\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"onWhenAddingFileFailed\",\n    value: function onWhenAddingFileFailed(item, filter, options) {\n      return {\n        item: item,\n        filter: filter,\n        options: options\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n\n  }, {\n    key: \"onBeforeUploadItem\",\n    value: function onBeforeUploadItem(fileItem) {\n      return {\n        fileItem: fileItem\n      };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgressItem\",\n    value: function onProgressItem(fileItem, progress) {\n      return {\n        fileItem: fileItem,\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"onProgressAll\",\n    value: function onProgressAll(progress) {\n      return {\n        progress: progress\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onSuccessItem\",\n    value: function onSuccessItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onErrorItem\",\n    value: function onErrorItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCancelItem\",\n    value: function onCancelItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCompleteItem\",\n    value: function onCompleteItem(item, response, status, headers) {\n      return {\n        item: item,\n        response: response,\n        status: status,\n        headers: headers\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCompleteAll\",\n    value: function onCompleteAll() {\n      return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_mimeTypeFilter\",\n    value: function _mimeTypeFilter(item) {\n      return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_fileSizeFilter\",\n    value: function _fileSizeFilter(item) {\n      return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_fileTypeFilter\",\n    value: function _fileTypeFilter(item) {\n      return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onErrorItem\",\n    value: function _onErrorItem(item, response, status, headers) {\n      item._onError(response, status, headers);\n\n      this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCompleteItem\",\n    value: function _onCompleteItem(item, response, status, headers) {\n      item._onComplete(response, status, headers);\n\n      this.onCompleteItem(item, response, status, headers);\n      /** @type {?} */\n\n      var nextItem = this.getReadyItems()[0];\n      this.isUploading = false;\n\n      if (nextItem) {\n        nextItem.upload();\n        return;\n      }\n\n      this.onCompleteAll();\n      this.progress = this._getTotalProgress();\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n\n  }, {\n    key: \"_headersGetter\",\n    value: function _headersGetter(parsedHeaders) {\n      return (\n        /**\n        * @param {?} name\n        * @return {?}\n        */\n        function (name) {\n          if (name) {\n            return parsedHeaders[name.toLowerCase()] || void 0;\n          }\n\n          return parsedHeaders;\n        }\n      );\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_xhrTransport\",\n    value: function _xhrTransport(item) {\n      var _this2 = this;\n\n      /** @type {?} */\n      var that = this;\n      /** @type {?} */\n\n      var xhr = item._xhr = new XMLHttpRequest();\n      /** @type {?} */\n\n      var sendable;\n\n      this._onBeforeUploadItem(item);\n\n      if (typeof item._file.size !== 'number') {\n        throw new TypeError('The file specified is no longer valid');\n      }\n\n      if (!this.options.disableMultipart) {\n        sendable = new FormData();\n\n        this._onBuildItemForm(item, sendable);\n        /** @type {?} */\n\n\n        var appendFile =\n        /**\n        * @return {?}\n        */\n        function appendFile() {\n          return sendable.append(item.alias, item._file, item.file.name);\n        };\n\n        if (!this.options.parametersBeforeFiles) {\n          appendFile();\n        } // For AWS, Additional Parameters must come BEFORE Files\n\n\n        if (this.options.additionalParameter !== undefined) {\n          Object.keys(this.options.additionalParameter).forEach(\n          /**\n          * @param {?} key\n          * @return {?}\n          */\n          function (key) {\n            /** @type {?} */\n            var paramVal = _this2.options.additionalParameter[key]; // Allow an additional parameter to include the filename\n\n            if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n              paramVal = paramVal.replace('{{file_name}}', item.file.name);\n            }\n\n            sendable.append(key, paramVal);\n          });\n        }\n\n        if (this.options.parametersBeforeFiles) {\n          appendFile();\n        }\n      } else {\n        sendable = this.options.formatDataFunction(item);\n      }\n\n      xhr.upload.onprogress =\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        /** @type {?} */\n        var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\n        _this2._onProgressItem(item, progress);\n      };\n\n      xhr.onload =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n        /** @type {?} */\n\n\n        var gist = _this2._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n        /** @type {?} */\n\n        var method = '_on' + gist + 'Item';\n\n        /** @type {?} */\n        _this2[method](item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.onerror =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n\n        _this2._onErrorItem(item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.onabort =\n      /**\n      * @return {?}\n      */\n      function () {\n        /** @type {?} */\n        var headers = _this2._parseHeaders(xhr.getAllResponseHeaders());\n        /** @type {?} */\n\n\n        var response = _this2._transformResponse(xhr.response, headers);\n\n        _this2._onCancelItem(item, response, xhr.status, headers);\n\n        _this2._onCompleteItem(item, response, xhr.status, headers);\n      };\n\n      xhr.open(item.method, item.url, true);\n      xhr.withCredentials = item.withCredentials;\n\n      if (this.options.headers) {\n        var _iterator2 = _createForOfIteratorHelper(this.options.headers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var header = _step2.value;\n            xhr.setRequestHeader(header.name, header.value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (item.headers.length) {\n        var _iterator3 = _createForOfIteratorHelper(item.headers),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _header = _step3.value;\n            xhr.setRequestHeader(_header.name, _header.value);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      if (this.authToken) {\n        xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n      }\n\n      xhr.onreadystatechange =\n      /**\n      * @return {?}\n      */\n      function () {\n        if (xhr.readyState == XMLHttpRequest.DONE) {\n          that.response.emit(xhr.responseText);\n        }\n      };\n\n      if (this.options.formatDataFunctionIsAsync) {\n        sendable.then(\n        /**\n        * @param {?} result\n        * @return {?}\n        */\n        function (result) {\n          return xhr.send(JSON.stringify(result));\n        });\n      } else {\n        xhr.send(sendable);\n      }\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTotalProgress\",\n    value: function _getTotalProgress() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.options.removeAfterUpload) {\n        return value;\n      }\n      /** @type {?} */\n\n\n      var notUploaded = this.getNotUploadedItems().length;\n      /** @type {?} */\n\n      var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n      /** @type {?} */\n\n      var ratio = 100 / this.queue.length;\n      /** @type {?} */\n\n      var current = value * ratio / 100;\n      return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getFilters\",\n    value: function _getFilters(filters) {\n      if (!filters) {\n        return this.options.filters;\n      }\n\n      if (Array.isArray(filters)) {\n        return filters;\n      }\n\n      if (typeof filters === 'string') {\n        /** @type {?} */\n        var names = filters.match(/[^\\s,]+/g);\n        return this.options.filters.filter(\n        /**\n        * @param {?} filter\n        * @return {?}\n        */\n        function (filter) {\n          return names.indexOf(filter.name) !== -1;\n        });\n      }\n\n      return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"_queueLimitFilter\",\n    value: function _queueLimitFilter() {\n      return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isValidFile\",\n    value: function _isValidFile(file, filters, options) {\n      var _this3 = this;\n\n      this._failFilterIndex = -1;\n      return !filters.length ? true : filters.every(\n      /**\n      * @param {?} filter\n      * @return {?}\n      */\n      function (filter) {\n        _this3._failFilterIndex++;\n        return filter.fn.call(_this3, file, options);\n      });\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isSuccessCode\",\n    value: function _isSuccessCode(status) {\n      return status >= 200 && status < 300 || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_transformResponse\",\n    value: function _transformResponse(response, headers) {\n      return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_parseHeaders\",\n    value: function _parseHeaders(headers) {\n      /** @type {?} */\n      var parsed = {};\n      /** @type {?} */\n\n      var key;\n      /** @type {?} */\n\n      var val;\n      /** @type {?} */\n\n      var i;\n\n      if (!headers) {\n        return parsed;\n      }\n\n      headers.split('\\n').map(\n      /**\n      * @param {?} line\n      * @return {?}\n      */\n      function (line) {\n        i = line.indexOf(':');\n        key = line.slice(0, i).trim().toLowerCase();\n        val = line.slice(i + 1).trim();\n\n        if (key) {\n          parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n        }\n      });\n      return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onWhenAddingFileFailed\",\n    value: function _onWhenAddingFileFailed(item, filter, options) {\n      this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAfterAddingFile\",\n    value: function _onAfterAddingFile(item) {\n      this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onAfterAddingAll\",\n    value: function _onAfterAddingAll(items) {\n      this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBeforeUploadItem\",\n    value: function _onBeforeUploadItem(item) {\n      item._onBeforeUpload();\n\n      this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onBuildItemForm\",\n    value: function _onBuildItemForm(item, form) {\n      item._onBuildForm(form);\n\n      this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onProgressItem\",\n    value: function _onProgressItem(item, progress) {\n      /** @type {?} */\n      var total = this._getTotalProgress(progress);\n\n      this.progress = total;\n\n      item._onProgress(progress);\n\n      this.onProgressItem(item, progress);\n      this.onProgressAll(total);\n\n      this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onSuccessItem\",\n    value: function _onSuccessItem(item, response, status, headers) {\n      item._onSuccess(response, status, headers);\n\n      this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n\n  }, {\n    key: \"_onCancelItem\",\n    value: function _onCancelItem(item, response, status, headers) {\n      item._onCancel(response, status, headers);\n\n      this.onCancelItem(item, response, status, headers);\n    }\n  }]);\n\n  return FileUploader;\n}();\n\nif (false) {\n  /** @type {?} */\n  FileUploader.prototype.authToken;\n  /** @type {?} */\n\n  FileUploader.prototype.isUploading;\n  /** @type {?} */\n\n  FileUploader.prototype.queue;\n  /** @type {?} */\n\n  FileUploader.prototype.progress;\n  /** @type {?} */\n\n  FileUploader.prototype._nextIndex;\n  /** @type {?} */\n\n  FileUploader.prototype.autoUpload;\n  /** @type {?} */\n\n  FileUploader.prototype.authTokenHeader;\n  /** @type {?} */\n\n  FileUploader.prototype.response;\n  /** @type {?} */\n\n  FileUploader.prototype.options;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileUploader.prototype._failFilterIndex;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileSelectDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   */\n  function FileSelectDirective(element) {\n    _classCallCheck(this, FileSelectDirective);\n\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileSelectDirective, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return {};\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isEmptyAfterSelection\",\n    value: function isEmptyAfterSelection() {\n      return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      /** @type {?} */\n      var files = this.element.nativeElement.files;\n      /** @type {?} */\n\n      var options = this.getOptions();\n      /** @type {?} */\n\n      var filters = this.getFilters();\n      this.uploader.addToQueue(files, options, filters);\n      this.onFileSelected.emit(files);\n\n      if (this.isEmptyAfterSelection()) {\n        this.element.nativeElement.value = '';\n      }\n    }\n  }]);\n\n  return FileSelectDirective;\n}();\n\nFileSelectDirective.Éµfac = function FileSelectDirective_Factory(t) {\n  return new (t || FileSelectDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\n\nFileSelectDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: FileSelectDirective,\n  selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n  hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    onFileSelected: \"onFileSelected\"\n  }\n});\n/** @nocollapse */\n\nFileSelectDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nFileSelectDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  onFileSelected: [{\n    type: Output\n  }],\n  onChange: [{\n    type: HostListener,\n    args: ['change']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    onFileSelected: [{\n      type: Output\n    }],\n\n    /**\n     * @return {?}\n     */\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  FileSelectDirective.prototype.uploader;\n  /** @type {?} */\n\n  FileSelectDirective.prototype.onFileSelected;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileSelectDirective.prototype.element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileDropDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   */\n  function FileDropDirective(element) {\n    _classCallCheck(this, FileDropDirective);\n\n    this.fileOver = new EventEmitter();\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(FileDropDirective, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      /** @type {?} */\n      var transfer = this._getTransfer(event);\n\n      if (!transfer) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var options = this.getOptions();\n      /** @type {?} */\n\n      var filters = this.getFilters();\n\n      this._preventAndStop(event);\n\n      this.uploader.addToQueue(transfer.files, options, filters);\n      this.fileOver.emit(false);\n      this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      /** @type {?} */\n      var transfer = this._getTransfer(event);\n\n      if (!this._haveFiles(transfer.types)) {\n        return;\n      }\n\n      transfer.dropEffect = 'copy';\n\n      this._preventAndStop(event);\n\n      this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (\n      /** @type {?} */\n      this.element) {\n        if (event.currentTarget ===\n        /** @type {?} */\n        this.element[0]) {\n          return;\n        }\n      }\n\n      this._preventAndStop(event);\n\n      this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTransfer\",\n    value: function _getTransfer(event) {\n      return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_preventAndStop\",\n    value: function _preventAndStop(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n\n  }, {\n    key: \"_haveFiles\",\n    value: function _haveFiles(types) {\n      if (!types) {\n        return false;\n      }\n\n      if (types.indexOf) {\n        return types.indexOf('Files') !== -1;\n      } else if (types.contains) {\n        return types.contains('Files');\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return FileDropDirective;\n}();\n\nFileDropDirective.Éµfac = function FileDropDirective_Factory(t) {\n  return new (t || FileDropDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\n\nFileDropDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: FileDropDirective,\n  selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n  hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n        return ctx.onDragOver($event);\n      })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n        return ctx.onDragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    fileOver: \"fileOver\",\n    onFileDrop: \"onFileDrop\"\n  }\n});\n/** @nocollapse */\n\nFileDropDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nFileDropDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  fileOver: [{\n    type: Output\n  }],\n  onFileDrop: [{\n    type: Output\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }],\n  onDragOver: [{\n    type: HostListener,\n    args: ['dragover', ['$event']]\n  }],\n  onDragLeave: [{\n    type: HostListener,\n    args: ['dragleave', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  FileDropDirective.prototype.uploader;\n  /** @type {?} */\n\n  FileDropDirective.prototype.fileOver;\n  /** @type {?} */\n\n  FileDropDirective.prototype.onFileDrop;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  FileDropDirective.prototype.element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar FileUploadModule = /*#__PURE__*/_createClass(function FileUploadModule() {\n  _classCallCheck(this, FileUploadModule);\n});\n\nFileUploadModule.Éµfac = function FileUploadModule_Factory(t) {\n  return new (t || FileUploadModule)();\n};\n\nFileUploadModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: FileUploadModule\n});\nFileUploadModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(FileUploadModule, {\n    declarations: function declarations() {\n      return [FileDropDirective, FileSelectDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [FileDropDirective, FileSelectDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js"],"names":["EventEmitter","Directive","ElementRef","Input","Output","HostListener","NgModule","CommonModule","Éµngcc0","isElement","node","nodeName","prop","attr","find","FileLikeObject","fileOrInput","rawFile","isInput","fakePathOrObject","value","postfix","method","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","object","prototype","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","uploadItem","e","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","remove","_nextIndex","_xhr","_form","FileType","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","isFile","File","Headers","FileUploaderOptions","allowedMimeType","allowedFileType","autoUpload","isHTML5","filters","authToken","maxFileSize","queueLimit","disableMultipart","authTokenHeader","additionalParameter","parametersBeforeFiles","formatDataFunction","formatDataFunctionIsAsync","FileUploader","queue","item","setOptions","Object","assign","unshift","fn","_queueLimitFilter","_fileSizeFilter","_fileTypeFilter","_mimeTypeFilter","i","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","abort","items","getNotUploadedItems","upload","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","every","call","parsed","val","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","element","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","Éµfac","FileSelectDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","selectors","hostBindings","FileSelectDirective_HostBindings","rf","ctx","ÉµÉµlistener","FileSelectDirective_change_HostBindingHandler","onChange","inputs","outputs","ctorParameters","propDecorators","args","ngDevMode","ÉµsetClassMetadata","selector","FileDropDirective","fileOver","onFileDrop","transfer","_getTransfer","_preventAndStop","_haveFiles","dropEffect","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","onDrop","FileDropDirective_dragover_HostBindingHandler","onDragOver","FileDropDirective_dragleave_HostBindingHandler","onDragLeave","FileUploadModule","FileUploadModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","imports","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"mappings":"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","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as Éµngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.Éµfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef)); };\nFileSelectDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.Éµfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef)); };\nFileDropDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.Éµfac = function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); };\nFileUploadModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: FileUploadModule });\nFileUploadModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n"]},"metadata":{},"sourceType":"module"}