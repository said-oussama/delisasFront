{"ast":null,"code":"/*!\nFullCalendar v5.7.2\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './main.css';\nimport { getDateMeta, buildNavLinkData, getDayClassNames, createElement, RenderHook, formatDayString, BaseComponent, Fragment, createFormatter, EventRoot, isMultiDayRange, buildSegTimeText, memoize, ViewRoot, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, DateComponent, startOfDay, addDays, identity, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign } from 'tslib';\n\nvar ListViewHeaderRow =\n/** @class */\nfunction (_super) {\n  __extends(ListViewHeaderRow, _super);\n\n  function ListViewHeaderRow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ListViewHeaderRow.prototype.render = function () {\n    var _a = this.props,\n        dayDate = _a.dayDate,\n        todayRange = _a.todayRange;\n    var _b = this.context,\n        theme = _b.theme,\n        dateEnv = _b.dateEnv,\n        options = _b.options,\n        viewApi = _b.viewApi;\n    var dayMeta = getDateMeta(dayDate, todayRange); // will ever be falsy?\n\n    var text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : ''; // will ever be falsy? also, BAD NAME \"alt\"\n\n    var sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n    var navLinkData = options.navLinks ? buildNavLinkData(dayDate) : null;\n\n    var hookProps = __assign({\n      date: dateEnv.toDate(dayDate),\n      view: viewApi,\n      text: text,\n      sideText: sideText,\n      navLinkData: navLinkData\n    }, dayMeta);\n\n    var classNames = ['fc-list-day'].concat(getDayClassNames(dayMeta, theme)); // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n\n    return createElement(RenderHook, {\n      hookProps: hookProps,\n      classNames: options.dayHeaderClassNames,\n      content: options.dayHeaderContent,\n      defaultContent: renderInnerContent,\n      didMount: options.dayHeaderDidMount,\n      willUnmount: options.dayHeaderWillUnmount\n    }, function (rootElRef, customClassNames, innerElRef, innerContent) {\n      return createElement(\"tr\", {\n        ref: rootElRef,\n        className: classNames.concat(customClassNames).join(' '),\n        \"data-date\": formatDayString(dayDate)\n      }, createElement(\"th\", {\n        colSpan: 3\n      }, createElement(\"div\", {\n        className: 'fc-list-day-cushion ' + theme.getClass('tableCellShaded'),\n        ref: innerElRef\n      }, innerContent)));\n    });\n  };\n\n  return ListViewHeaderRow;\n}(BaseComponent);\n\nfunction renderInnerContent(props) {\n  var navLinkAttrs = props.navLinkData // is there a type for this?\n  ? {\n    'data-navlink': props.navLinkData,\n    tabIndex: 0\n  } : {};\n  return createElement(Fragment, null, props.text && createElement(\"a\", __assign({\n    className: \"fc-list-day-text\"\n  }, navLinkAttrs), props.text), props.sideText && createElement(\"a\", __assign({\n    className: \"fc-list-day-side-text\"\n  }, navLinkAttrs), props.sideText));\n}\n\nvar DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short'\n});\n\nvar ListViewEventRow =\n/** @class */\nfunction (_super) {\n  __extends(ListViewEventRow, _super);\n\n  function ListViewEventRow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ListViewEventRow.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var seg = props.seg;\n    var timeFormat = context.options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n    return createElement(EventRoot, {\n      seg: seg,\n      timeText: \"\" // BAD. because of all-day content\n      ,\n      disableDragging: true,\n      disableResizing: true,\n      defaultContent: renderEventInnerContent,\n      isPast: props.isPast,\n      isFuture: props.isFuture,\n      isToday: props.isToday,\n      isSelected: props.isSelected,\n      isDragging: props.isDragging,\n      isResizing: props.isResizing,\n      isDateSelecting: props.isDateSelecting\n    }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) {\n      return createElement(\"tr\", {\n        className: ['fc-list-event', hookProps.event.url ? 'fc-event-forced-url' : ''].concat(classNames).join(' '),\n        ref: rootElRef\n      }, buildTimeContent(seg, timeFormat, context), createElement(\"td\", {\n        className: \"fc-list-event-graphic\"\n      }, createElement(\"span\", {\n        className: \"fc-list-event-dot\",\n        style: {\n          borderColor: hookProps.borderColor || hookProps.backgroundColor\n        }\n      })), createElement(\"td\", {\n        className: \"fc-list-event-title\",\n        ref: innerElRef\n      }, innerContent));\n    });\n  };\n\n  return ListViewEventRow;\n}(BaseComponent);\n\nfunction renderEventInnerContent(props) {\n  var event = props.event;\n  var url = event.url;\n  var anchorAttrs = url ? {\n    href: url\n  } : {};\n  return createElement(\"a\", __assign({}, anchorAttrs), event.title);\n}\n\nfunction buildTimeContent(seg, timeFormat, context) {\n  var options = context.options;\n\n  if (options.displayEventTime !== false) {\n    var eventDef = seg.eventRange.def;\n    var eventInstance = seg.eventRange.instance;\n    var doAllDay = false;\n    var timeText = void 0;\n\n    if (eventDef.allDay) {\n      doAllDay = true;\n    } else if (isMultiDayRange(seg.eventRange.range)) {\n      // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n      } else {\n        doAllDay = true;\n      }\n    } else {\n      timeText = buildSegTimeText(seg, timeFormat, context);\n    }\n\n    if (doAllDay) {\n      var hookProps = {\n        text: context.options.allDayText,\n        view: context.viewApi\n      };\n      return createElement(RenderHook, {\n        hookProps: hookProps,\n        classNames: options.allDayClassNames,\n        content: options.allDayContent,\n        defaultContent: renderAllDayInner,\n        didMount: options.allDayDidMount,\n        willUnmount: options.allDayWillUnmount\n      }, function (rootElRef, classNames, innerElRef, innerContent) {\n        return createElement(\"td\", {\n          className: ['fc-list-event-time'].concat(classNames).join(' '),\n          ref: rootElRef\n        }, innerContent);\n      });\n    }\n\n    return createElement(\"td\", {\n      className: \"fc-list-event-time\"\n    }, timeText);\n  }\n\n  return null;\n}\n\nfunction renderAllDayInner(hookProps) {\n  return hookProps.text;\n}\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\n\n\nvar ListView =\n/** @class */\nfunction (_super) {\n  __extends(ListView, _super);\n\n  function ListView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.computeDateVars = memoize(computeDateVars);\n    _this.eventStoreToSegs = memoize(_this._eventStoreToSegs);\n\n    _this.setRootEl = function (rootEl) {\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  ListView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var extraClassNames = ['fc-list', context.theme.getClass('table'), context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : ''];\n\n    var _b = this.computeDateVars(props.dateProfile),\n        dayDates = _b.dayDates,\n        dayRanges = _b.dayRanges;\n\n    var eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec,\n      elRef: this.setRootEl\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: extraClassNames.concat(classNames).join(' ')\n      }, createElement(Scroller, {\n        liquid: !props.isHeightAuto,\n        overflowX: props.isHeightAuto ? 'visible' : 'hidden',\n        overflowY: props.isHeightAuto ? 'visible' : 'auto'\n      }, eventSegs.length > 0 ? _this.renderSegList(eventSegs, dayDates) : _this.renderEmptyMessage()));\n    });\n  };\n\n  ListView.prototype.renderEmptyMessage = function () {\n    var _a = this.context,\n        options = _a.options,\n        viewApi = _a.viewApi;\n    var hookProps = {\n      text: options.noEventsText,\n      view: viewApi\n    };\n    return createElement(RenderHook, {\n      hookProps: hookProps,\n      classNames: options.noEventsClassNames,\n      content: options.noEventsContent,\n      defaultContent: renderNoEventsInner,\n      didMount: options.noEventsDidMount,\n      willUnmount: options.noEventsWillUnmount\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return createElement(\"div\", {\n        className: ['fc-list-empty'].concat(classNames).join(' '),\n        ref: rootElRef\n      }, createElement(\"div\", {\n        className: \"fc-list-empty-cushion\",\n        ref: innerElRef\n      }, innerContent));\n    });\n  };\n\n  ListView.prototype.renderSegList = function (allSegs, dayDates) {\n    var _a = this.context,\n        theme = _a.theme,\n        options = _a.options;\n    var segsByDay = groupSegsByDay(allSegs); // sparse array\n\n    return createElement(NowTimer, {\n      unit: \"day\"\n    }, function (nowDate, todayRange) {\n      var innerNodes = [];\n\n      for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n        var daySegs = segsByDay[dayIndex];\n\n        if (daySegs) {\n          // sparse array, so might be undefined\n          var dayStr = dayDates[dayIndex].toISOString(); // append a day header\n\n          innerNodes.push(createElement(ListViewHeaderRow, {\n            key: dayStr,\n            dayDate: dayDates[dayIndex],\n            todayRange: todayRange\n          }));\n          daySegs = sortEventSegs(daySegs, options.eventOrder);\n\n          for (var _i = 0, daySegs_1 = daySegs; _i < daySegs_1.length; _i++) {\n            var seg = daySegs_1[_i];\n            innerNodes.push(createElement(ListViewEventRow, __assign({\n              key: dayStr + ':' + seg.eventRange.instance.instanceId\n              /* are multiple segs for an instanceId */\n              ,\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: false\n            }, getSegMeta(seg, todayRange, nowDate))));\n          }\n        }\n      }\n\n      return createElement(\"table\", {\n        className: 'fc-list-table ' + theme.getClass('table')\n      }, createElement(\"tbody\", null, innerNodes));\n    });\n  };\n\n  ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {\n    return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n  };\n\n  ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {\n    var segs = [];\n\n    for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {\n      var eventRange = eventRanges_1[_i];\n      segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));\n    }\n\n    return segs;\n  };\n\n  ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {\n    var dateEnv = this.context.dateEnv;\n    var nextDayThreshold = this.context.options.nextDayThreshold;\n    var range = eventRange.range;\n    var allDay = eventRange.def.allDay;\n    var dayIndex;\n    var segRange;\n    var seg;\n    var segs = [];\n\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n      segRange = intersectRanges(range, dayRanges[dayIndex]);\n\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange: eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex: dayIndex\n        };\n        segs.push(seg); // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n\n        if (!seg.isEnd && !allDay && dayIndex + 1 < dayRanges.length && range.end < dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n          seg.end = range.end;\n          seg.isEnd = true;\n          break;\n        }\n      }\n    }\n\n    return segs;\n  };\n\n  return ListView;\n}(DateComponent);\n\nfunction renderNoEventsInner(hookProps) {\n  return hookProps.text;\n}\n\nfunction computeDateVars(dateProfile) {\n  var dayStart = startOfDay(dateProfile.renderRange.start);\n  var viewEnd = dateProfile.renderRange.end;\n  var dayDates = [];\n  var dayRanges = [];\n\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart);\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1)\n    });\n    dayStart = addDays(dayStart, 1);\n  }\n\n  return {\n    dayDates: dayDates,\n    dayRanges: dayRanges\n  };\n} // Returns a sparse array of arrays, segs grouped by their dayIndex\n\n\nfunction groupSegsByDay(segs) {\n  var segsByDay = []; // sparse array\n\n  var i;\n  var seg;\n\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg);\n  }\n\n  return segsByDay;\n}\n\nvar OPTION_REFINERS = {\n  listDayFormat: createFalsableFormatter,\n  listDaySideFormat: createFalsableFormatter,\n  noEventsClassNames: identity,\n  noEventsContent: identity,\n  noEventsDidMount: identity,\n  noEventsWillUnmount: identity // noEventsText is defined in base options\n\n};\n\nfunction createFalsableFormatter(input) {\n  return input === false ? null : createFormatter(input);\n}\n\nvar main = createPlugin({\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    list: {\n      component: ListView,\n      buttonTextKey: 'list',\n      listDayFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      } // like \"January 1, 2016\"\n\n    },\n    listDay: {\n      type: 'list',\n      duration: {\n        days: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      } // day-of-week is all we need. full date is probably in headerToolbar\n\n    },\n    listWeek: {\n      type: 'list',\n      duration: {\n        weeks: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      },\n      listDaySideFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    },\n    listMonth: {\n      type: 'list',\n      duration: {\n        month: 1\n      },\n      listDaySideFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n\n    },\n    listYear: {\n      type: 'list',\n      duration: {\n        year: 1\n      },\n      listDaySideFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n\n    }\n  }\n});\nexport default main;\nexport { ListView };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@fullcalendar/list/main.js"],"names":["getDateMeta","buildNavLinkData","getDayClassNames","createElement","RenderHook","formatDayString","BaseComponent","Fragment","createFormatter","EventRoot","isMultiDayRange","buildSegTimeText","memoize","ViewRoot","Scroller","NowTimer","sortEventSegs","getSegMeta","sliceEventStore","intersectRanges","DateComponent","startOfDay","addDays","identity","createPlugin","__extends","__assign","ListViewHeaderRow","_super","apply","arguments","prototype","render","_a","props","dayDate","todayRange","_b","context","theme","dateEnv","options","viewApi","dayMeta","text","listDayFormat","format","sideText","listDaySideFormat","navLinkData","navLinks","hookProps","date","toDate","view","classNames","concat","dayHeaderClassNames","content","dayHeaderContent","defaultContent","renderInnerContent","didMount","dayHeaderDidMount","willUnmount","dayHeaderWillUnmount","rootElRef","customClassNames","innerElRef","innerContent","ref","className","join","colSpan","getClass","navLinkAttrs","tabIndex","DEFAULT_TIME_FORMAT","hour","minute","meridiem","ListViewEventRow","seg","timeFormat","eventTimeFormat","timeText","disableDragging","disableResizing","renderEventInnerContent","isPast","isFuture","isToday","isSelected","isDragging","isResizing","isDateSelecting","event","url","buildTimeContent","style","borderColor","backgroundColor","anchorAttrs","href","title","displayEventTime","eventDef","eventRange","def","eventInstance","instance","doAllDay","allDay","range","isStart","start","end","isEnd","allDayText","allDayClassNames","allDayContent","renderAllDayInner","allDayDidMount","allDayWillUnmount","ListView","_this","computeDateVars","eventStoreToSegs","_eventStoreToSegs","setRootEl","rootEl","registerInteractiveComponent","el","unregisterInteractiveComponent","extraClassNames","stickyHeaderDates","dateProfile","dayDates","dayRanges","eventSegs","eventStore","eventUiBases","viewSpec","elRef","liquid","isHeightAuto","overflowX","overflowY","length","renderSegList","renderEmptyMessage","noEventsText","noEventsClassNames","noEventsContent","renderNoEventsInner","noEventsDidMount","noEventsWillUnmount","allSegs","segsByDay","groupSegsByDay","unit","nowDate","innerNodes","dayIndex","daySegs","dayStr","toISOString","push","key","eventOrder","_i","daySegs_1","instanceId","eventRangesToSegs","activeRange","nextDayThreshold","fg","eventRanges","segs","eventRanges_1","eventRangeToSegs","segRange","component","valueOf","add","dayStart","renderRange","viewEnd","i","OPTION_REFINERS","createFalsableFormatter","input","main","optionRefiners","views","list","buttonTextKey","month","day","year","listDay","type","duration","days","weekday","listWeek","weeks","listMonth","listYear"],"mappings":"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","sourcesContent":["/*!\nFullCalendar v5.7.2\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './main.css';\n\nimport { getDateMeta, buildNavLinkData, getDayClassNames, createElement, RenderHook, formatDayString, BaseComponent, Fragment, createFormatter, EventRoot, isMultiDayRange, buildSegTimeText, memoize, ViewRoot, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, DateComponent, startOfDay, addDays, identity, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign } from 'tslib';\n\nvar ListViewHeaderRow = /** @class */ (function (_super) {\n    __extends(ListViewHeaderRow, _super);\n    function ListViewHeaderRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ListViewHeaderRow.prototype.render = function () {\n        var _a = this.props, dayDate = _a.dayDate, todayRange = _a.todayRange;\n        var _b = this.context, theme = _b.theme, dateEnv = _b.dateEnv, options = _b.options, viewApi = _b.viewApi;\n        var dayMeta = getDateMeta(dayDate, todayRange);\n        // will ever be falsy?\n        var text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n        // will ever be falsy? also, BAD NAME \"alt\"\n        var sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n        var navLinkData = options.navLinks\n            ? buildNavLinkData(dayDate)\n            : null;\n        var hookProps = __assign({ date: dateEnv.toDate(dayDate), view: viewApi, text: text,\n            sideText: sideText,\n            navLinkData: navLinkData }, dayMeta);\n        var classNames = ['fc-list-day'].concat(getDayClassNames(dayMeta, theme));\n        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n        return (createElement(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInnerContent, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement(\"tr\", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), \"data-date\": formatDayString(dayDate) },\n            createElement(\"th\", { colSpan: 3 },\n                createElement(\"div\", { className: 'fc-list-day-cushion ' + theme.getClass('tableCellShaded'), ref: innerElRef }, innerContent)))); }));\n    };\n    return ListViewHeaderRow;\n}(BaseComponent));\nfunction renderInnerContent(props) {\n    var navLinkAttrs = props.navLinkData // is there a type for this?\n        ? { 'data-navlink': props.navLinkData, tabIndex: 0 }\n        : {};\n    return (createElement(Fragment, null,\n        props.text && (createElement(\"a\", __assign({ className: \"fc-list-day-text\" }, navLinkAttrs), props.text)),\n        props.sideText && (createElement(\"a\", __assign({ className: \"fc-list-day-side-text\" }, navLinkAttrs), props.sideText))));\n}\n\nvar DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: 'short',\n});\nvar ListViewEventRow = /** @class */ (function (_super) {\n    __extends(ListViewEventRow, _super);\n    function ListViewEventRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ListViewEventRow.prototype.render = function () {\n        var _a = this, props = _a.props, context = _a.context;\n        var seg = props.seg;\n        var timeFormat = context.options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n        return (createElement(EventRoot, { seg: seg, timeText: \"\" // BAD. because of all-day content\n            , disableDragging: true, disableResizing: true, defaultContent: renderEventInnerContent, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, isSelected: props.isSelected, isDragging: props.isDragging, isResizing: props.isResizing, isDateSelecting: props.isDateSelecting }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return (createElement(\"tr\", { className: ['fc-list-event', hookProps.event.url ? 'fc-event-forced-url' : ''].concat(classNames).join(' '), ref: rootElRef },\n            buildTimeContent(seg, timeFormat, context),\n            createElement(\"td\", { className: \"fc-list-event-graphic\" },\n                createElement(\"span\", { className: \"fc-list-event-dot\", style: { borderColor: hookProps.borderColor || hookProps.backgroundColor } })),\n            createElement(\"td\", { className: \"fc-list-event-title\", ref: innerElRef }, innerContent))); }));\n    };\n    return ListViewEventRow;\n}(BaseComponent));\nfunction renderEventInnerContent(props) {\n    var event = props.event;\n    var url = event.url;\n    var anchorAttrs = url ? { href: url } : {};\n    return (createElement(\"a\", __assign({}, anchorAttrs), event.title));\n}\nfunction buildTimeContent(seg, timeFormat, context) {\n    var options = context.options;\n    if (options.displayEventTime !== false) {\n        var eventDef = seg.eventRange.def;\n        var eventInstance = seg.eventRange.instance;\n        var doAllDay = false;\n        var timeText = void 0;\n        if (eventDef.allDay) {\n            doAllDay = true;\n        }\n        else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n            if (seg.isStart) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n            }\n            else if (seg.isEnd) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n            }\n            else {\n                doAllDay = true;\n            }\n        }\n        else {\n            timeText = buildSegTimeText(seg, timeFormat, context);\n        }\n        if (doAllDay) {\n            var hookProps = {\n                text: context.options.allDayText,\n                view: context.viewApi,\n            };\n            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"td\", { className: ['fc-list-event-time'].concat(classNames).join(' '), ref: rootElRef }, innerContent)); }));\n        }\n        return (createElement(\"td\", { className: \"fc-list-event-time\" }, timeText));\n    }\n    return null;\n}\nfunction renderAllDayInner(hookProps) {\n    return hookProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    function ListView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.computeDateVars = memoize(computeDateVars);\n        _this.eventStoreToSegs = memoize(_this._eventStoreToSegs);\n        _this.setRootEl = function (rootEl) {\n            if (rootEl) {\n                _this.context.registerInteractiveComponent(_this, {\n                    el: rootEl,\n                });\n            }\n            else {\n                _this.context.unregisterInteractiveComponent(_this);\n            }\n        };\n        return _this;\n    }\n    ListView.prototype.render = function () {\n        var _this = this;\n        var _a = this, props = _a.props, context = _a.context;\n        var extraClassNames = [\n            'fc-list',\n            context.theme.getClass('table'),\n            context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : '',\n        ];\n        var _b = this.computeDateVars(props.dateProfile), dayDates = _b.dayDates, dayRanges = _b.dayRanges;\n        var eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n        return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.setRootEl }, function (rootElRef, classNames) { return (createElement(\"div\", { ref: rootElRef, className: extraClassNames.concat(classNames).join(' ') },\n            createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?\n                _this.renderSegList(eventSegs, dayDates) :\n                _this.renderEmptyMessage()))); }));\n    };\n    ListView.prototype.renderEmptyMessage = function () {\n        var _a = this.context, options = _a.options, viewApi = _a.viewApi;\n        var hookProps = {\n            text: options.noEventsText,\n            view: viewApi,\n        };\n        return (createElement(RenderHook, { hookProps: hookProps, classNames: options.noEventsClassNames, content: options.noEventsContent, defaultContent: renderNoEventsInner, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"div\", { className: ['fc-list-empty'].concat(classNames).join(' '), ref: rootElRef },\n            createElement(\"div\", { className: \"fc-list-empty-cushion\", ref: innerElRef }, innerContent))); }));\n    };\n    ListView.prototype.renderSegList = function (allSegs, dayDates) {\n        var _a = this.context, theme = _a.theme, options = _a.options;\n        var segsByDay = groupSegsByDay(allSegs); // sparse array\n        return (createElement(NowTimer, { unit: \"day\" }, function (nowDate, todayRange) {\n            var innerNodes = [];\n            for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n                var daySegs = segsByDay[dayIndex];\n                if (daySegs) { // sparse array, so might be undefined\n                    var dayStr = dayDates[dayIndex].toISOString();\n                    // append a day header\n                    innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, dayDate: dayDates[dayIndex], todayRange: todayRange }));\n                    daySegs = sortEventSegs(daySegs, options.eventOrder);\n                    for (var _i = 0, daySegs_1 = daySegs; _i < daySegs_1.length; _i++) {\n                        var seg = daySegs_1[_i];\n                        innerNodes.push(createElement(ListViewEventRow, __assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false }, getSegMeta(seg, todayRange, nowDate))));\n                    }\n                }\n            }\n            return (createElement(\"table\", { className: 'fc-list-table ' + theme.getClass('table') },\n                createElement(\"tbody\", null, innerNodes)));\n        }));\n    };\n    ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    };\n    ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {\n        var segs = [];\n        for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {\n            var eventRange = eventRanges_1[_i];\n            segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    };\n    ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {\n        var dateEnv = this.context.dateEnv;\n        var nextDayThreshold = this.context.options.nextDayThreshold;\n        var range = eventRange.range;\n        var allDay = eventRange.def.allDay;\n        var dayIndex;\n        var segRange;\n        var seg;\n        var segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange: eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex: dayIndex,\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    };\n    return ListView;\n}(DateComponent));\nfunction renderNoEventsInner(hookProps) {\n    return hookProps.text;\n}\nfunction computeDateVars(dateProfile) {\n    var dayStart = startOfDay(dateProfile.renderRange.start);\n    var viewEnd = dateProfile.renderRange.end;\n    var dayDates = [];\n    var dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1),\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates: dayDates, dayRanges: dayRanges };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n    var segsByDay = []; // sparse array\n    var i;\n    var seg;\n    for (i = 0; i < segs.length; i += 1) {\n        seg = segs[i];\n        (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n            .push(seg);\n    }\n    return segsByDay;\n}\n\nvar OPTION_REFINERS = {\n    listDayFormat: createFalsableFormatter,\n    listDaySideFormat: createFalsableFormatter,\n    noEventsClassNames: identity,\n    noEventsContent: identity,\n    noEventsDidMount: identity,\n    noEventsWillUnmount: identity,\n    // noEventsText is defined in base options\n};\nfunction createFalsableFormatter(input) {\n    return input === false ? null : createFormatter(input);\n}\n\nvar main = createPlugin({\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        list: {\n            component: ListView,\n            buttonTextKey: 'list',\n            listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like \"January 1, 2016\"\n        },\n        listDay: {\n            type: 'list',\n            duration: { days: 1 },\n            listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar\n        },\n        listWeek: {\n            type: 'list',\n            duration: { weeks: 1 },\n            listDayFormat: { weekday: 'long' },\n            listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },\n        },\n        listMonth: {\n            type: 'list',\n            duration: { month: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n        listYear: {\n            type: 'list',\n            duration: { year: 1 },\n            listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have\n        },\n    },\n});\n\nexport default main;\nexport { ListView };\n"]},"metadata":{},"sourceType":"module"}