{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _keys;\n\nimport { Directive, TemplateRef, ViewContainerRef, Input, Injectable, ɵɵdefineInjectable, Component, ViewEncapsulation, ElementRef, EventEmitter, ContentChild, ViewChild, Output, HostListener, Renderer2, NgZone, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { autorun, reaction, computed as computed$1, observable as observable$1, action as action$1 } from 'mobx';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"loading...\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction TreeViewportComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r0.getTotalHeight());\n  }\n}\n\nvar _c1 = function _c1() {\n  return {\n    dontDetach: true\n  };\n};\n\nvar _c2 = [\"*\"];\nvar _c3 = [\"loadingTemplate\"];\nvar _c4 = [\"treeNodeTemplate\"];\nvar _c5 = [\"treeNodeWrapperTemplate\"];\nvar _c6 = [\"treeNodeFullTemplate\"];\nvar _c7 = [\"viewport\"];\n\nvar _c8 = function _c8(a0, a1, a2, a3) {\n  return {\n    loadingTemplate: a0,\n    treeNodeTemplate: a1,\n    treeNodeWrapperTemplate: a2,\n    treeNodeFullTemplate: a3\n  };\n};\n\nfunction TreeComponent_tree_node_collection_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-collection\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nodes\", ctx_r1.treeModel.roots)(\"treeModel\", ctx_r1.treeModel)(\"templates\", ɵngcc0.ɵɵpureFunction4(3, _c8, ctx_r1.loadingTemplate, ctx_r1.treeNodeTemplate, ctx_r1.treeNodeWrapperTemplate, ctx_r1.treeNodeFullTemplate));\n  }\n}\n\nfunction TreeComponent_tree_node_drop_slot_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-drop-slot\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"dropIndex\", 0)(\"node\", ctx_r2.treeModel.virtualRoot);\n  }\n}\n\nfunction TreeNodeComponent_ng_container_0_div_1_tree_node_drop_slot_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-drop-slot\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"dropIndex\", ctx_r2.node.index)(\"node\", ctx_r2.node.parent);\n  }\n}\n\nfunction TreeNodeComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TreeNodeComponent_ng_container_0_div_1_tree_node_drop_slot_1_Template, 1, 2, \"tree-node-drop-slot\", 3);\n    ɵngcc0.ɵɵelement(2, \"tree-node-wrapper\", 4);\n    ɵngcc0.ɵɵelement(3, \"tree-node-children\", 5);\n    ɵngcc0.ɵɵelement(4, \"tree-node-drop-slot\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r1.node.getClass());\n    ɵngcc0.ɵɵclassProp(\"tree-node\", true)(\"tree-node-expanded\", ctx_r1.node.isExpanded && ctx_r1.node.hasChildren)(\"tree-node-collapsed\", ctx_r1.node.isCollapsed && ctx_r1.node.hasChildren)(\"tree-node-leaf\", ctx_r1.node.isLeaf)(\"tree-node-active\", ctx_r1.node.isActive)(\"tree-node-focused\", ctx_r1.node.isFocused);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.index === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node)(\"index\", ctx_r1.index)(\"templates\", ctx_r1.templates);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node)(\"templates\", ctx_r1.templates);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"dropIndex\", ctx_r1.node.index + 1)(\"node\", ctx_r1.node.parent);\n  }\n}\n\nvar _c9 = function _c9(a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    node: a1,\n    index: a2,\n    templates: a3\n  };\n};\n\nfunction TreeNodeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeComponent_ng_container_0_div_1_Template, 5, 22, \"div\", 1);\n    ɵngcc0.ɵɵelementContainer(2, 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.templates.treeNodeFullTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.templates.treeNodeFullTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(3, _c9, ctx_r0.node, ctx_r0.node, ctx_r0.index, ctx_r0.templates));\n  }\n}\n\nfunction TreeNodeContent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.node.displayField);\n  }\n}\n\nvar _c10 = function _c10(a0, a1, a2) {\n  return {\n    $implicit: a0,\n    node: a1,\n    index: a2\n  };\n};\n\nfunction TreeNodeExpanderComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeExpanderComponent_ng_container_0_span_1_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r3.node.mouseAction(\"expanderClick\", $event);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"toggle-children-wrapper-expanded\", ctx_r1.node.isExpanded)(\"toggle-children-wrapper-collapsed\", ctx_r1.node.isCollapsed);\n  }\n}\n\nfunction TreeNodeExpanderComponent_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 5);\n  }\n}\n\nfunction TreeNodeExpanderComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeExpanderComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(2, TreeNodeExpanderComponent_ng_container_0_span_2_Template, 1, 0, \"span\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.node.hasChildren);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.node.hasChildren);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-collection\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nodes\", ctx_r2.node.children)(\"templates\", ctx_r2.templates)(\"treeModel\", ctx_r2.node.treeModel);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-loading-component\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r3.node.getNodePadding());\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r3.templates.loadingTemplate)(\"node\", ctx_r3.node);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template, 1, 3, \"tree-node-collection\", 2);\n    ɵngcc0.ɵɵtemplate(2, TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template, 1, 4, \"tree-loading-component\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"tree-children\", true)(\"tree-children-no-padding\", ctx_r1.node.options.levelPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.node.children);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.node.children);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_Template, 3, 6, \"div\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"treeAnimateOpen\", ctx_r0.node.isExpanded)(\"treeAnimateOpenSpeed\", ctx_r0.node.options.animateSpeed)(\"treeAnimateOpenAcceleration\", ctx_r0.node.options.animateAcceleration)(\"treeAnimateOpenEnabled\", ctx_r0.node.options.animateExpand);\n  }\n}\n\nfunction TreeNodeCollectionComponent_ng_container_0_tree_node_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node\", 2);\n  }\n\n  if (rf & 2) {\n    var node_r2 = ctx.$implicit;\n    var i_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"node\", node_r2)(\"index\", i_r3)(\"templates\", ctx_r1.templates);\n  }\n}\n\nfunction TreeNodeCollectionComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, TreeNodeCollectionComponent_ng_container_0_tree_node_2_Template, 1, 3, \"tree-node\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"margin-top\", ctx_r0.marginTop);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewportNodes)(\"ngForTrackBy\", ctx_r0.trackNode);\n  }\n}\n\nfunction TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-checkbox\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node);\n  }\n}\n\nfunction TreeNodeWrapperComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template, 1, 1, \"tree-node-checkbox\", 3);\n    ɵngcc0.ɵɵelement(2, \"tree-node-expander\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeWrapperComponent_div_0_Template_div_click_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.node.mouseAction(\"click\", $event);\n    })(\"dblclick\", function TreeNodeWrapperComponent_div_0_Template_div_dblclick_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.node.mouseAction(\"dblClick\", $event);\n    })(\"mouseover\", function TreeNodeWrapperComponent_div_0_Template_div_mouseover_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.node.mouseAction(\"mouseOver\", $event);\n    })(\"mouseout\", function TreeNodeWrapperComponent_div_0_Template_div_mouseout_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.node.mouseAction(\"mouseOut\", $event);\n    })(\"contextmenu\", function TreeNodeWrapperComponent_div_0_Template_div_contextmenu_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.node.mouseAction(\"contextMenu\", $event);\n    })(\"treeDrop\", function TreeNodeWrapperComponent_div_0_Template_div_treeDrop_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.node.onDrop($event);\n    })(\"treeDropDragOver\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragOver_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.node.mouseAction(\"dragOver\", $event);\n    })(\"treeDropDragLeave\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragLeave_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.node.mouseAction(\"dragLeave\", $event);\n    })(\"treeDropDragEnter\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragEnter_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.node.mouseAction(\"dragEnter\", $event);\n    });\n    ɵngcc0.ɵɵelement(4, \"tree-node-content\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r0.node.getNodePadding());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.node.options.useCheckbox);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"node-content-wrapper-active\", ctx_r0.node.isActive)(\"node-content-wrapper-focused\", ctx_r0.node.isFocused);\n    ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx_r0.node.allowDrop)(\"allowDragoverStyling\", ctx_r0.node.allowDragoverStyling())(\"treeDrag\", ctx_r0.node)(\"treeDragEnabled\", ctx_r0.node.allowDrag());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node)(\"index\", ctx_r0.index)(\"template\", ctx_r0.templates.treeNodeTemplate);\n  }\n}\n\nfunction TreeNodeCheckboxComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeCheckboxComponent_ng_container_0_Template_input_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.node.mouseAction(\"checkboxClick\", $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.node.isSelected)(\"indeterminate\", ctx_r0.node.isPartiallySelected);\n  }\n}\n\nvar TreeMobxAutorunDirective = /*#__PURE__*/function () {\n  function TreeMobxAutorunDirective(templateRef, viewContainer) {\n    _classCallCheck(this, TreeMobxAutorunDirective);\n\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this.templateBindings = {};\n  }\n\n  _createClass(TreeMobxAutorunDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.view = this.viewContainer.createEmbeddedView(this.templateRef);\n\n      if (this.dispose) {\n        this.dispose();\n      }\n\n      if (this.shouldDetach()) {\n        this.view.detach();\n      }\n\n      this.autoDetect(this.view);\n    }\n  }, {\n    key: \"shouldDetach\",\n    value: function shouldDetach() {\n      return this.treeMobxAutorun && this.treeMobxAutorun.detach;\n    }\n  }, {\n    key: \"autoDetect\",\n    value: function autoDetect(view) {\n      this.dispose = autorun(function () {\n        return view.detectChanges();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.dispose) {\n        this.dispose();\n      }\n    }\n  }]);\n\n  return TreeMobxAutorunDirective;\n}();\n\nTreeMobxAutorunDirective.ɵfac = function TreeMobxAutorunDirective_Factory(t) {\n  return new (t || TreeMobxAutorunDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nTreeMobxAutorunDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TreeMobxAutorunDirective,\n  selectors: [[\"\", \"treeMobxAutorun\", \"\"]],\n  inputs: {\n    treeMobxAutorun: \"treeMobxAutorun\"\n  }\n});\n/** @nocollapse */\n\nTreeMobxAutorunDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }, {\n    type: ViewContainerRef\n  }];\n};\n\nTreeMobxAutorunDirective.propDecorators = {\n  treeMobxAutorun: [{\n    type: Input\n  }]\n};\nvar KEYS = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  ENTER: 13,\n  SPACE: 32,\n  CONTEXT_MENU: 32\n};\n\nvar ɵ0 = function ɵ0(tree, node, $event) {\n  return node && node.toggleActivated();\n},\n    ɵ1 = function ɵ1(tree, node, $event) {\n  return node && node.toggleActivated(true);\n},\n    ɵ2 = function ɵ2(tree, node, $event) {\n  return node && node.toggleSelected();\n},\n    ɵ3 = function ɵ3(tree, node, $event) {\n  return node.setIsActive(true);\n},\n    ɵ4 = function ɵ4(tree, node, $event) {\n  return node.setIsActive(false);\n},\n    ɵ5 = function ɵ5(tree, node, $event) {\n  return node.setIsSelected(true);\n},\n    ɵ6 = function ɵ6(tree, node, $event) {\n  return node.setIsSelected(false);\n},\n    ɵ7 = function ɵ7(tree, node, $event) {\n  return node.focus();\n},\n    ɵ8 = function ɵ8(tree, node, $event) {\n  return node.hasChildren && node.toggleExpanded();\n},\n    ɵ9 = function ɵ9(tree, node, $event) {\n  return node.expand();\n},\n    ɵ10 = function ɵ10(tree, node, $event) {\n  return node.collapse();\n},\n    ɵ11 = function ɵ11(tree, node, $event) {\n  return tree.focusDrillDown();\n},\n    ɵ12 = function ɵ12(tree, node, $event) {\n  return tree.focusDrillUp();\n},\n    ɵ13 = function ɵ13(tree, node, $event) {\n  return tree.focusNextNode();\n},\n    ɵ14 = function ɵ14(tree, node, $event) {\n  return tree.focusPreviousNode();\n},\n    ɵ15 = function ɵ15(tree, node, $event, _ref) {\n  var from = _ref.from,\n      to = _ref.to;\n\n  // default action assumes from = node, to = {parent, index}\n  if ($event.ctrlKey) {\n    tree.copyNode(from, to);\n  } else {\n    tree.moveNode(from, to);\n  }\n};\n\nvar TREE_ACTIONS = {\n  TOGGLE_ACTIVE: ɵ0,\n  TOGGLE_ACTIVE_MULTI: ɵ1,\n  TOGGLE_SELECTED: ɵ2,\n  ACTIVATE: ɵ3,\n  DEACTIVATE: ɵ4,\n  SELECT: ɵ5,\n  DESELECT: ɵ6,\n  FOCUS: ɵ7,\n  TOGGLE_EXPANDED: ɵ8,\n  EXPAND: ɵ9,\n  COLLAPSE: ɵ10,\n  DRILL_DOWN: ɵ11,\n  DRILL_UP: ɵ12,\n  NEXT_NODE: ɵ13,\n  PREVIOUS_NODE: ɵ14,\n  MOVE_NODE: ɵ15\n};\nvar defaultActionMapping = {\n  mouse: {\n    click: TREE_ACTIONS.TOGGLE_ACTIVE,\n    dblClick: null,\n    contextMenu: null,\n    expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\n    checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,\n    drop: TREE_ACTIONS.MOVE_NODE\n  },\n  keys: (_keys = {}, _defineProperty(_keys, KEYS.RIGHT, TREE_ACTIONS.DRILL_DOWN), _defineProperty(_keys, KEYS.LEFT, TREE_ACTIONS.DRILL_UP), _defineProperty(_keys, KEYS.DOWN, TREE_ACTIONS.NEXT_NODE), _defineProperty(_keys, KEYS.UP, TREE_ACTIONS.PREVIOUS_NODE), _defineProperty(_keys, KEYS.SPACE, TREE_ACTIONS.TOGGLE_ACTIVE), _defineProperty(_keys, KEYS.ENTER, TREE_ACTIONS.TOGGLE_ACTIVE), _keys)\n};\n\nvar TreeOptions = /*#__PURE__*/function () {\n  function TreeOptions() {\n    var _keys2;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeOptions);\n\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35;\n\n    this.options = options;\n    this.actionMapping = {\n      mouse: {\n        click: (_d = (_c = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.actionMapping) === null || _b === void 0 ? void 0 : _b.mouse) === null || _c === void 0 ? void 0 : _c.click) !== null && _d !== void 0 ? _d : defaultActionMapping.mouse.click,\n        dblClick: (_h = (_g = (_f = (_e = this.options) === null || _e === void 0 ? void 0 : _e.actionMapping) === null || _f === void 0 ? void 0 : _f.mouse) === null || _g === void 0 ? void 0 : _g.dblClick) !== null && _h !== void 0 ? _h : defaultActionMapping.mouse.dblClick,\n        contextMenu: (_m = (_l = (_k = (_j = this.options) === null || _j === void 0 ? void 0 : _j.actionMapping) === null || _k === void 0 ? void 0 : _k.mouse) === null || _l === void 0 ? void 0 : _l.contextMenu) !== null && _m !== void 0 ? _m : defaultActionMapping.mouse.contextMenu,\n        expanderClick: (_r = (_q = (_p = (_o = this.options) === null || _o === void 0 ? void 0 : _o.actionMapping) === null || _p === void 0 ? void 0 : _p.mouse) === null || _q === void 0 ? void 0 : _q.expanderClick) !== null && _r !== void 0 ? _r : defaultActionMapping.mouse.expanderClick,\n        checkboxClick: (_v = (_u = (_t = (_s = this.options) === null || _s === void 0 ? void 0 : _s.actionMapping) === null || _t === void 0 ? void 0 : _t.mouse) === null || _u === void 0 ? void 0 : _u.checkboxClick) !== null && _v !== void 0 ? _v : defaultActionMapping.mouse.checkboxClick,\n        drop: (_z = (_y = (_x = (_w = this.options) === null || _w === void 0 ? void 0 : _w.actionMapping) === null || _x === void 0 ? void 0 : _x.mouse) === null || _y === void 0 ? void 0 : _y.drop) !== null && _z !== void 0 ? _z : defaultActionMapping.mouse.drop,\n        dragStart: (_3 = (_2 = (_1 = (_0 = this.options) === null || _0 === void 0 ? void 0 : _0.actionMapping) === null || _1 === void 0 ? void 0 : _1.mouse) === null || _2 === void 0 ? void 0 : _2.dragStart) !== null && _3 !== void 0 ? _3 : undefined,\n        drag: (_7 = (_6 = (_5 = (_4 = this.options) === null || _4 === void 0 ? void 0 : _4.actionMapping) === null || _5 === void 0 ? void 0 : _5.mouse) === null || _6 === void 0 ? void 0 : _6.drag) !== null && _7 !== void 0 ? _7 : undefined,\n        dragEnd: (_11 = (_10 = (_9 = (_8 = this.options) === null || _8 === void 0 ? void 0 : _8.actionMapping) === null || _9 === void 0 ? void 0 : _9.mouse) === null || _10 === void 0 ? void 0 : _10.dragEnd) !== null && _11 !== void 0 ? _11 : undefined,\n        dragOver: (_15 = (_14 = (_13 = (_12 = this.options) === null || _12 === void 0 ? void 0 : _12.actionMapping) === null || _13 === void 0 ? void 0 : _13.mouse) === null || _14 === void 0 ? void 0 : _14.dragOver) !== null && _15 !== void 0 ? _15 : undefined,\n        dragLeave: (_19 = (_18 = (_17 = (_16 = this.options) === null || _16 === void 0 ? void 0 : _16.actionMapping) === null || _17 === void 0 ? void 0 : _17.mouse) === null || _18 === void 0 ? void 0 : _18.dragLeave) !== null && _19 !== void 0 ? _19 : undefined,\n        dragEnter: (_23 = (_22 = (_21 = (_20 = this.options) === null || _20 === void 0 ? void 0 : _20.actionMapping) === null || _21 === void 0 ? void 0 : _21.mouse) === null || _22 === void 0 ? void 0 : _22.dragEnter) !== null && _23 !== void 0 ? _23 : undefined,\n        mouseOver: (_27 = (_26 = (_25 = (_24 = this.options) === null || _24 === void 0 ? void 0 : _24.actionMapping) === null || _25 === void 0 ? void 0 : _25.mouse) === null || _26 === void 0 ? void 0 : _26.mouseOver) !== null && _27 !== void 0 ? _27 : undefined,\n        mouseOut: (_31 = (_30 = (_29 = (_28 = this.options) === null || _28 === void 0 ? void 0 : _28.actionMapping) === null || _29 === void 0 ? void 0 : _29.mouse) === null || _30 === void 0 ? void 0 : _30.mouseOut) !== null && _31 !== void 0 ? _31 : undefined\n      },\n      keys: (_keys2 = {}, _defineProperty(_keys2, KEYS.RIGHT, TREE_ACTIONS.DRILL_DOWN), _defineProperty(_keys2, KEYS.LEFT, TREE_ACTIONS.DRILL_UP), _defineProperty(_keys2, KEYS.DOWN, TREE_ACTIONS.NEXT_NODE), _defineProperty(_keys2, KEYS.UP, TREE_ACTIONS.PREVIOUS_NODE), _defineProperty(_keys2, KEYS.SPACE, TREE_ACTIONS.TOGGLE_ACTIVE), _defineProperty(_keys2, KEYS.ENTER, TREE_ACTIONS.TOGGLE_ACTIVE), _keys2)\n    };\n\n    if ((_33 = (_32 = this.options) === null || _32 === void 0 ? void 0 : _32.actionMapping) === null || _33 === void 0 ? void 0 : _33.keys) {\n      this.actionMapping.keys = Object.assign(Object.assign({}, this.actionMapping.keys), this.options.actionMapping.keys);\n    }\n\n    if (options.rtl) {\n      this.actionMapping.keys[KEYS.RIGHT] = ((_34 = options.actionMapping) === null || _34 === void 0 ? void 0 : _34.keys[KEYS.RIGHT]) || TREE_ACTIONS.DRILL_UP;\n      this.actionMapping.keys[KEYS.LEFT] = ((_35 = options.actionMapping) === null || _35 === void 0 ? void 0 : _35.keys[KEYS.LEFT]) || TREE_ACTIONS.DRILL_DOWN;\n    }\n  }\n\n  _createClass(TreeOptions, [{\n    key: \"hasChildrenField\",\n    get: function get() {\n      return this.options.hasChildrenField || 'hasChildren';\n    }\n  }, {\n    key: \"childrenField\",\n    get: function get() {\n      return this.options.childrenField || 'children';\n    }\n  }, {\n    key: \"displayField\",\n    get: function get() {\n      return this.options.displayField || 'name';\n    }\n  }, {\n    key: \"idField\",\n    get: function get() {\n      return this.options.idField || 'id';\n    }\n  }, {\n    key: \"isExpandedField\",\n    get: function get() {\n      return this.options.isExpandedField || 'isExpanded';\n    }\n  }, {\n    key: \"getChildren\",\n    get: function get() {\n      return this.options.getChildren;\n    }\n  }, {\n    key: \"levelPadding\",\n    get: function get() {\n      return this.options.levelPadding || 0;\n    }\n  }, {\n    key: \"useVirtualScroll\",\n    get: function get() {\n      return this.options.useVirtualScroll;\n    }\n  }, {\n    key: \"animateExpand\",\n    get: function get() {\n      return this.options.animateExpand;\n    }\n  }, {\n    key: \"animateSpeed\",\n    get: function get() {\n      return this.options.animateSpeed || 1;\n    }\n  }, {\n    key: \"animateAcceleration\",\n    get: function get() {\n      return this.options.animateAcceleration || 1.2;\n    }\n  }, {\n    key: \"scrollOnActivate\",\n    get: function get() {\n      return this.options.scrollOnActivate === undefined ? true : this.options.scrollOnActivate;\n    }\n  }, {\n    key: \"rtl\",\n    get: function get() {\n      return !!this.options.rtl;\n    }\n  }, {\n    key: \"rootId\",\n    get: function get() {\n      return this.options.rootId;\n    }\n  }, {\n    key: \"useCheckbox\",\n    get: function get() {\n      return this.options.useCheckbox;\n    }\n  }, {\n    key: \"useTriState\",\n    get: function get() {\n      return this.options.useTriState === undefined ? true : this.options.useTriState;\n    }\n  }, {\n    key: \"scrollContainer\",\n    get: function get() {\n      return this.options.scrollContainer;\n    }\n  }, {\n    key: \"allowDragoverStyling\",\n    get: function get() {\n      return this.options.allowDragoverStyling === undefined ? true : this.options.allowDragoverStyling;\n    }\n  }, {\n    key: \"getNodeClone\",\n    value: function getNodeClone(node) {\n      if (this.options.getNodeClone) {\n        return this.options.getNodeClone(node);\n      } // remove id from clone\n      // keeping ie11 compatibility\n\n\n      var nodeClone = Object.assign({}, node.data);\n\n      if (nodeClone.id) {\n        delete nodeClone.id;\n      }\n\n      return nodeClone;\n    }\n  }, {\n    key: \"allowDrop\",\n    value: function allowDrop(element, to, $event) {\n      if (this.options.allowDrop instanceof Function) {\n        return this.options.allowDrop(element, to, $event);\n      } else {\n        return this.options.allowDrop === undefined ? true : this.options.allowDrop;\n      }\n    }\n  }, {\n    key: \"allowDrag\",\n    value: function allowDrag(node) {\n      if (this.options.allowDrag instanceof Function) {\n        return this.options.allowDrag(node);\n      } else {\n        return this.options.allowDrag;\n      }\n    }\n  }, {\n    key: \"nodeClass\",\n    value: function nodeClass(node) {\n      return this.options.nodeClass ? this.options.nodeClass(node) : '';\n    }\n  }, {\n    key: \"nodeHeight\",\n    value: function nodeHeight(node) {\n      if (node.data.virtual) {\n        return 0;\n      }\n\n      var nodeHeight = this.options.nodeHeight || 22;\n\n      if (typeof nodeHeight === 'function') {\n        nodeHeight = nodeHeight(node);\n      } // account for drop slots:\n\n\n      return nodeHeight + (node.index === 0 ? 2 : 1) * this.dropSlotHeight;\n    }\n  }, {\n    key: \"dropSlotHeight\",\n    get: function get() {\n      return typeof this.options.dropSlotHeight === 'number' ? this.options.dropSlotHeight : 2;\n    }\n  }]);\n\n  return TreeOptions;\n}();\n\nvar TREE_EVENTS = {\n  toggleExpanded: 'toggleExpanded',\n  activate: 'activate',\n  deactivate: 'deactivate',\n  nodeActivate: 'nodeActivate',\n  nodeDeactivate: 'nodeDeactivate',\n  select: 'select',\n  deselect: 'deselect',\n  focus: 'focus',\n  blur: 'blur',\n  initialized: 'initialized',\n  updateData: 'updateData',\n  moveNode: 'moveNode',\n  copyNode: 'copyNode',\n  event: 'event',\n  loadNodeChildren: 'loadNodeChildren',\n  changeFilter: 'changeFilter',\n  stateChange: 'stateChange'\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar TreeNode = /*#__PURE__*/function () {\n  function TreeNode(data, parent, treeModel, index) {\n    var _this = this;\n\n    _classCallCheck(this, TreeNode);\n\n    this.data = data;\n    this.parent = parent;\n    this.treeModel = treeModel;\n    this.position = 0;\n\n    this.allowDrop = function (element, $event) {\n      return _this.options.allowDrop(element, {\n        parent: _this,\n        index: 0\n      }, $event);\n    };\n\n    this.allowDragoverStyling = function () {\n      return _this.options.allowDragoverStyling;\n    };\n\n    if (this.id === undefined || this.id === null) {\n      this.id = uuid();\n    } // Make sure there's a unique id without overriding existing ids to work with immutable data structures\n\n\n    this.index = index;\n\n    if (this.getField('children')) {\n      this._initChildren();\n    }\n\n    this.autoLoadChildren();\n  }\n\n  _createClass(TreeNode, [{\n    key: \"isHidden\",\n    get: function get() {\n      return this.treeModel.isHidden(this);\n    }\n  }, {\n    key: \"isExpanded\",\n    get: function get() {\n      return this.treeModel.isExpanded(this);\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.treeModel.isActive(this);\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return this.treeModel.isNodeFocused(this);\n    }\n  }, {\n    key: \"isSelected\",\n    get: function get() {\n      if (this.isSelectable()) {\n        return this.treeModel.isSelected(this);\n      } else {\n        return this.children.some(function (node) {\n          return node.isSelected;\n        });\n      }\n    }\n  }, {\n    key: \"isAllSelected\",\n    get: function get() {\n      if (this.isSelectable()) {\n        return this.treeModel.isSelected(this);\n      } else {\n        return this.children.every(function (node) {\n          return node.isAllSelected;\n        });\n      }\n    }\n  }, {\n    key: \"isPartiallySelected\",\n    get: function get() {\n      return this.isSelected && !this.isAllSelected;\n    }\n  }, {\n    key: \"level\",\n    get: function get() {\n      return this.parent ? this.parent.level + 1 : 0;\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this.parent ? [].concat(_toConsumableArray(this.parent.path), [this.id]) : [];\n    }\n  }, {\n    key: \"elementRef\",\n    get: function get() {\n      throw \"Element Ref is no longer supported since introducing virtual scroll\\n\\n      You may use a template to obtain a reference to the element\";\n    }\n  }, {\n    key: \"originalNode\",\n    get: function get() {\n      return this._originalNode;\n    }\n  }, {\n    key: \"hasChildren\",\n    get: // helper get functions:\n    function get() {\n      return !!(this.getField('hasChildren') || this.children && this.children.length > 0);\n    }\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return !this.isExpanded;\n    }\n  }, {\n    key: \"isLeaf\",\n    get: function get() {\n      return !this.hasChildren;\n    }\n  }, {\n    key: \"isRoot\",\n    get: function get() {\n      return this.parent.data.virtual;\n    }\n  }, {\n    key: \"realParent\",\n    get: function get() {\n      return this.isRoot ? null : this.parent;\n    } // proxy functions:\n\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this.treeModel.options;\n    }\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(event) {\n      this.treeModel.fireEvent(event);\n    } // field accessors:\n\n  }, {\n    key: \"displayField\",\n    get: function get() {\n      return this.getField('display');\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this.getField('id');\n    },\n    set: function set(value) {\n      this.setField('id', value);\n    }\n  }, {\n    key: \"getField\",\n    value: function getField(key) {\n      return this.data[this.options[\"\".concat(key, \"Field\")]];\n    }\n  }, {\n    key: \"setField\",\n    value: function setField(key, value) {\n      this.data[this.options[\"\".concat(key, \"Field\")]] = value;\n    } // traversing:\n\n  }, {\n    key: \"_findAdjacentSibling\",\n    value: function _findAdjacentSibling(steps) {\n      var skipHidden = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var siblings = this._getParentsChildren(skipHidden);\n\n      var index = siblings.indexOf(this);\n      return siblings.length > index + steps ? siblings[index + steps] : null;\n    }\n  }, {\n    key: \"findNextSibling\",\n    value: function findNextSibling() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._findAdjacentSibling(+1, skipHidden);\n    }\n  }, {\n    key: \"findPreviousSibling\",\n    value: function findPreviousSibling() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._findAdjacentSibling(-1, skipHidden);\n    }\n  }, {\n    key: \"getVisibleChildren\",\n    value: function getVisibleChildren() {\n      return this.visibleChildren;\n    }\n  }, {\n    key: \"visibleChildren\",\n    get: function get() {\n      return (this.children || []).filter(function (node) {\n        return !node.isHidden;\n      });\n    }\n  }, {\n    key: \"getFirstChild\",\n    value: function getFirstChild() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = skipHidden ? this.visibleChildren : this.children;\n      return children != null && children.length ? children[0] : null;\n    }\n  }, {\n    key: \"getLastChild\",\n    value: function getLastChild() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = skipHidden ? this.visibleChildren : this.children;\n      return children != null && children.length ? children[children.length - 1] : null;\n    }\n  }, {\n    key: \"findNextNode\",\n    value: function findNextNode() {\n      var goInside = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var skipHidden = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return goInside && this.isExpanded && this.getFirstChild(skipHidden) || this.findNextSibling(skipHidden) || this.parent && this.parent.findNextNode(false, skipHidden);\n    }\n  }, {\n    key: \"findPreviousNode\",\n    value: function findPreviousNode() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var previousSibling = this.findPreviousSibling(skipHidden);\n\n      if (!previousSibling) {\n        return this.realParent;\n      }\n\n      return previousSibling._getLastOpenDescendant(skipHidden);\n    }\n  }, {\n    key: \"_getLastOpenDescendant\",\n    value: function _getLastOpenDescendant() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var lastChild = this.getLastChild(skipHidden);\n      return this.isCollapsed || !lastChild ? this : lastChild._getLastOpenDescendant(skipHidden);\n    }\n  }, {\n    key: \"_getParentsChildren\",\n    value: function _getParentsChildren() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = this.parent && (skipHidden ? this.parent.getVisibleChildren() : this.parent.children);\n      return children || [];\n    }\n  }, {\n    key: \"getIndexInParent\",\n    value: function getIndexInParent() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._getParentsChildren(skipHidden).indexOf(this);\n    }\n  }, {\n    key: \"isDescendantOf\",\n    value: function isDescendantOf(node) {\n      if (this === node) return true;else return this.parent && this.parent.isDescendantOf(node);\n    }\n  }, {\n    key: \"getNodePadding\",\n    value: function getNodePadding() {\n      return this.options.levelPadding * (this.level - 1) + 'px';\n    }\n  }, {\n    key: \"getClass\",\n    value: function getClass() {\n      return [this.options.nodeClass(this), \"tree-node-level-\".concat(this.level)].join(' ');\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop($event) {\n      this.mouseAction('drop', $event.event, {\n        from: $event.element,\n        to: {\n          parent: this,\n          index: 0,\n          dropOnNode: true\n        }\n      });\n    }\n  }, {\n    key: \"allowDrag\",\n    value: function allowDrag() {\n      return this.options.allowDrag(this);\n    } // helper methods:\n\n  }, {\n    key: \"loadNodeChildren\",\n    value: function loadNodeChildren() {\n      var _this2 = this;\n\n      if (!this.options.getChildren) {\n        return Promise.resolve(); // Not getChildren method - for using redux\n      }\n\n      return Promise.resolve(this.options.getChildren(this)).then(function (children) {\n        if (children) {\n          _this2.setField('children', children);\n\n          _this2._initChildren();\n\n          if (_this2.options.useTriState && _this2.treeModel.isSelected(_this2)) {\n            _this2.setIsSelected(true);\n          }\n\n          _this2.children.forEach(function (child) {\n            if (child.getField('isExpanded') && child.hasChildren) {\n              child.expand();\n            }\n          });\n        }\n      }).then(function () {\n        _this2.fireEvent({\n          eventName: TREE_EVENTS.loadNodeChildren,\n          node: _this2\n        });\n      });\n    }\n  }, {\n    key: \"expand\",\n    value: function expand() {\n      if (!this.isExpanded) {\n        this.toggleExpanded();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse() {\n      if (this.isExpanded) {\n        this.toggleExpanded();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"doForAll\",\n    value: function doForAll(fn) {\n      var _this3 = this;\n\n      Promise.resolve(fn(this)).then(function () {\n        if (_this3.children) {\n          _this3.children.forEach(function (child) {\n            return child.doForAll(fn);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      this.doForAll(function (node) {\n        return node.expand();\n      });\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      this.doForAll(function (node) {\n        return node.collapse();\n      });\n    }\n  }, {\n    key: \"ensureVisible\",\n    value: function ensureVisible() {\n      if (this.realParent) {\n        this.realParent.expand();\n        this.realParent.ensureVisible();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toggleExpanded\",\n    value: function toggleExpanded() {\n      this.setIsExpanded(!this.isExpanded);\n      return this;\n    }\n  }, {\n    key: \"setIsExpanded\",\n    value: function setIsExpanded(value) {\n      if (this.hasChildren) {\n        this.treeModel.setExpandedNode(this, value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"autoLoadChildren\",\n    value: function autoLoadChildren() {\n      var _this4 = this;\n\n      this.handler = reaction(function () {\n        return _this4.isExpanded;\n      }, function (isExpanded) {\n        if (!_this4.children && _this4.hasChildren && isExpanded) {\n          _this4.loadNodeChildren();\n        }\n      }, {\n        fireImmediately: true\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.children) {\n        this.children.forEach(function (child) {\n          return child.dispose();\n        });\n      }\n\n      if (this.handler) {\n        this.handler();\n      }\n\n      this.parent = null;\n      this.children = null;\n    }\n  }, {\n    key: \"setIsActive\",\n    value: function setIsActive(value) {\n      var multi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.treeModel.setActiveNode(this, value, multi);\n\n      if (value) {\n        this.focus(this.options.scrollOnActivate);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"isSelectable\",\n    value: function isSelectable() {\n      return this.isLeaf || !this.children || !this.options.useTriState;\n    }\n  }, {\n    key: \"setIsSelected\",\n    value: function setIsSelected(value) {\n      if (this.isSelectable()) {\n        this.treeModel.setSelectedNode(this, value);\n      } else {\n        this.visibleChildren.forEach(function (child) {\n          return child.setIsSelected(value);\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toggleSelected\",\n    value: function toggleSelected() {\n      this.setIsSelected(!this.isSelected);\n      return this;\n    }\n  }, {\n    key: \"toggleActivated\",\n    value: function toggleActivated() {\n      var multi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.setIsActive(!this.isActive, multi);\n      return this;\n    }\n  }, {\n    key: \"setActiveAndVisible\",\n    value: function setActiveAndVisible() {\n      var multi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.setIsActive(true, multi).ensureVisible();\n      setTimeout(this.scrollIntoView.bind(this));\n      return this;\n    }\n  }, {\n    key: \"scrollIntoView\",\n    value: function scrollIntoView() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.treeModel.virtualScroll.scrollIntoView(this, force);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var scroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var previousNode = this.treeModel.getFocusedNode();\n      this.treeModel.setFocusedNode(this);\n\n      if (scroll) {\n        this.scrollIntoView();\n      }\n\n      if (previousNode) {\n        this.fireEvent({\n          eventName: TREE_EVENTS.blur,\n          node: previousNode\n        });\n      }\n\n      this.fireEvent({\n        eventName: TREE_EVENTS.focus,\n        node: this\n      });\n      return this;\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var previousNode = this.treeModel.getFocusedNode();\n      this.treeModel.setFocusedNode(null);\n\n      if (previousNode) {\n        this.fireEvent({\n          eventName: TREE_EVENTS.blur,\n          node: this\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setIsHidden\",\n    value: function setIsHidden(value) {\n      this.treeModel.setIsHidden(this, value);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setIsHidden(true);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setIsHidden(false);\n    }\n  }, {\n    key: \"mouseAction\",\n    value: function mouseAction(actionName, $event) {\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      this.treeModel.setFocus(true);\n      var actionMapping = this.options.actionMapping.mouse;\n      var mouseAction = actionMapping[actionName];\n\n      if (mouseAction) {\n        mouseAction(this.treeModel, this, $event, data);\n      }\n    }\n  }, {\n    key: \"getSelfHeight\",\n    value: function getSelfHeight() {\n      return this.options.nodeHeight(this);\n    }\n  }, {\n    key: \"_initChildren\",\n    value: function _initChildren() {\n      var _this5 = this;\n\n      this.children = this.getField('children').map(function (c, index) {\n        return new TreeNode(c, _this5, _this5.treeModel, index);\n      });\n    }\n  }]);\n\n  return TreeNode;\n}();\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isHidden\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isExpanded\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isActive\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isFocused\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isSelected\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isAllSelected\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"isPartiallySelected\", null);\n\n__decorate([observable$1, __metadata(\"design:type\", Array)], TreeNode.prototype, \"children\", void 0);\n\n__decorate([observable$1, __metadata(\"design:type\", Number)], TreeNode.prototype, \"index\", void 0);\n\n__decorate([observable$1, __metadata(\"design:type\", Object)], TreeNode.prototype, \"position\", void 0);\n\n__decorate([observable$1, __metadata(\"design:type\", Number)], TreeNode.prototype, \"height\", void 0);\n\n__decorate([computed$1, __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"level\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"path\", null);\n\n__decorate([computed$1, __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [])], TreeNode.prototype, \"visibleChildren\", null);\n\n__decorate([action$1, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], TreeNode.prototype, \"setIsSelected\", null);\n\n__decorate([action$1, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], TreeNode.prototype, \"_initChildren\", null);\n\nfunction uuid() {\n  return Math.floor(Math.random() * 10000000000000);\n}\n\nvar __decorate$1 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata$1 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar TreeModel = /*#__PURE__*/function () {\n  function TreeModel() {\n    _classCallCheck(this, TreeModel);\n\n    this.options = new TreeOptions();\n    this.eventNames = Object.keys(TREE_EVENTS);\n    this.expandedNodeIds = {};\n    this.selectedLeafNodeIds = {};\n    this.activeNodeIds = {};\n    this.hiddenNodeIds = {};\n    this.focusedNodeId = null;\n    this.firstUpdate = true;\n    this.subscriptions = [];\n  } // events\n\n\n  _createClass(TreeModel, [{\n    key: \"fireEvent\",\n    value: function fireEvent(event) {\n      event.treeModel = this;\n      this.events[event.eventName].emit(event);\n      this.events.event.emit(event);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(eventName, fn) {\n      var subscription = this.events[eventName].subscribe(fn);\n      this.subscriptions.push(subscription);\n    } // getters\n\n  }, {\n    key: \"getFocusedNode\",\n    value: function getFocusedNode() {\n      return this.focusedNode;\n    }\n  }, {\n    key: \"getActiveNode\",\n    value: function getActiveNode() {\n      return this.activeNodes[0];\n    }\n  }, {\n    key: \"getActiveNodes\",\n    value: function getActiveNodes() {\n      return this.activeNodes;\n    }\n  }, {\n    key: \"getVisibleRoots\",\n    value: function getVisibleRoots() {\n      return this.virtualRoot.visibleChildren;\n    }\n  }, {\n    key: \"getFirstRoot\",\n    value: function getFirstRoot() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var root = skipHidden ? this.getVisibleRoots() : this.roots;\n      return root != null && root.length ? root[0] : null;\n    }\n  }, {\n    key: \"getLastRoot\",\n    value: function getLastRoot() {\n      var skipHidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var root = skipHidden ? this.getVisibleRoots() : this.roots;\n      return root != null && root.length ? root[root.length - 1] : null;\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return TreeModel.focusedTree === this;\n    }\n  }, {\n    key: \"isNodeFocused\",\n    value: function isNodeFocused(node) {\n      return this.focusedNode === node;\n    }\n  }, {\n    key: \"isEmptyTree\",\n    value: function isEmptyTree() {\n      return this.roots && this.roots.length === 0;\n    }\n  }, {\n    key: \"focusedNode\",\n    get: function get() {\n      return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null;\n    }\n  }, {\n    key: \"expandedNodes\",\n    get: function get() {\n      var _this6 = this;\n\n      var nodes = Object.keys(this.expandedNodeIds).filter(function (id) {\n        return _this6.expandedNodeIds[id];\n      }).map(function (id) {\n        return _this6.getNodeById(id);\n      });\n      return nodes.filter(Boolean);\n    }\n  }, {\n    key: \"activeNodes\",\n    get: function get() {\n      var _this7 = this;\n\n      var nodes = Object.keys(this.activeNodeIds).filter(function (id) {\n        return _this7.activeNodeIds[id];\n      }).map(function (id) {\n        return _this7.getNodeById(id);\n      });\n      return nodes.filter(Boolean);\n    }\n  }, {\n    key: \"hiddenNodes\",\n    get: function get() {\n      var _this8 = this;\n\n      var nodes = Object.keys(this.hiddenNodeIds).filter(function (id) {\n        return _this8.hiddenNodeIds[id];\n      }).map(function (id) {\n        return _this8.getNodeById(id);\n      });\n      return nodes.filter(Boolean);\n    }\n  }, {\n    key: \"selectedLeafNodes\",\n    get: function get() {\n      var _this9 = this;\n\n      var nodes = Object.keys(this.selectedLeafNodeIds).filter(function (id) {\n        return _this9.selectedLeafNodeIds[id];\n      }).map(function (id) {\n        return _this9.getNodeById(id);\n      });\n      return nodes.filter(Boolean);\n    } // locating nodes\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(path) {\n      var startNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!path) return null;\n      startNode = startNode || this.virtualRoot;\n      if (path.length === 0) return startNode;\n      if (!startNode.children) return null;\n      var childId = path.shift();\n      var childNode = startNode.children.find(function (c) {\n        return c.id === childId;\n      });\n      if (!childNode) return null;\n      return this.getNodeByPath(path, childNode);\n    }\n  }, {\n    key: \"getNodeById\",\n    value: function getNodeById(id) {\n      var idStr = id.toString();\n      return this.getNodeBy(function (node) {\n        return node.id.toString() === idStr;\n      });\n    }\n  }, {\n    key: \"getNodeBy\",\n    value: function getNodeBy(predicate) {\n      var startNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      startNode = startNode || this.virtualRoot;\n      if (!startNode.children) return null;\n      var found = startNode.children.find(predicate);\n\n      if (found) {\n        // found in children\n        return found;\n      } else {\n        // look in children's children\n        var _iterator = _createForOfIteratorHelper(startNode.children),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var child = _step.value;\n            var foundInChildren = this.getNodeBy(predicate, child);\n            if (foundInChildren) return foundInChildren;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }, {\n    key: \"isExpanded\",\n    value: function isExpanded(node) {\n      return this.expandedNodeIds[node.id];\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(node) {\n      return this.hiddenNodeIds[node.id];\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(node) {\n      return this.activeNodeIds[node.id];\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(node) {\n      return this.selectedLeafNodeIds[node.id];\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.dispose();\n      this.unsubscribeAll();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      // Dispose reactions of the replaced nodes\n      if (this.virtualRoot) {\n        this.virtualRoot.dispose();\n      }\n    }\n  }, {\n    key: \"unsubscribeAll\",\n    value: function unsubscribeAll() {\n      this.subscriptions.forEach(function (subscription) {\n        return subscription.unsubscribe();\n      });\n      this.subscriptions = [];\n    } // actions\n\n  }, {\n    key: \"setData\",\n    value: function setData(_ref2) {\n      var nodes = _ref2.nodes,\n          _ref2$options = _ref2.options,\n          options = _ref2$options === void 0 ? null : _ref2$options,\n          _ref2$events = _ref2.events,\n          events = _ref2$events === void 0 ? null : _ref2$events;\n\n      if (options) {\n        this.options = new TreeOptions(options);\n      }\n\n      if (events) {\n        this.events = events;\n      }\n\n      if (nodes) {\n        this.nodes = nodes;\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // Rebuild tree:\n      var virtualRootConfig = _defineProperty({\n        id: this.options.rootId,\n        virtual: true\n      }, this.options.childrenField, this.nodes);\n\n      this.dispose();\n      this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0);\n      this.roots = this.virtualRoot.children; // Fire event:\n\n      if (this.firstUpdate) {\n        if (this.roots) {\n          this.firstUpdate = false;\n\n          this._calculateExpandedNodes();\n        }\n      } else {\n        this.fireEvent({\n          eventName: TREE_EVENTS.updateData\n        });\n      }\n    }\n  }, {\n    key: \"setFocusedNode\",\n    value: function setFocusedNode(node) {\n      this.focusedNodeId = node ? node.id : null;\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(value) {\n      TreeModel.focusedTree = value ? this : null;\n    }\n  }, {\n    key: \"doForAll\",\n    value: function doForAll(fn) {\n      this.roots.forEach(function (root) {\n        return root.doForAll(fn);\n      });\n    }\n  }, {\n    key: \"focusNextNode\",\n    value: function focusNextNode() {\n      var previousNode = this.getFocusedNode();\n      var nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true);\n      if (nextNode) nextNode.focus();\n    }\n  }, {\n    key: \"focusPreviousNode\",\n    value: function focusPreviousNode() {\n      var previousNode = this.getFocusedNode();\n      var nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true);\n      if (nextNode) nextNode.focus();\n    }\n  }, {\n    key: \"focusDrillDown\",\n    value: function focusDrillDown() {\n      var previousNode = this.getFocusedNode();\n\n      if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\n        previousNode.toggleExpanded();\n      } else {\n        var nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true);\n        if (nextNode) nextNode.focus();\n      }\n    }\n  }, {\n    key: \"focusDrillUp\",\n    value: function focusDrillUp() {\n      var previousNode = this.getFocusedNode();\n      if (!previousNode) return;\n\n      if (previousNode.isExpanded) {\n        previousNode.toggleExpanded();\n      } else {\n        var nextNode = previousNode.realParent;\n        if (nextNode) nextNode.focus();\n      }\n    }\n  }, {\n    key: \"setActiveNode\",\n    value: function setActiveNode(node, value) {\n      var multi = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (multi) {\n        this._setActiveNodeMulti(node, value);\n      } else {\n        this._setActiveNodeSingle(node, value);\n      }\n\n      if (value) {\n        node.focus(this.options.scrollOnActivate);\n        this.fireEvent({\n          eventName: TREE_EVENTS.activate,\n          node: node\n        });\n        this.fireEvent({\n          eventName: TREE_EVENTS.nodeActivate,\n          node: node\n        }); // For IE11\n      } else {\n        this.fireEvent({\n          eventName: TREE_EVENTS.deactivate,\n          node: node\n        });\n        this.fireEvent({\n          eventName: TREE_EVENTS.nodeDeactivate,\n          node: node\n        }); // For IE11\n      }\n    }\n  }, {\n    key: \"setSelectedNode\",\n    value: function setSelectedNode(node, value) {\n      this.selectedLeafNodeIds = Object.assign({}, this.selectedLeafNodeIds, _defineProperty({}, node.id, value));\n\n      if (value) {\n        node.focus();\n        this.fireEvent({\n          eventName: TREE_EVENTS.select,\n          node: node\n        });\n      } else {\n        this.fireEvent({\n          eventName: TREE_EVENTS.deselect,\n          node: node\n        });\n      }\n    }\n  }, {\n    key: \"setExpandedNode\",\n    value: function setExpandedNode(node, value) {\n      this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, _defineProperty({}, node.id, value));\n      this.fireEvent({\n        eventName: TREE_EVENTS.toggleExpanded,\n        node: node,\n        isExpanded: value\n      });\n    }\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      this.roots.forEach(function (root) {\n        return root.expandAll();\n      });\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      this.roots.forEach(function (root) {\n        return root.collapseAll();\n      });\n    }\n  }, {\n    key: \"setIsHidden\",\n    value: function setIsHidden(node, value) {\n      this.hiddenNodeIds = Object.assign({}, this.hiddenNodeIds, _defineProperty({}, node.id, value));\n    }\n  }, {\n    key: \"setHiddenNodeIds\",\n    value: function setHiddenNodeIds(nodeIds) {\n      this.hiddenNodeIds = nodeIds.reduce(function (hiddenNodeIds, id) {\n        return Object.assign(hiddenNodeIds, _defineProperty({}, id, true));\n      }, {});\n    }\n  }, {\n    key: \"performKeyAction\",\n    value: function performKeyAction(node, $event) {\n      var keyAction = this.options.actionMapping.keys[$event.keyCode];\n\n      if (keyAction) {\n        $event.preventDefault();\n        keyAction(this, node, $event);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"filterNodes\",\n    value: function filterNodes(filter) {\n      var _this10 = this;\n\n      var autoShow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var filterFn;\n\n      if (!filter) {\n        return this.clearFilter();\n      } // support function and string filter\n\n\n      if (filter && typeof filter.valueOf() === 'string') {\n        filterFn = function filterFn(node) {\n          return node.displayField.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\n        };\n      } else if (filter && typeof filter === 'function') {\n        filterFn = filter;\n      } else {\n        console.error('Don\\'t know what to do with filter', filter);\n        console.error('Should be either a string or function');\n        return;\n      }\n\n      var ids = {};\n      this.roots.forEach(function (node) {\n        return _this10._filterNode(ids, node, filterFn, autoShow);\n      });\n      this.hiddenNodeIds = ids;\n      this.fireEvent({\n        eventName: TREE_EVENTS.changeFilter\n      });\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      this.hiddenNodeIds = {};\n      this.fireEvent({\n        eventName: TREE_EVENTS.changeFilter\n      });\n    }\n  }, {\n    key: \"moveNode\",\n    value: function moveNode(node, to) {\n      var fromIndex = node.getIndexInParent();\n      var fromParent = node.parent;\n      if (!this.canMoveNode(node, to, fromIndex)) return;\n      var fromChildren = fromParent.getField('children'); // If node doesn't have children - create children array\n\n      if (!to.parent.getField('children')) {\n        to.parent.setField('children', []);\n      }\n\n      var toChildren = to.parent.getField('children');\n      var originalNode = fromChildren.splice(fromIndex, 1)[0]; // Compensate for index if already removed from parent:\n\n      var toIndex = fromParent === to.parent && to.index > fromIndex ? to.index - 1 : to.index;\n      toChildren.splice(toIndex, 0, originalNode);\n      fromParent.treeModel.update();\n\n      if (to.parent.treeModel !== fromParent.treeModel) {\n        to.parent.treeModel.update();\n      }\n\n      this.fireEvent({\n        eventName: TREE_EVENTS.moveNode,\n        node: originalNode,\n        to: {\n          parent: to.parent.data,\n          index: toIndex\n        },\n        from: {\n          parent: fromParent.data,\n          index: fromIndex\n        }\n      });\n    }\n  }, {\n    key: \"copyNode\",\n    value: function copyNode(node, to) {\n      var fromIndex = node.getIndexInParent();\n      if (!this.canMoveNode(node, to, fromIndex)) return; // If node doesn't have children - create children array\n\n      if (!to.parent.getField('children')) {\n        to.parent.setField('children', []);\n      }\n\n      var toChildren = to.parent.getField('children');\n      var nodeCopy = this.options.getNodeClone(node);\n      toChildren.splice(to.index, 0, nodeCopy);\n      node.treeModel.update();\n\n      if (to.parent.treeModel !== node.treeModel) {\n        to.parent.treeModel.update();\n      }\n\n      this.fireEvent({\n        eventName: TREE_EVENTS.copyNode,\n        node: nodeCopy,\n        to: {\n          parent: to.parent.data,\n          index: to.index\n        }\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return {\n        expandedNodeIds: this.expandedNodeIds,\n        selectedLeafNodeIds: this.selectedLeafNodeIds,\n        activeNodeIds: this.activeNodeIds,\n        hiddenNodeIds: this.hiddenNodeIds,\n        focusedNodeId: this.focusedNodeId\n      };\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (!state) return;\n      Object.assign(this, {\n        expandedNodeIds: state.expandedNodeIds || {},\n        selectedLeafNodeIds: state.selectedLeafNodeIds || {},\n        activeNodeIds: state.activeNodeIds || {},\n        hiddenNodeIds: state.hiddenNodeIds || {},\n        focusedNodeId: state.focusedNodeId\n      });\n    }\n  }, {\n    key: \"subscribeToState\",\n    value: function subscribeToState(fn) {\n      var _this11 = this;\n\n      autorun(function () {\n        return fn(_this11.getState());\n      });\n    }\n  }, {\n    key: \"canMoveNode\",\n    value: function canMoveNode(node, to) {\n      var fromIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n      var fromNodeIndex = fromIndex || node.getIndexInParent(); // same node:\n\n      if (node.parent === to.parent && fromIndex === to.index) {\n        return false;\n      }\n\n      return !to.parent.isDescendantOf(node);\n    }\n  }, {\n    key: \"calculateExpandedNodes\",\n    value: function calculateExpandedNodes() {\n      this._calculateExpandedNodes();\n    } // private methods\n\n  }, {\n    key: \"_filterNode\",\n    value: function _filterNode(ids, node, filterFn, autoShow) {\n      var _this12 = this;\n\n      // if node passes function then it's visible\n      var isVisible = filterFn(node);\n\n      if (node.children) {\n        // if one of node's children passes filter then this node is also visible\n        node.children.forEach(function (child) {\n          if (_this12._filterNode(ids, child, filterFn, autoShow)) {\n            isVisible = true;\n          }\n        });\n      } // mark node as hidden\n\n\n      if (!isVisible) {\n        ids[node.id] = true;\n      } // auto expand parents to make sure the filtered nodes are visible\n\n\n      if (autoShow && isVisible) {\n        node.ensureVisible();\n      }\n\n      return isVisible;\n    }\n  }, {\n    key: \"_calculateExpandedNodes\",\n    value: function _calculateExpandedNodes() {\n      var _this13 = this;\n\n      var startNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      startNode = startNode || this.virtualRoot;\n\n      if (startNode.data[this.options.isExpandedField]) {\n        this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, _defineProperty({}, startNode.id, true));\n      }\n\n      if (startNode.children) {\n        startNode.children.forEach(function (child) {\n          return _this13._calculateExpandedNodes(child);\n        });\n      }\n    }\n  }, {\n    key: \"_setActiveNodeSingle\",\n    value: function _setActiveNodeSingle(node, value) {\n      var _this14 = this;\n\n      // Deactivate all other nodes:\n      this.activeNodes.filter(function (activeNode) {\n        return activeNode !== node;\n      }).forEach(function (activeNode) {\n        _this14.fireEvent({\n          eventName: TREE_EVENTS.deactivate,\n          node: activeNode\n        });\n\n        _this14.fireEvent({\n          eventName: TREE_EVENTS.nodeDeactivate,\n          node: activeNode\n        }); // For IE11\n\n      });\n\n      if (value) {\n        this.activeNodeIds = _defineProperty({}, node.id, true);\n      } else {\n        this.activeNodeIds = {};\n      }\n    }\n  }, {\n    key: \"_setActiveNodeMulti\",\n    value: function _setActiveNodeMulti(node, value) {\n      this.activeNodeIds = Object.assign({}, this.activeNodeIds, _defineProperty({}, node.id, value));\n    }\n  }]);\n\n  return TreeModel;\n}();\n\nTreeModel.ɵfac = function TreeModel_Factory(t) {\n  return new (t || TreeModel)();\n};\n\nTreeModel.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TreeModel,\n  factory: TreeModel.ɵfac\n});\nTreeModel.focusedTree = null;\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Array)], TreeModel.prototype, \"roots\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Object)], TreeModel.prototype, \"expandedNodeIds\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Object)], TreeModel.prototype, \"selectedLeafNodeIds\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Object)], TreeModel.prototype, \"activeNodeIds\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Object)], TreeModel.prototype, \"hiddenNodeIds\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", Object)], TreeModel.prototype, \"focusedNodeId\", void 0);\n\n__decorate$1([observable$1, __metadata$1(\"design:type\", TreeNode)], TreeModel.prototype, \"virtualRoot\", void 0);\n\n__decorate$1([computed$1, __metadata$1(\"design:type\", Object), __metadata$1(\"design:paramtypes\", [])], TreeModel.prototype, \"focusedNode\", null);\n\n__decorate$1([computed$1, __metadata$1(\"design:type\", Object), __metadata$1(\"design:paramtypes\", [])], TreeModel.prototype, \"expandedNodes\", null);\n\n__decorate$1([computed$1, __metadata$1(\"design:type\", Object), __metadata$1(\"design:paramtypes\", [])], TreeModel.prototype, \"activeNodes\", null);\n\n__decorate$1([computed$1, __metadata$1(\"design:type\", Object), __metadata$1(\"design:paramtypes\", [])], TreeModel.prototype, \"hiddenNodes\", null);\n\n__decorate$1([computed$1, __metadata$1(\"design:type\", Object), __metadata$1(\"design:paramtypes\", [])], TreeModel.prototype, \"selectedLeafNodes\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setData\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"update\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setFocusedNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setFocus\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"doForAll\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"focusNextNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"focusPreviousNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"focusDrillDown\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"focusDrillUp\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setActiveNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setSelectedNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setExpandedNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"expandAll\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"collapseAll\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setIsHidden\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setHiddenNodeIds\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"filterNodes\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", []), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"clearFilter\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"moveNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object, Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"copyNode\", null);\n\n__decorate$1([action$1, __metadata$1(\"design:type\", Function), __metadata$1(\"design:paramtypes\", [Object]), __metadata$1(\"design:returntype\", void 0)], TreeModel.prototype, \"setState\", null);\n\nvar TreeDraggedElement = /*#__PURE__*/function () {\n  function TreeDraggedElement() {\n    _classCallCheck(this, TreeDraggedElement);\n\n    this._draggedElement = null;\n  }\n\n  _createClass(TreeDraggedElement, [{\n    key: \"set\",\n    value: function set(draggedElement) {\n      this._draggedElement = draggedElement;\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this._draggedElement;\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return !!this.get();\n    }\n  }]);\n\n  return TreeDraggedElement;\n}();\n\nTreeDraggedElement.ɵfac = function TreeDraggedElement_Factory(t) {\n  return new (t || TreeDraggedElement)();\n};\n/** @nocollapse */\n\n\nTreeDraggedElement.ɵprov = ɵɵdefineInjectable({\n  factory: function TreeDraggedElement_Factory() {\n    return new TreeDraggedElement();\n  },\n  token: TreeDraggedElement,\n  providedIn: \"root\"\n});\n\nvar __decorate$2 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata$2 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar Y_OFFSET = 500; // Extra pixels outside the viewport, in each direction, to render nodes in\n\nvar Y_EPSILON = 150; // Minimum pixel change required to recalculate the rendered nodes\n\nvar TreeVirtualScroll = /*#__PURE__*/function () {\n  function TreeVirtualScroll(treeModel) {\n    var _this15 = this;\n\n    _classCallCheck(this, TreeVirtualScroll);\n\n    this.treeModel = treeModel;\n    this.yBlocks = 0;\n    this.x = 0;\n    this.viewportHeight = null;\n    this.viewport = null;\n    treeModel.virtualScroll = this;\n    this._dispose = [autorun(function () {\n      return _this15.fixScroll();\n    })];\n  }\n\n  _createClass(TreeVirtualScroll, [{\n    key: \"y\",\n    get: function get() {\n      return this.yBlocks * Y_EPSILON;\n    }\n  }, {\n    key: \"totalHeight\",\n    get: function get() {\n      return this.treeModel.virtualRoot ? this.treeModel.virtualRoot.height : 0;\n    }\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(event) {\n      this.treeModel.fireEvent(event);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this16 = this;\n\n      var fn = this.recalcPositions.bind(this);\n      fn();\n      this._dispose = [].concat(_toConsumableArray(this._dispose), [reaction(function () {\n        return _this16.treeModel.roots;\n      }, fn), reaction(function () {\n        return _this16.treeModel.expandedNodeIds;\n      }, fn), reaction(function () {\n        return _this16.treeModel.hiddenNodeIds;\n      }, fn)]);\n      this.treeModel.subscribe(TREE_EVENTS.loadNodeChildren, fn);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.treeModel.options.useVirtualScroll;\n    }\n  }, {\n    key: \"_setYBlocks\",\n    value: function _setYBlocks(value) {\n      this.yBlocks = value;\n    }\n  }, {\n    key: \"recalcPositions\",\n    value: function recalcPositions() {\n      this.treeModel.virtualRoot.height = this._getPositionAfter(this.treeModel.getVisibleRoots(), 0);\n    }\n  }, {\n    key: \"_getPositionAfter\",\n    value: function _getPositionAfter(nodes, startPos) {\n      var _this17 = this;\n\n      var position = startPos;\n      nodes.forEach(function (node) {\n        node.position = position;\n        position = _this17._getPositionAfterNode(node, position);\n      });\n      return position;\n    }\n  }, {\n    key: \"_getPositionAfterNode\",\n    value: function _getPositionAfterNode(node, startPos) {\n      var position = node.getSelfHeight() + startPos;\n\n      if (node.children && node.isExpanded) {\n        // TBD: consider loading component as well\n        position = this._getPositionAfter(node.visibleChildren, position);\n      }\n\n      node.height = position - startPos;\n      return position;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._dispose.forEach(function (d) {\n        return d();\n      });\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewport) {\n      Object.assign(this, {\n        viewport: viewport,\n        x: viewport.scrollLeft,\n        yBlocks: Math.round(viewport.scrollTop / Y_EPSILON),\n        viewportHeight: viewport.getBoundingClientRect ? viewport.getBoundingClientRect().height : 0\n      });\n    }\n  }, {\n    key: \"scrollIntoView\",\n    value: function scrollIntoView(node, force) {\n      var scrollToMiddle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (node.options.scrollContainer) {\n        var scrollContainer = node.options.scrollContainer;\n        var scrollContainerHeight = scrollContainer.getBoundingClientRect().height;\n        var scrollContainerTop = scrollContainer.getBoundingClientRect().top;\n        var nodeTop = this.viewport.getBoundingClientRect().top + node.position - scrollContainerTop;\n\n        if (force || // force scroll to node\n        nodeTop < scrollContainer.scrollTop || // node is above scroll container\n        nodeTop + node.getSelfHeight() > scrollContainer.scrollTop + scrollContainerHeight) {\n          // node is below container\n          scrollContainer.scrollTop = scrollToMiddle ? nodeTop - scrollContainerHeight / 2 : // scroll to middle\n          nodeTop; // scroll to start\n        }\n      } else {\n        if (force || // force scroll to node\n        node.position < this.y || // node is above viewport\n        node.position + node.getSelfHeight() > this.y + this.viewportHeight) {\n          // node is below viewport\n          if (this.viewport) {\n            this.viewport.scrollTop = scrollToMiddle ? node.position - this.viewportHeight / 2 : // scroll to middle\n            node.position; // scroll to start\n\n            this._setYBlocks(Math.floor(this.viewport.scrollTop / Y_EPSILON));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getViewportNodes\",\n    value: function getViewportNodes(nodes) {\n      var _this18 = this;\n\n      if (!nodes) return [];\n      var visibleNodes = nodes.filter(function (node) {\n        return !node.isHidden;\n      });\n      if (!this.isEnabled()) return visibleNodes;\n      if (!this.viewportHeight || !visibleNodes.length) return []; // When loading children async this method is called before their height and position is calculated.\n      // In that case firstIndex === 0 and lastIndex === visibleNodes.length - 1 (e.g. 1000),\n      // which means that it loops through every visibleNodes item and push them into viewportNodes array.\n      // We can prevent nodes from being pushed to the array and wait for the appropriate calculations to take place\n\n      var lastVisibleNode = visibleNodes.slice(-1)[0];\n      if (!lastVisibleNode.height && lastVisibleNode.position === 0) return []; // Search for first node in the viewport using binary search\n      // Look for first node that starts after the beginning of the viewport (with buffer)\n      // Or that ends after the beginning of the viewport\n\n      var firstIndex = binarySearch(visibleNodes, function (node) {\n        return node.position + Y_OFFSET > _this18.y || node.position + node.height > _this18.y;\n      }); // Search for last node in the viewport using binary search\n      // Look for first node that starts after the end of the viewport (with buffer)\n\n      var lastIndex = binarySearch(visibleNodes, function (node) {\n        return node.position - Y_OFFSET > _this18.y + _this18.viewportHeight;\n      }, firstIndex);\n      var viewportNodes = [];\n\n      for (var i = firstIndex; i <= lastIndex; i++) {\n        viewportNodes.push(visibleNodes[i]);\n      }\n\n      return viewportNodes;\n    }\n  }, {\n    key: \"fixScroll\",\n    value: function fixScroll() {\n      var maxY = Math.max(0, this.totalHeight - this.viewportHeight);\n      if (this.y < 0) this._setYBlocks(0);\n      if (this.y > maxY) this._setYBlocks(maxY / Y_EPSILON);\n    }\n  }]);\n\n  return TreeVirtualScroll;\n}();\n\nTreeVirtualScroll.ɵfac = function TreeVirtualScroll_Factory(t) {\n  return new (t || TreeVirtualScroll)(ɵngcc0.ɵɵinject(TreeModel));\n};\n\nTreeVirtualScroll.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TreeVirtualScroll,\n  factory: TreeVirtualScroll.ɵfac\n});\n/** @nocollapse */\n\nTreeVirtualScroll.ctorParameters = function () {\n  return [{\n    type: TreeModel\n  }];\n};\n\n__decorate$2([observable$1, __metadata$2(\"design:type\", Object)], TreeVirtualScroll.prototype, \"yBlocks\", void 0);\n\n__decorate$2([observable$1, __metadata$2(\"design:type\", Object)], TreeVirtualScroll.prototype, \"x\", void 0);\n\n__decorate$2([observable$1, __metadata$2(\"design:type\", Object)], TreeVirtualScroll.prototype, \"viewportHeight\", void 0);\n\n__decorate$2([computed$1, __metadata$2(\"design:type\", Object), __metadata$2(\"design:paramtypes\", [])], TreeVirtualScroll.prototype, \"y\", null);\n\n__decorate$2([computed$1, __metadata$2(\"design:type\", Object), __metadata$2(\"design:paramtypes\", [])], TreeVirtualScroll.prototype, \"totalHeight\", null);\n\n__decorate$2([action$1, __metadata$2(\"design:type\", Function), __metadata$2(\"design:paramtypes\", [Object]), __metadata$2(\"design:returntype\", void 0)], TreeVirtualScroll.prototype, \"_setYBlocks\", null);\n\n__decorate$2([action$1, __metadata$2(\"design:type\", Function), __metadata$2(\"design:paramtypes\", []), __metadata$2(\"design:returntype\", void 0)], TreeVirtualScroll.prototype, \"recalcPositions\", null);\n\n__decorate$2([action$1, __metadata$2(\"design:type\", Function), __metadata$2(\"design:paramtypes\", [Object]), __metadata$2(\"design:returntype\", void 0)], TreeVirtualScroll.prototype, \"setViewport\", null);\n\n__decorate$2([action$1, __metadata$2(\"design:type\", Function), __metadata$2(\"design:paramtypes\", [Object, Object, Object]), __metadata$2(\"design:returntype\", void 0)], TreeVirtualScroll.prototype, \"scrollIntoView\", null);\n\nfunction binarySearch(nodes, condition) {\n  var firstIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var index = firstIndex;\n  var toIndex = nodes.length - 1;\n\n  while (index !== toIndex) {\n    var midIndex = Math.floor((index + toIndex) / 2);\n\n    if (condition(nodes[midIndex])) {\n      toIndex = midIndex;\n    } else {\n      if (index === midIndex) index = toIndex;else index = midIndex;\n    }\n  }\n\n  return index;\n}\n\nvar LoadingComponent = /*#__PURE__*/_createClass(function LoadingComponent() {\n  _classCallCheck(this, LoadingComponent);\n});\n\nLoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n  return new (t || LoadingComponent)();\n};\n\nLoadingComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: LoadingComponent,\n  selectors: [[\"tree-loading-component\"]],\n  inputs: {\n    template: \"template\",\n    node: \"node\"\n  },\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function LoadingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, LoadingComponent_span_0_Template, 2, 0, \"span\", 0);\n      ɵngcc0.ɵɵelementContainer(1, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.node));\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\nLoadingComponent.propDecorators = {\n  template: [{\n    type: Input\n  }],\n  node: [{\n    type: Input\n  }]\n};\n\nvar TreeViewportComponent = /*#__PURE__*/function () {\n  function TreeViewportComponent(elementRef, virtualScroll) {\n    var _this19 = this;\n\n    _classCallCheck(this, TreeViewportComponent);\n\n    this.elementRef = elementRef;\n    this.virtualScroll = virtualScroll;\n    this.setViewport = this.throttle(function () {\n      _this19.virtualScroll.setViewport(_this19.elementRef.nativeElement);\n    }, 17);\n    this.scrollEventHandler = this.setViewport.bind(this);\n  }\n\n  _createClass(TreeViewportComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.virtualScroll.init();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this20 = this;\n\n      setTimeout(function () {\n        _this20.setViewport();\n\n        _this20.virtualScroll.fireEvent({\n          eventName: TREE_EVENTS.initialized\n        });\n      });\n      var el = this.elementRef.nativeElement;\n      el.addEventListener('scroll', this.scrollEventHandler);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.virtualScroll.clear();\n      var el = this.elementRef.nativeElement;\n      el.removeEventListener('scroll', this.scrollEventHandler);\n    }\n  }, {\n    key: \"getTotalHeight\",\n    value: function getTotalHeight() {\n      return this.virtualScroll.isEnabled() && this.virtualScroll.totalHeight + 'px' || 'auto';\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(func, timeFrame) {\n      var lastTime = 0;\n      return function () {\n        var now = Date.now();\n\n        if (now - lastTime >= timeFrame) {\n          func();\n          lastTime = now;\n        }\n      };\n    }\n  }]);\n\n  return TreeViewportComponent;\n}();\n\nTreeViewportComponent.ɵfac = function TreeViewportComponent_Factory(t) {\n  return new (t || TreeViewportComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(TreeVirtualScroll));\n};\n\nTreeViewportComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeViewportComponent,\n  selectors: [[\"tree-viewport\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([TreeVirtualScroll])],\n  ngContentSelectors: _c2,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"]],\n  template: function TreeViewportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, TreeViewportComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: [TreeMobxAutorunDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTreeViewportComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: TreeVirtualScroll\n  }];\n};\n\nvar TreeComponent = /*#__PURE__*/function () {\n  function TreeComponent(treeModel, treeDraggedElement) {\n    var _this21 = this;\n\n    _classCallCheck(this, TreeComponent);\n\n    this.treeModel = treeModel;\n    this.treeDraggedElement = treeDraggedElement;\n    treeModel.eventNames.forEach(function (name) {\n      return _this21[name] = new EventEmitter();\n    });\n    treeModel.subscribeToState(function (state) {\n      return _this21.stateChange.emit(state);\n    });\n  } // Will be handled in ngOnChanges\n\n\n  _createClass(TreeComponent, [{\n    key: \"nodes\",\n    set: function set(nodes) {}\n  }, {\n    key: \"options\",\n    set: function set(options) {}\n  }, {\n    key: \"focused\",\n    set: function set(value) {\n      this.treeModel.setFocus(value);\n    }\n  }, {\n    key: \"state\",\n    set: function set(state) {\n      this.treeModel.setState(state);\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown($event) {\n      if (!this.treeModel.isFocused) return;\n      if (['input', 'textarea'].includes(document.activeElement.tagName.toLowerCase())) return;\n      var focusedNode = this.treeModel.getFocusedNode();\n      this.treeModel.performKeyAction(focusedNode, $event);\n    }\n  }, {\n    key: \"onMousedown\",\n    value: function onMousedown($event) {\n      function isOutsideClick(startElement, nodeName) {\n        return !startElement ? true : startElement.localName === nodeName ? false : isOutsideClick(startElement.parentElement, nodeName);\n      }\n\n      if (isOutsideClick($event.target, 'tree-root')) {\n        this.treeModel.setFocus(false);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.options || changes.nodes) {\n        this.treeModel.setData({\n          options: changes.options && changes.options.currentValue,\n          nodes: changes.nodes && changes.nodes.currentValue,\n          events: this.pick(this, this.treeModel.eventNames)\n        });\n      }\n    }\n  }, {\n    key: \"sizeChanged\",\n    value: function sizeChanged() {\n      this.viewportComponent.setViewport();\n    }\n  }, {\n    key: \"pick\",\n    value: function pick(object, keys) {\n      return keys.reduce(function (obj, key) {\n        if (object && object.hasOwnProperty(key)) {\n          obj[key] = object[key];\n        }\n\n        return obj;\n      }, {});\n    }\n  }]);\n\n  return TreeComponent;\n}();\n\nTreeComponent.ɵfac = function TreeComponent_Factory(t) {\n  return new (t || TreeComponent)(ɵngcc0.ɵɵdirectiveInject(TreeModel), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement));\n};\n\nTreeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeComponent,\n  selectors: [[\"Tree\"], [\"tree-root\"]],\n  contentQueries: function TreeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c3, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c4, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c5, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c6, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeWrapperTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeFullTemplate = _t.first);\n    }\n  },\n  viewQuery: function TreeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewportComponent = _t.first);\n    }\n  },\n  hostBindings: function TreeComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function TreeComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeydown($event);\n      }, false, ɵngcc0.ɵɵresolveBody)(\"mousedown\", function TreeComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMousedown($event);\n      }, false, ɵngcc0.ɵɵresolveBody);\n    }\n  },\n  inputs: {\n    nodes: \"nodes\",\n    options: \"options\",\n    focused: \"focused\",\n    state: \"state\"\n  },\n  outputs: {\n    toggleExpanded: \"toggleExpanded\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    nodeActivate: \"nodeActivate\",\n    nodeDeactivate: \"nodeDeactivate\",\n    select: \"select\",\n    deselect: \"deselect\",\n    focus: \"focus\",\n    blur: \"blur\",\n    updateData: \"updateData\",\n    initialized: \"initialized\",\n    moveNode: \"moveNode\",\n    copyNode: \"copyNode\",\n    loadNodeChildren: \"loadNodeChildren\",\n    changeFilter: \"changeFilter\",\n    event: \"event\",\n    stateChange: \"stateChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([TreeModel]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 6,\n  consts: [[\"viewport\", \"\"], [1, \"angular-tree-component\"], [3, \"nodes\", \"treeModel\", \"templates\", 4, \"ngIf\"], [\"class\", \"empty-tree-drop-slot\", 3, \"dropIndex\", \"node\", 4, \"ngIf\"], [3, \"nodes\", \"treeModel\", \"templates\"], [1, \"empty-tree-drop-slot\", 3, \"dropIndex\", \"node\"]],\n  template: function TreeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"tree-viewport\", null, 0);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(3, TreeComponent_tree_node_collection_3_Template, 1, 8, \"tree-node-collection\", 2);\n      ɵngcc0.ɵɵtemplate(4, TreeComponent_tree_node_drop_slot_4_Template, 1, 2, \"tree-node-drop-slot\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"node-dragging\", ctx.treeDraggedElement.isDragging())(\"angular-tree-component-rtl\", ctx.treeModel.options.rtl);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.treeModel.roots);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.treeModel.isEmptyTree());\n    }\n  },\n  directives: function directives() {\n    return [TreeViewportComponent, ɵngcc1.NgIf, TreeNodeCollectionComponent, TreeNodeDropSlot];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTreeComponent.ctorParameters = function () {\n  return [{\n    type: TreeModel\n  }, {\n    type: TreeDraggedElement\n  }];\n};\n\nTreeComponent.propDecorators = {\n  loadingTemplate: [{\n    type: ContentChild,\n    args: ['loadingTemplate', {\n      static: false\n    }]\n  }],\n  treeNodeTemplate: [{\n    type: ContentChild,\n    args: ['treeNodeTemplate', {\n      static: false\n    }]\n  }],\n  treeNodeWrapperTemplate: [{\n    type: ContentChild,\n    args: ['treeNodeWrapperTemplate', {\n      static: false\n    }]\n  }],\n  treeNodeFullTemplate: [{\n    type: ContentChild,\n    args: ['treeNodeFullTemplate', {\n      static: false\n    }]\n  }],\n  viewportComponent: [{\n    type: ViewChild,\n    args: ['viewport', {\n      static: false\n    }]\n  }],\n  nodes: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  focused: [{\n    type: Input\n  }],\n  state: [{\n    type: Input\n  }],\n  toggleExpanded: [{\n    type: Output\n  }],\n  activate: [{\n    type: Output\n  }],\n  deactivate: [{\n    type: Output\n  }],\n  nodeActivate: [{\n    type: Output\n  }],\n  nodeDeactivate: [{\n    type: Output\n  }],\n  select: [{\n    type: Output\n  }],\n  deselect: [{\n    type: Output\n  }],\n  focus: [{\n    type: Output\n  }],\n  blur: [{\n    type: Output\n  }],\n  updateData: [{\n    type: Output\n  }],\n  initialized: [{\n    type: Output\n  }],\n  moveNode: [{\n    type: Output\n  }],\n  copyNode: [{\n    type: Output\n  }],\n  loadNodeChildren: [{\n    type: Output\n  }],\n  changeFilter: [{\n    type: Output\n  }],\n  event: [{\n    type: Output\n  }],\n  stateChange: [{\n    type: Output\n  }],\n  onKeydown: [{\n    type: HostListener,\n    args: ['body: keydown', ['$event']]\n  }],\n  onMousedown: [{\n    type: HostListener,\n    args: ['body: mousedown', ['$event']]\n  }]\n};\n\nvar TreeNodeComponent = /*#__PURE__*/_createClass(function TreeNodeComponent() {\n  _classCallCheck(this, TreeNodeComponent);\n});\n\nTreeNodeComponent.ɵfac = function TreeNodeComponent_Factory(t) {\n  return new (t || TreeNodeComponent)();\n};\n\nTreeNodeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeComponent,\n  selectors: [[\"TreeNode\"], [\"tree-node\"]],\n  inputs: {\n    node: \"node\",\n    index: \"index\",\n    templates: \"templates\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"], [3, \"class\", \"tree-node\", \"tree-node-expanded\", \"tree-node-collapsed\", \"tree-node-leaf\", \"tree-node-active\", \"tree-node-focused\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"dropIndex\", \"node\", 4, \"ngIf\"], [3, \"node\", \"index\", \"templates\"], [3, \"node\", \"templates\"], [3, \"dropIndex\", \"node\"]],\n  template: function TreeNodeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeComponent_ng_container_0_Template, 3, 8, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: function directives() {\n    return [TreeMobxAutorunDirective, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, TreeNodeWrapperComponent, TreeNodeChildrenComponent, TreeNodeDropSlot];\n  },\n  encapsulation: 2\n});\nTreeNodeComponent.propDecorators = {\n  node: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  templates: [{\n    type: Input\n  }]\n};\n\nvar TreeNodeContent = /*#__PURE__*/_createClass(function TreeNodeContent() {\n  _classCallCheck(this, TreeNodeContent);\n});\n\nTreeNodeContent.ɵfac = function TreeNodeContent_Factory(t) {\n  return new (t || TreeNodeContent)();\n};\n\nTreeNodeContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeContent,\n  selectors: [[\"tree-node-content\"]],\n  inputs: {\n    node: \"node\",\n    index: \"index\",\n    template: \"template\"\n  },\n  decls: 2,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function TreeNodeContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeContent_span_0_Template, 2, 1, \"span\", 0);\n      ɵngcc0.ɵɵelementContainer(1, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(3, _c10, ctx.node, ctx.node, ctx.index));\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\nTreeNodeContent.propDecorators = {\n  node: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }]\n};\n\nvar TreeNodeDropSlot = /*#__PURE__*/function () {\n  function TreeNodeDropSlot() {\n    _classCallCheck(this, TreeNodeDropSlot);\n  }\n\n  _createClass(TreeNodeDropSlot, [{\n    key: \"onDrop\",\n    value: function onDrop($event) {\n      this.node.mouseAction('drop', $event.event, {\n        from: $event.element,\n        to: {\n          parent: this.node,\n          index: this.dropIndex\n        }\n      });\n    }\n  }, {\n    key: \"allowDrop\",\n    value: function allowDrop(element, $event) {\n      return this.node.options.allowDrop(element, {\n        parent: this.node,\n        index: this.dropIndex\n      }, $event);\n    }\n  }]);\n\n  return TreeNodeDropSlot;\n}();\n\nTreeNodeDropSlot.ɵfac = function TreeNodeDropSlot_Factory(t) {\n  return new (t || TreeNodeDropSlot)();\n};\n\nTreeNodeDropSlot.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeDropSlot,\n  selectors: [[\"TreeNodeDropSlot\"], [\"tree-node-drop-slot\"]],\n  inputs: {\n    node: \"node\",\n    dropIndex: \"dropIndex\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[1, \"node-drop-slot\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrop\"]],\n  template: function TreeNodeDropSlot_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"treeDrop\", function TreeNodeDropSlot_Template_div_treeDrop_0_listener($event) {\n        return ctx.onDrop($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx.allowDrop.bind(ctx))(\"allowDragoverStyling\", true);\n    }\n  },\n  directives: function directives() {\n    return [TreeDropDirective];\n  },\n  encapsulation: 2\n});\nTreeNodeDropSlot.propDecorators = {\n  node: [{\n    type: Input\n  }],\n  dropIndex: [{\n    type: Input\n  }]\n};\n\nvar TreeNodeExpanderComponent = /*#__PURE__*/_createClass(function TreeNodeExpanderComponent() {\n  _classCallCheck(this, TreeNodeExpanderComponent);\n});\n\nTreeNodeExpanderComponent.ɵfac = function TreeNodeExpanderComponent_Factory(t) {\n  return new (t || TreeNodeExpanderComponent)();\n};\n\nTreeNodeExpanderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeExpanderComponent,\n  selectors: [[\"tree-node-expander\"]],\n  inputs: {\n    node: \"node\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"], [\"class\", \"toggle-children-wrapper\", 3, \"toggle-children-wrapper-expanded\", \"toggle-children-wrapper-collapsed\", \"click\", 4, \"ngIf\"], [\"class\", \"toggle-children-placeholder\", 4, \"ngIf\"], [1, \"toggle-children-wrapper\", 3, \"click\"], [1, \"toggle-children\"], [1, \"toggle-children-placeholder\"]],\n  template: function TreeNodeExpanderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeExpanderComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: [TreeMobxAutorunDirective, ɵngcc1.NgIf],\n  encapsulation: 2\n});\nTreeNodeExpanderComponent.propDecorators = {\n  node: [{\n    type: Input\n  }]\n};\n\nvar TreeNodeChildrenComponent = /*#__PURE__*/_createClass(function TreeNodeChildrenComponent() {\n  _classCallCheck(this, TreeNodeChildrenComponent);\n});\n\nTreeNodeChildrenComponent.ɵfac = function TreeNodeChildrenComponent_Factory(t) {\n  return new (t || TreeNodeChildrenComponent)();\n};\n\nTreeNodeChildrenComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeChildrenComponent,\n  selectors: [[\"tree-node-children\"]],\n  inputs: {\n    node: \"node\",\n    templates: \"templates\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"], [3, \"tree-children\", \"tree-children-no-padding\", 4, \"treeAnimateOpen\", \"treeAnimateOpenSpeed\", \"treeAnimateOpenAcceleration\", \"treeAnimateOpenEnabled\"], [3, \"nodes\", \"templates\", \"treeModel\", 4, \"ngIf\"], [\"class\", \"tree-node-loading\", 3, \"padding-left\", \"template\", \"node\", 4, \"ngIf\"], [3, \"nodes\", \"templates\", \"treeModel\"], [1, \"tree-node-loading\", 3, \"template\", \"node\"]],\n  template: function TreeNodeChildrenComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeChildrenComponent_ng_container_0_Template, 2, 4, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: function directives() {\n    return [TreeMobxAutorunDirective, TreeAnimateOpenDirective, ɵngcc1.NgIf, TreeNodeCollectionComponent, LoadingComponent];\n  },\n  encapsulation: 2\n});\nTreeNodeChildrenComponent.propDecorators = {\n  node: [{\n    type: Input\n  }],\n  templates: [{\n    type: Input\n  }]\n}; // Re-export mobx operators to be able to use inside components with AOT:\n\nfunction actionInternal() {\n  return action$1.apply(void 0, arguments);\n}\n\nvar action = Object.assign(actionInternal, action$1);\n\nfunction computedInternal() {\n  return computed$1.apply(void 0, arguments);\n}\n\nvar computed = Object.assign(computedInternal, computed$1);\n\nfunction observableInternal() {\n  return observable$1.apply(void 0, arguments);\n}\n\nvar observable = Object.assign(observableInternal, observable$1);\n\nvar __decorate$3 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata$3 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar TreeNodeCollectionComponent = /*#__PURE__*/function () {\n  function TreeNodeCollectionComponent() {\n    _classCallCheck(this, TreeNodeCollectionComponent);\n\n    this._dispose = [];\n  }\n\n  _createClass(TreeNodeCollectionComponent, [{\n    key: \"nodes\",\n    get: function get() {\n      return this._nodes;\n    },\n    set: function set(nodes) {\n      this.setNodes(nodes);\n    }\n  }, {\n    key: \"marginTop\",\n    get: function get() {\n      var firstNode = this.viewportNodes && this.viewportNodes.length && this.viewportNodes[0];\n      var relativePosition = firstNode && firstNode.parent ? firstNode.position - firstNode.parent.position - firstNode.parent.getSelfHeight() : 0;\n      return \"\".concat(relativePosition, \"px\");\n    }\n  }, {\n    key: \"setNodes\",\n    value: function setNodes(nodes) {\n      this._nodes = nodes;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this22 = this;\n\n      this.virtualScroll = this.treeModel.virtualScroll;\n      this._dispose = [// return node indexes so we can compare structurally,\n      reaction(function () {\n        return _this22.virtualScroll.getViewportNodes(_this22.nodes).map(function (n) {\n          return n.index;\n        });\n      }, function (nodeIndexes) {\n        _this22.viewportNodes = nodeIndexes.map(function (i) {\n          return _this22.nodes[i];\n        });\n      }, {\n        compareStructural: true,\n        fireImmediately: true\n      }), reaction(function () {\n        return _this22.nodes;\n      }, function (nodes) {\n        _this22.viewportNodes = _this22.virtualScroll.getViewportNodes(nodes);\n      })];\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._dispose.forEach(function (d) {\n        return d();\n      });\n    }\n  }, {\n    key: \"trackNode\",\n    value: function trackNode(index, node) {\n      return node.id;\n    }\n  }]);\n\n  return TreeNodeCollectionComponent;\n}();\n\nTreeNodeCollectionComponent.ɵfac = function TreeNodeCollectionComponent_Factory(t) {\n  return new (t || TreeNodeCollectionComponent)();\n};\n\nTreeNodeCollectionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeCollectionComponent,\n  selectors: [[\"tree-node-collection\"]],\n  inputs: {\n    nodes: \"nodes\",\n    treeModel: \"treeModel\",\n    templates: \"templates\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"], [3, \"node\", \"index\", \"templates\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"node\", \"index\", \"templates\"]],\n  template: function TreeNodeCollectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeCollectionComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: [TreeMobxAutorunDirective, ɵngcc1.NgForOf, TreeNodeComponent],\n  encapsulation: 2\n});\nTreeNodeCollectionComponent.propDecorators = {\n  nodes: [{\n    type: Input\n  }],\n  treeModel: [{\n    type: Input\n  }],\n  templates: [{\n    type: Input\n  }]\n};\n\n__decorate$3([observable, __metadata$3(\"design:type\", Object)], TreeNodeCollectionComponent.prototype, \"_nodes\", void 0);\n\n__decorate$3([observable, __metadata$3(\"design:type\", Array)], TreeNodeCollectionComponent.prototype, \"viewportNodes\", void 0);\n\n__decorate$3([computed, __metadata$3(\"design:type\", String), __metadata$3(\"design:paramtypes\", [])], TreeNodeCollectionComponent.prototype, \"marginTop\", null);\n\n__decorate$3([action, __metadata$3(\"design:type\", Function), __metadata$3(\"design:paramtypes\", [Object]), __metadata$3(\"design:returntype\", void 0)], TreeNodeCollectionComponent.prototype, \"setNodes\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeMobxAutorunDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[treeMobxAutorun]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    treeMobxAutorun: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeModel, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDraggedElement, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeVirtualScroll, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: TreeModel\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'tree-loading-component',\n      template: \"\\n    <span *ngIf=\\\"!template\\\">loading...</span>\\n    <ng-container\\n      [ngTemplateOutlet]=\\\"template\\\"\\n      [ngTemplateOutletContext]=\\\"{ $implicit: node }\\\">\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    template: [{\n      type: Input\n    }],\n    node: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeViewportComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-viewport',\n      providers: [TreeVirtualScroll],\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <div [style.height]=\\\"getTotalHeight()\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: TreeVirtualScroll\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'Tree, tree-root',\n      providers: [TreeModel],\n      template: \"\\n      <tree-viewport #viewport>\\n          <div\\n                  class=\\\"angular-tree-component\\\"\\n                  [class.node-dragging]=\\\"treeDraggedElement.isDragging()\\\"\\n                  [class.angular-tree-component-rtl]=\\\"treeModel.options.rtl\\\">\\n              <tree-node-collection\\n                      *ngIf=\\\"treeModel.roots\\\"\\n                      [nodes]=\\\"treeModel.roots\\\"\\n                      [treeModel]=\\\"treeModel\\\"\\n                      [templates]=\\\"{\\n            loadingTemplate: loadingTemplate,\\n            treeNodeTemplate: treeNodeTemplate,\\n            treeNodeWrapperTemplate: treeNodeWrapperTemplate,\\n            treeNodeFullTemplate: treeNodeFullTemplate\\n          }\\\">\\n              </tree-node-collection>\\n              <tree-node-drop-slot\\n                      class=\\\"empty-tree-drop-slot\\\"\\n                      *ngIf=\\\"treeModel.isEmptyTree()\\\"\\n                      [dropIndex]=\\\"0\\\"\\n                      [node]=\\\"treeModel.virtualRoot\\\">\\n              </tree-node-drop-slot>\\n          </div>\\n      </tree-viewport>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: TreeModel\n    }, {\n      type: TreeDraggedElement\n    }];\n  }, {\n    nodes: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    onKeydown: [{\n      type: HostListener,\n      args: ['body: keydown', ['$event']]\n    }],\n    onMousedown: [{\n      type: HostListener,\n      args: ['body: mousedown', ['$event']]\n    }],\n    loadingTemplate: [{\n      type: ContentChild,\n      args: ['loadingTemplate', {\n        static: false\n      }]\n    }],\n    treeNodeTemplate: [{\n      type: ContentChild,\n      args: ['treeNodeTemplate', {\n        static: false\n      }]\n    }],\n    treeNodeWrapperTemplate: [{\n      type: ContentChild,\n      args: ['treeNodeWrapperTemplate', {\n        static: false\n      }]\n    }],\n    treeNodeFullTemplate: [{\n      type: ContentChild,\n      args: ['treeNodeFullTemplate', {\n        static: false\n      }]\n    }],\n    viewportComponent: [{\n      type: ViewChild,\n      args: ['viewport', {\n        static: false\n      }]\n    }],\n    toggleExpanded: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    nodeActivate: [{\n      type: Output\n    }],\n    nodeDeactivate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    deselect: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    updateData: [{\n      type: Output\n    }],\n    initialized: [{\n      type: Output\n    }],\n    moveNode: [{\n      type: Output\n    }],\n    copyNode: [{\n      type: Output\n    }],\n    loadNodeChildren: [{\n      type: Output\n    }],\n    changeFilter: [{\n      type: Output\n    }],\n    event: [{\n      type: Output\n    }],\n    stateChange: [{\n      type: Output\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'TreeNode, tree-node',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <div\\n        *ngIf=\\\"!templates.treeNodeFullTemplate\\\"\\n        [class]=\\\"node.getClass()\\\"\\n        [class.tree-node]=\\\"true\\\"\\n        [class.tree-node-expanded]=\\\"node.isExpanded && node.hasChildren\\\"\\n        [class.tree-node-collapsed]=\\\"node.isCollapsed && node.hasChildren\\\"\\n        [class.tree-node-leaf]=\\\"node.isLeaf\\\"\\n        [class.tree-node-active]=\\\"node.isActive\\\"\\n        [class.tree-node-focused]=\\\"node.isFocused\\\"\\n      >\\n        <tree-node-drop-slot\\n          *ngIf=\\\"index === 0\\\"\\n          [dropIndex]=\\\"node.index\\\"\\n          [node]=\\\"node.parent\\\"\\n        ></tree-node-drop-slot>\\n\\n        <tree-node-wrapper\\n          [node]=\\\"node\\\"\\n          [index]=\\\"index\\\"\\n          [templates]=\\\"templates\\\"\\n        ></tree-node-wrapper>\\n\\n        <tree-node-children\\n          [node]=\\\"node\\\"\\n          [templates]=\\\"templates\\\"\\n        ></tree-node-children>\\n        <tree-node-drop-slot\\n          [dropIndex]=\\\"node.index + 1\\\"\\n          [node]=\\\"node.parent\\\"\\n        ></tree-node-drop-slot>\\n      </div>\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"templates.treeNodeFullTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          $implicit: node,\\n          node: node,\\n          index: index,\\n          templates: templates\\n        }\\\"\\n      >\\n      </ng-container>\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    templates: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeContent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-content',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n  <span *ngIf=\\\"!template\\\">{{ node.displayField }}</span>\\n  <ng-container\\n    [ngTemplateOutlet]=\\\"template\\\"\\n    [ngTemplateOutletContext]=\\\"{ $implicit: node, node: node, index: index }\\\">\\n  </ng-container>\"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeDropSlot, [{\n    type: Component,\n    args: [{\n      selector: 'TreeNodeDropSlot, tree-node-drop-slot',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div\\n      class=\\\"node-drop-slot\\\"\\n      (treeDrop)=\\\"onDrop($event)\\\"\\n      [treeAllowDrop]=\\\"allowDrop.bind(this)\\\"\\n      [allowDragoverStyling]=\\\"true\\\">\\n    </div>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }],\n    dropIndex: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeExpanderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-expander',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <span\\n        *ngIf=\\\"node.hasChildren\\\"\\n        [class.toggle-children-wrapper-expanded]=\\\"node.isExpanded\\\"\\n        [class.toggle-children-wrapper-collapsed]=\\\"node.isCollapsed\\\"\\n        class=\\\"toggle-children-wrapper\\\"\\n        (click)=\\\"node.mouseAction('expanderClick', $event)\\\"\\n      >\\n        <span class=\\\"toggle-children\\\"></span>\\n      </span>\\n      <span *ngIf=\\\"!node.hasChildren\\\" class=\\\"toggle-children-placeholder\\\">\\n      </span>\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeChildrenComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-children',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <div\\n        [class.tree-children]=\\\"true\\\"\\n        [class.tree-children-no-padding]=\\\"node.options.levelPadding\\\"\\n        *treeAnimateOpen=\\\"\\n          node.isExpanded;\\n          speed: node.options.animateSpeed;\\n          acceleration: node.options.animateAcceleration;\\n          enabled: node.options.animateExpand\\n        \\\"\\n      >\\n        <tree-node-collection\\n          *ngIf=\\\"node.children\\\"\\n          [nodes]=\\\"node.children\\\"\\n          [templates]=\\\"templates\\\"\\n          [treeModel]=\\\"node.treeModel\\\"\\n        >\\n        </tree-node-collection>\\n        <tree-loading-component\\n          [style.padding-left]=\\\"node.getNodePadding()\\\"\\n          class=\\\"tree-node-loading\\\"\\n          *ngIf=\\\"!node.children\\\"\\n          [template]=\\\"templates.loadingTemplate\\\"\\n          [node]=\\\"node\\\"\\n        ></tree-loading-component>\\n      </div>\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }],\n    templates: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeCollectionComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-collection',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <div [style.margin-top]=\\\"marginTop\\\">\\n        <tree-node\\n          *ngFor=\\\"let node of viewportNodes; let i = index; trackBy: trackNode\\\"\\n          [node]=\\\"node\\\"\\n          [index]=\\\"i\\\"\\n          [templates]=\\\"templates\\\"\\n        >\\n        </tree-node>\\n      </div>\\n    </ng-container>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    nodes: [{\n      type: Input\n    }],\n    treeModel: [{\n      type: Input\n    }],\n    templates: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TreeNodeWrapperComponent = /*#__PURE__*/_createClass(function TreeNodeWrapperComponent() {\n  _classCallCheck(this, TreeNodeWrapperComponent);\n});\n\nTreeNodeWrapperComponent.ɵfac = function TreeNodeWrapperComponent_Factory(t) {\n  return new (t || TreeNodeWrapperComponent)();\n};\n\nTreeNodeWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeWrapperComponent,\n  selectors: [[\"tree-node-wrapper\"]],\n  inputs: {\n    node: \"node\",\n    index: \"index\",\n    templates: \"templates\"\n  },\n  decls: 2,\n  vars: 8,\n  consts: [[\"class\", \"node-wrapper\", 3, \"padding-left\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"node-wrapper\"], [3, \"node\", 4, \"ngIf\"], [3, \"node\"], [1, \"node-content-wrapper\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrag\", \"treeDragEnabled\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"contextmenu\", \"treeDrop\", \"treeDropDragOver\", \"treeDropDragLeave\", \"treeDropDragEnter\"], [3, \"node\", \"index\", \"template\"]],\n  template: function TreeNodeWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeWrapperComponent_div_0_Template, 5, 15, \"div\", 0);\n      ɵngcc0.ɵɵelementContainer(1, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.templates.treeNodeWrapperTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templates.treeNodeWrapperTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(3, _c9, ctx.node, ctx.node, ctx.index, ctx.templates));\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, TreeNodeExpanderComponent, TreeDragDirective, TreeDropDirective, TreeNodeContent, TreeNodeCheckboxComponent];\n  },\n  encapsulation: 2\n});\nTreeNodeWrapperComponent.propDecorators = {\n  node: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  templates: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-wrapper',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n      <div *ngIf=\\\"!templates.treeNodeWrapperTemplate\\\" class=\\\"node-wrapper\\\" [style.padding-left]=\\\"node.getNodePadding()\\\">\\n          <tree-node-checkbox *ngIf=\\\"node.options.useCheckbox\\\" [node]=\\\"node\\\"></tree-node-checkbox>\\n          <tree-node-expander [node]=\\\"node\\\"></tree-node-expander>\\n          <div class=\\\"node-content-wrapper\\\"\\n               [class.node-content-wrapper-active]=\\\"node.isActive\\\"\\n               [class.node-content-wrapper-focused]=\\\"node.isFocused\\\"\\n               (click)=\\\"node.mouseAction('click', $event)\\\"\\n               (dblclick)=\\\"node.mouseAction('dblClick', $event)\\\"\\n               (mouseover)=\\\"node.mouseAction('mouseOver', $event)\\\"\\n               (mouseout)=\\\"node.mouseAction('mouseOut', $event)\\\"\\n               (contextmenu)=\\\"node.mouseAction('contextMenu', $event)\\\"\\n               (treeDrop)=\\\"node.onDrop($event)\\\"\\n               (treeDropDragOver)=\\\"node.mouseAction('dragOver', $event)\\\"\\n               (treeDropDragLeave)=\\\"node.mouseAction('dragLeave', $event)\\\"\\n               (treeDropDragEnter)=\\\"node.mouseAction('dragEnter', $event)\\\"\\n               [treeAllowDrop]=\\\"node.allowDrop\\\"\\n               [allowDragoverStyling]=\\\"node.allowDragoverStyling()\\\"\\n               [treeDrag]=\\\"node\\\"\\n               [treeDragEnabled]=\\\"node.allowDrag()\\\">\\n\\n              <tree-node-content [node]=\\\"node\\\" [index]=\\\"index\\\" [template]=\\\"templates.treeNodeTemplate\\\">\\n              </tree-node-content>\\n          </div>\\n      </div>\\n      <ng-container\\n              [ngTemplateOutlet]=\\\"templates.treeNodeWrapperTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{ $implicit: node, node: node, index: index, templates: templates }\\\">\\n      </ng-container>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    templates: [{\n      type: Input\n    }]\n  });\n})();\n\nvar TreeNodeCheckboxComponent = /*#__PURE__*/_createClass(function TreeNodeCheckboxComponent() {\n  _classCallCheck(this, TreeNodeCheckboxComponent);\n});\n\nTreeNodeCheckboxComponent.ɵfac = function TreeNodeCheckboxComponent_Factory(t) {\n  return new (t || TreeNodeCheckboxComponent)();\n};\n\nTreeNodeCheckboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TreeNodeCheckboxComponent,\n  selectors: [[\"tree-node-checkbox\"]],\n  inputs: {\n    node: \"node\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"treeMobxAutorun\"], [\"type\", \"checkbox\", 1, \"tree-node-checkbox\", 3, \"checked\", \"indeterminate\", \"click\"]],\n  template: function TreeNodeCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TreeNodeCheckboxComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    }\n  },\n  directives: [TreeMobxAutorunDirective],\n  encapsulation: 2\n});\nTreeNodeCheckboxComponent.propDecorators = {\n  node: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tree-node-checkbox',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <input\\n        class=\\\"tree-node-checkbox\\\"\\n        type=\\\"checkbox\\\"\\n        (click)=\\\"node.mouseAction('checkboxClick', $event)\\\"\\n        [checked]=\\\"node.isSelected\\\"\\n        [indeterminate]=\\\"node.isPartiallySelected\\\"\\n      />\\n    </ng-container>\\n  \"\n    }]\n  }], null, {\n    node: [{\n      type: Input\n    }]\n  });\n})();\n\nvar DRAG_OVER_CLASS = 'is-dragging-over';\nvar DRAG_DISABLED_CLASS = 'is-dragging-over-disabled';\n\nvar TreeDropDirective = /*#__PURE__*/function () {\n  function TreeDropDirective(el, renderer, treeDraggedElement, ngZone) {\n    _classCallCheck(this, TreeDropDirective);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.treeDraggedElement = treeDraggedElement;\n    this.ngZone = ngZone;\n    this.allowDragoverStyling = true;\n    this.onDropCallback = new EventEmitter();\n    this.onDragOverCallback = new EventEmitter();\n    this.onDragLeaveCallback = new EventEmitter();\n    this.onDragEnterCallback = new EventEmitter();\n\n    this._allowDrop = function (element, $event) {\n      return true;\n    };\n\n    this.dragOverEventHandler = this.onDragOver.bind(this);\n    this.dragEnterEventHandler = this.onDragEnter.bind(this);\n    this.dragLeaveEventHandler = this.onDragLeave.bind(this);\n  }\n\n  _createClass(TreeDropDirective, [{\n    key: \"treeAllowDrop\",\n    set: function set(allowDrop) {\n      if (allowDrop instanceof Function) {\n        this._allowDrop = allowDrop;\n      } else this._allowDrop = function (element, $event) {\n        return allowDrop;\n      };\n    }\n  }, {\n    key: \"allowDrop\",\n    value: function allowDrop($event) {\n      return this._allowDrop(this.treeDraggedElement.get(), $event);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this23 = this;\n\n      var el = this.el.nativeElement;\n      this.ngZone.runOutsideAngular(function () {\n        el.addEventListener('dragover', _this23.dragOverEventHandler);\n        el.addEventListener('dragenter', _this23.dragEnterEventHandler);\n        el.addEventListener('dragleave', _this23.dragLeaveEventHandler);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var el = this.el.nativeElement;\n      el.removeEventListener('dragover', this.dragOverEventHandler);\n      el.removeEventListener('dragenter', this.dragEnterEventHandler);\n      el.removeEventListener('dragleave', this.dragLeaveEventHandler);\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver($event) {\n      if (!this.allowDrop($event)) {\n        if (this.allowDragoverStyling) {\n          return this.addDisabledClass();\n        }\n\n        return;\n      }\n\n      this.onDragOverCallback.emit({\n        event: $event,\n        element: this.treeDraggedElement.get()\n      });\n      $event.preventDefault();\n\n      if (this.allowDragoverStyling) {\n        this.addClass();\n      }\n    }\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter($event) {\n      if (!this.allowDrop($event)) return;\n      $event.preventDefault();\n      this.onDragEnterCallback.emit({\n        event: $event,\n        element: this.treeDraggedElement.get()\n      });\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave($event) {\n      if (!this.allowDrop($event)) {\n        if (this.allowDragoverStyling) {\n          return this.removeDisabledClass();\n        }\n\n        return;\n      }\n\n      this.onDragLeaveCallback.emit({\n        event: $event,\n        element: this.treeDraggedElement.get()\n      });\n\n      if (this.allowDragoverStyling) {\n        this.removeClass();\n      }\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop($event) {\n      if (!this.allowDrop($event)) return;\n      $event.preventDefault();\n      this.onDropCallback.emit({\n        event: $event,\n        element: this.treeDraggedElement.get()\n      });\n\n      if (this.allowDragoverStyling) {\n        this.removeClass();\n      }\n\n      this.treeDraggedElement.set(null);\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass() {\n      this.renderer.addClass(this.el.nativeElement, DRAG_OVER_CLASS);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass() {\n      this.renderer.removeClass(this.el.nativeElement, DRAG_OVER_CLASS);\n    }\n  }, {\n    key: \"addDisabledClass\",\n    value: function addDisabledClass() {\n      this.renderer.addClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\n    }\n  }, {\n    key: \"removeDisabledClass\",\n    value: function removeDisabledClass() {\n      this.renderer.removeClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\n    }\n  }]);\n\n  return TreeDropDirective;\n}();\n\nTreeDropDirective.ɵfac = function TreeDropDirective_Factory(t) {\n  return new (t || TreeDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nTreeDropDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TreeDropDirective,\n  selectors: [[\"\", \"treeDrop\", \"\"]],\n  hostBindings: function TreeDropDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"drop\", function TreeDropDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    allowDragoverStyling: \"allowDragoverStyling\",\n    treeAllowDrop: \"treeAllowDrop\"\n  },\n  outputs: {\n    onDropCallback: \"treeDrop\",\n    onDragOverCallback: \"treeDropDragOver\",\n    onDragLeaveCallback: \"treeDropDragLeave\",\n    onDragEnterCallback: \"treeDropDragEnter\"\n  }\n});\n/** @nocollapse */\n\nTreeDropDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: TreeDraggedElement\n  }, {\n    type: NgZone\n  }];\n};\n\nTreeDropDirective.propDecorators = {\n  allowDragoverStyling: [{\n    type: Input\n  }],\n  onDropCallback: [{\n    type: Output,\n    args: ['treeDrop']\n  }],\n  onDragOverCallback: [{\n    type: Output,\n    args: ['treeDropDragOver']\n  }],\n  onDragLeaveCallback: [{\n    type: Output,\n    args: ['treeDropDragLeave']\n  }],\n  onDragEnterCallback: [{\n    type: Output,\n    args: ['treeDropDragEnter']\n  }],\n  treeAllowDrop: [{\n    type: Input\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[treeDrop]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: TreeDraggedElement\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    allowDragoverStyling: [{\n      type: Input\n    }],\n    onDropCallback: [{\n      type: Output,\n      args: ['treeDrop']\n    }],\n    onDragOverCallback: [{\n      type: Output,\n      args: ['treeDropDragOver']\n    }],\n    onDragLeaveCallback: [{\n      type: Output,\n      args: ['treeDropDragLeave']\n    }],\n    onDragEnterCallback: [{\n      type: Output,\n      args: ['treeDropDragEnter']\n    }],\n    treeAllowDrop: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\nvar DRAG_OVER_CLASS$1 = 'is-dragging-over';\n\nvar TreeDragDirective = /*#__PURE__*/function () {\n  function TreeDragDirective(el, renderer, treeDraggedElement, ngZone) {\n    _classCallCheck(this, TreeDragDirective);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.treeDraggedElement = treeDraggedElement;\n    this.ngZone = ngZone;\n    this.dragEventHandler = this.onDrag.bind(this);\n  }\n\n  _createClass(TreeDragDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this24 = this;\n\n      var el = this.el.nativeElement;\n      this.ngZone.runOutsideAngular(function () {\n        el.addEventListener('drag', _this24.dragEventHandler);\n      });\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false');\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var el = this.el.nativeElement;\n      el.removeEventListener('drag', this.dragEventHandler);\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(ev) {\n      // setting the data is required by firefox\n      ev.dataTransfer.setData('text', ev.target.id);\n      this.treeDraggedElement.set(this.draggedElement);\n\n      if (this.draggedElement.mouseAction) {\n        this.draggedElement.mouseAction('dragStart', ev);\n      }\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(ev) {\n      if (this.draggedElement.mouseAction) {\n        this.draggedElement.mouseAction('drag', ev);\n      }\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd() {\n      if (this.draggedElement.mouseAction) {\n        this.draggedElement.mouseAction('dragEnd');\n      }\n\n      this.treeDraggedElement.set(null);\n    }\n  }]);\n\n  return TreeDragDirective;\n}();\n\nTreeDragDirective.ɵfac = function TreeDragDirective_Factory(t) {\n  return new (t || TreeDragDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nTreeDragDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TreeDragDirective,\n  selectors: [[\"\", \"treeDrag\", \"\"]],\n  hostBindings: function TreeDragDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dragstart\", function TreeDragDirective_dragstart_HostBindingHandler($event) {\n        return ctx.onDragStart($event);\n      })(\"dragend\", function TreeDragDirective_dragend_HostBindingHandler() {\n        return ctx.onDragEnd();\n      });\n    }\n  },\n  inputs: {\n    draggedElement: [\"treeDrag\", \"draggedElement\"],\n    treeDragEnabled: \"treeDragEnabled\"\n  }\n});\n/** @nocollapse */\n\nTreeDragDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: TreeDraggedElement\n  }, {\n    type: NgZone\n  }];\n};\n\nTreeDragDirective.propDecorators = {\n  draggedElement: [{\n    type: Input,\n    args: ['treeDrag']\n  }],\n  treeDragEnabled: [{\n    type: Input\n  }],\n  onDragStart: [{\n    type: HostListener,\n    args: ['dragstart', ['$event']]\n  }],\n  onDragEnd: [{\n    type: HostListener,\n    args: ['dragend']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDragDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[treeDrag]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: TreeDraggedElement\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onDragStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    onDragEnd: [{\n      type: HostListener,\n      args: ['dragend']\n    }],\n    draggedElement: [{\n      type: Input,\n      args: ['treeDrag']\n    }],\n    treeDragEnabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar EASE_ACCELERATION = 1.005;\n\nvar TreeAnimateOpenDirective = /*#__PURE__*/function () {\n  function TreeAnimateOpenDirective(renderer, templateRef, viewContainerRef) {\n    _classCallCheck(this, TreeAnimateOpenDirective);\n\n    this.renderer = renderer;\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  _createClass(TreeAnimateOpenDirective, [{\n    key: \"isOpen\",\n    set: function set(value) {\n      if (value) {\n        this._show();\n\n        if (this.isEnabled && this._isOpen === false) {\n          this._animateOpen();\n        }\n      } else {\n        this.isEnabled ? this._animateClose() : this._hide();\n      }\n\n      this._isOpen = !!value;\n    }\n  }, {\n    key: \"_show\",\n    value: function _show() {\n      if (this.innerElement) return; // create child view\n\n      this.innerElement = this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0];\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide() {\n      this.viewContainerRef.clear();\n      this.innerElement = null;\n    }\n  }, {\n    key: \"_animateOpen\",\n    value: function _animateOpen() {\n      var _this25 = this;\n\n      var delta = this.animateSpeed;\n      var ease = this.animateAcceleration;\n      var maxHeight = 0; // set height to 0\n\n      this.renderer.setStyle(this.innerElement, 'max-height', \"0\"); // increase maxHeight until height doesn't change\n\n      setTimeout(function () {\n        var i = setInterval(function () {\n          if (!_this25._isOpen || !_this25.innerElement) return clearInterval(i);\n          maxHeight += delta;\n          var roundedMaxHeight = Math.round(maxHeight);\n\n          _this25.renderer.setStyle(_this25.innerElement, 'max-height', \"\".concat(roundedMaxHeight, \"px\"));\n\n          var height = _this25.innerElement.getBoundingClientRect ? _this25.innerElement.getBoundingClientRect().height : 0; // TBD use renderer\n\n          delta *= ease;\n          ease *= EASE_ACCELERATION;\n\n          if (height < roundedMaxHeight) {\n            // Make maxHeight auto because animation finished and container might change height later on\n            _this25.renderer.setStyle(_this25.innerElement, 'max-height', null);\n\n            clearInterval(i);\n          }\n        }, 17);\n      });\n    }\n  }, {\n    key: \"_animateClose\",\n    value: function _animateClose() {\n      var _this26 = this;\n\n      if (!this.innerElement) return;\n      var delta = this.animateSpeed;\n      var ease = this.animateAcceleration;\n      var height = this.innerElement.getBoundingClientRect().height; // TBD use renderer\n      // slowly decrease maxHeight to 0, starting from current height\n\n      var i = setInterval(function () {\n        if (_this26._isOpen || !_this26.innerElement) return clearInterval(i);\n        height -= delta;\n\n        _this26.renderer.setStyle(_this26.innerElement, 'max-height', \"\".concat(height, \"px\"));\n\n        delta *= ease;\n        ease *= EASE_ACCELERATION;\n\n        if (height <= 0) {\n          // after animation complete - remove child element\n          _this26.viewContainerRef.clear();\n\n          _this26.innerElement = null;\n          clearInterval(i);\n        }\n      }, 17);\n    }\n  }]);\n\n  return TreeAnimateOpenDirective;\n}();\n\nTreeAnimateOpenDirective.ɵfac = function TreeAnimateOpenDirective_Factory(t) {\n  return new (t || TreeAnimateOpenDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nTreeAnimateOpenDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: TreeAnimateOpenDirective,\n  selectors: [[\"\", \"treeAnimateOpen\", \"\"]],\n  inputs: {\n    isOpen: [\"treeAnimateOpen\", \"isOpen\"],\n    animateSpeed: [\"treeAnimateOpenSpeed\", \"animateSpeed\"],\n    animateAcceleration: [\"treeAnimateOpenAcceleration\", \"animateAcceleration\"],\n    isEnabled: [\"treeAnimateOpenEnabled\", \"isEnabled\"]\n  }\n});\n/** @nocollapse */\n\nTreeAnimateOpenDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: TemplateRef\n  }, {\n    type: ViewContainerRef\n  }];\n};\n\nTreeAnimateOpenDirective.propDecorators = {\n  animateSpeed: [{\n    type: Input,\n    args: ['treeAnimateOpenSpeed']\n  }],\n  animateAcceleration: [{\n    type: Input,\n    args: ['treeAnimateOpenAcceleration']\n  }],\n  isEnabled: [{\n    type: Input,\n    args: ['treeAnimateOpenEnabled']\n  }],\n  isOpen: [{\n    type: Input,\n    args: ['treeAnimateOpen']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeAnimateOpenDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[treeAnimateOpen]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    isOpen: [{\n      type: Input,\n      args: ['treeAnimateOpen']\n    }],\n    animateSpeed: [{\n      type: Input,\n      args: ['treeAnimateOpenSpeed']\n    }],\n    animateAcceleration: [{\n      type: Input,\n      args: ['treeAnimateOpenAcceleration']\n    }],\n    isEnabled: [{\n      type: Input,\n      args: ['treeAnimateOpenEnabled']\n    }]\n  });\n})();\n\nvar TreeModule = /*#__PURE__*/_createClass(function TreeModule() {\n  _classCallCheck(this, TreeModule);\n});\n\nTreeModule.ɵfac = function TreeModule_Factory(t) {\n  return new (t || TreeModule)();\n};\n\nTreeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: TreeModule\n});\nTreeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective],\n      exports: [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective],\n      imports: [CommonModule],\n      providers: []\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TreeModule, {\n    declarations: function declarations() {\n      return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective];\n    }\n  });\n})();\n/*\r\n * Public API Surface of angular-tree-component\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { KEYS, LoadingComponent, TREE_ACTIONS, TreeAnimateOpenDirective, TreeComponent, TreeDragDirective, TreeDraggedElement, TreeDropDirective, TreeModel, TreeModule, TreeNode, TreeNodeCheckboxComponent, TreeNodeChildrenComponent, TreeNodeCollectionComponent, TreeNodeComponent, TreeNodeContent, TreeNodeDropSlot, TreeNodeExpanderComponent, TreeNodeWrapperComponent, TreeViewportComponent, TreeVirtualScroll, actionInternal as ɵa, action as ɵb, computed as ɵc, observable as ɵd, TreeMobxAutorunDirective as ɵe };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@circlon/angular-tree-component/__ivy_ngcc__/fesm2015/circlon-angular-tree-component.js"],"names":["Directive","TemplateRef","ViewContainerRef","Input","Injectable","ɵɵdefineInjectable","Component","ViewEncapsulation","ElementRef","EventEmitter","ContentChild","ViewChild","Output","HostListener","Renderer2","NgZone","NgModule","CommonModule","autorun","reaction","computed","computed$1","observable","observable$1","action","action$1","ɵngcc0","ɵngcc1","LoadingComponent_span_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","_c0","a0","$implicit","TreeViewportComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵprojection","ɵɵelementContainerEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","getTotalHeight","_c1","dontDetach","_c2","_c3","_c4","_c5","_c6","_c7","_c8","a1","a2","a3","loadingTemplate","treeNodeTemplate","treeNodeWrapperTemplate","treeNodeFullTemplate","TreeComponent_tree_node_collection_3_Template","ɵɵelement","ctx_r1","ɵɵproperty","treeModel","roots","ɵɵpureFunction4","TreeComponent_tree_node_drop_slot_4_Template","ctx_r2","virtualRoot","TreeNodeComponent_ng_container_0_div_1_tree_node_drop_slot_1_Template","node","index","parent","TreeNodeComponent_ng_container_0_div_1_Template","ɵɵtemplate","ɵɵclassMap","getClass","ɵɵclassProp","isExpanded","hasChildren","isCollapsed","isLeaf","isActive","isFocused","templates","_c9","TreeNodeComponent_ng_container_0_Template","ɵɵelementContainer","TreeNodeContent_span_0_Template","ɵɵtextInterpolate","displayField","_c10","TreeNodeExpanderComponent_ng_container_0_span_1_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","TreeNodeExpanderComponent_ng_container_0_span_1_Template_span_click_0_listener","$event","ɵɵrestoreView","ctx_r3","mouseAction","TreeNodeExpanderComponent_ng_container_0_span_2_Template","TreeNodeExpanderComponent_ng_container_0_Template","TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template","children","TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template","getNodePadding","TreeNodeChildrenComponent_ng_container_0_div_1_Template","options","levelPadding","TreeNodeChildrenComponent_ng_container_0_Template","animateSpeed","animateAcceleration","animateExpand","TreeNodeCollectionComponent_ng_container_0_tree_node_2_Template","node_r2","i_r3","TreeNodeCollectionComponent_ng_container_0_Template","marginTop","viewportNodes","trackNode","TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template","TreeNodeWrapperComponent_div_0_Template","_r3","TreeNodeWrapperComponent_div_0_Template_div_click_3_listener","TreeNodeWrapperComponent_div_0_Template_div_dblclick_3_listener","ctx_r4","TreeNodeWrapperComponent_div_0_Template_div_mouseover_3_listener","ctx_r5","TreeNodeWrapperComponent_div_0_Template_div_mouseout_3_listener","ctx_r6","TreeNodeWrapperComponent_div_0_Template_div_contextmenu_3_listener","ctx_r7","TreeNodeWrapperComponent_div_0_Template_div_treeDrop_3_listener","ctx_r8","onDrop","TreeNodeWrapperComponent_div_0_Template_div_treeDropDragOver_3_listener","ctx_r9","TreeNodeWrapperComponent_div_0_Template_div_treeDropDragLeave_3_listener","ctx_r10","TreeNodeWrapperComponent_div_0_Template_div_treeDropDragEnter_3_listener","ctx_r11","useCheckbox","allowDrop","allowDragoverStyling","allowDrag","TreeNodeCheckboxComponent_ng_container_0_Template","_r2","TreeNodeCheckboxComponent_ng_container_0_Template_input_click_1_listener","isSelected","isPartiallySelected","TreeMobxAutorunDirective","templateRef","viewContainer","templateBindings","view","createEmbeddedView","dispose","shouldDetach","detach","autoDetect","treeMobxAutorun","detectChanges","ɵfac","TreeMobxAutorunDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","ctorParameters","propDecorators","KEYS","LEFT","UP","RIGHT","DOWN","ENTER","SPACE","CONTEXT_MENU","ɵ0","tree","toggleActivated","ɵ1","ɵ2","toggleSelected","ɵ3","setIsActive","ɵ4","ɵ5","setIsSelected","ɵ6","ɵ7","focus","ɵ8","toggleExpanded","ɵ9","expand","ɵ10","collapse","ɵ11","focusDrillDown","ɵ12","focusDrillUp","ɵ13","focusNextNode","ɵ14","focusPreviousNode","ɵ15","from","to","ctrlKey","copyNode","moveNode","TREE_ACTIONS","TOGGLE_ACTIVE","TOGGLE_ACTIVE_MULTI","TOGGLE_SELECTED","ACTIVATE","DEACTIVATE","SELECT","DESELECT","FOCUS","TOGGLE_EXPANDED","EXPAND","COLLAPSE","DRILL_DOWN","DRILL_UP","NEXT_NODE","PREVIOUS_NODE","MOVE_NODE","defaultActionMapping","mouse","click","dblClick","contextMenu","expanderClick","checkboxClick","drop","keys","TreeOptions","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","_21","_22","_23","_24","_25","_26","_27","_28","_29","_30","_31","_32","_33","_34","_35","actionMapping","dragStart","undefined","drag","dragEnd","dragOver","dragLeave","dragEnter","mouseOver","mouseOut","Object","assign","rtl","hasChildrenField","childrenField","idField","isExpandedField","getChildren","useVirtualScroll","scrollOnActivate","rootId","useTriState","scrollContainer","getNodeClone","nodeClone","data","id","element","Function","nodeClass","virtual","nodeHeight","dropSlotHeight","TREE_EVENTS","activate","deactivate","nodeActivate","nodeDeactivate","select","deselect","blur","initialized","updateData","event","loadNodeChildren","changeFilter","stateChange","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","TreeNode","position","uuid","getField","_initChildren","autoLoadChildren","isHidden","isNodeFocused","isSelectable","some","every","isAllSelected","level","path","_originalNode","isRoot","fireEvent","value","setField","steps","skipHidden","siblings","_getParentsChildren","indexOf","_findAdjacentSibling","visibleChildren","filter","goInside","getFirstChild","findNextSibling","findNextNode","previousSibling","findPreviousSibling","realParent","_getLastOpenDescendant","lastChild","getLastChild","getVisibleChildren","isDescendantOf","join","dropOnNode","Promise","resolve","then","forEach","child","eventName","fn","doForAll","ensureVisible","setIsExpanded","setExpandedNode","handler","fireImmediately","multi","setActiveNode","setSelectedNode","setTimeout","scrollIntoView","bind","force","virtualScroll","scroll","previousNode","getFocusedNode","setFocusedNode","setIsHidden","actionName","setFocus","map","prototype","Array","Number","Math","floor","random","__decorate$1","__metadata$1","TreeModel","eventNames","expandedNodeIds","selectedLeafNodeIds","activeNodeIds","hiddenNodeIds","focusedNodeId","firstUpdate","subscriptions","events","emit","subscription","subscribe","push","focusedNode","activeNodes","root","getVisibleRoots","focusedTree","getNodeById","nodes","Boolean","startNode","childId","shift","childNode","find","getNodeByPath","idStr","toString","getNodeBy","predicate","found","foundInChildren","unsubscribeAll","unsubscribe","update","virtualRootConfig","_calculateExpandedNodes","nextNode","getFirstRoot","findPreviousNode","getLastRoot","_setActiveNodeMulti","_setActiveNodeSingle","expandAll","collapseAll","nodeIds","reduce","keyAction","keyCode","preventDefault","autoShow","filterFn","clearFilter","valueOf","toLowerCase","console","error","ids","_filterNode","fromIndex","getIndexInParent","fromParent","canMoveNode","fromChildren","toChildren","originalNode","splice","toIndex","nodeCopy","state","getState","fromNodeIndex","isVisible","activeNode","TreeModel_Factory","ɵprov","token","factory","TreeDraggedElement","_draggedElement","draggedElement","get","TreeDraggedElement_Factory","providedIn","__decorate$2","__metadata$2","Y_OFFSET","Y_EPSILON","TreeVirtualScroll","yBlocks","x","viewportHeight","viewport","_dispose","fixScroll","height","recalcPositions","_getPositionAfter","startPos","_getPositionAfterNode","getSelfHeight","scrollLeft","round","scrollTop","getBoundingClientRect","scrollToMiddle","scrollContainerHeight","scrollContainerTop","top","nodeTop","y","_setYBlocks","visibleNodes","isEnabled","lastVisibleNode","slice","firstIndex","binarySearch","lastIndex","maxY","max","totalHeight","TreeVirtualScroll_Factory","ɵɵinject","condition","midIndex","LoadingComponent","LoadingComponent_Factory","ɵcmp","ɵɵdefineComponent","template","decls","vars","consts","LoadingComponent_Template","ɵɵpureFunction1","directives","NgIf","NgTemplateOutlet","encapsulation","TreeViewportComponent","elementRef","setViewport","throttle","nativeElement","scrollEventHandler","init","el","addEventListener","clear","removeEventListener","func","timeFrame","lastTime","now","Date","TreeViewportComponent_Factory","features","ɵɵProvidersFeature","ngContentSelectors","TreeViewportComponent_Template","ɵɵprojectionDef","ɵɵpureFunction0","TreeComponent","treeDraggedElement","name","subscribeToState","setState","includes","document","activeElement","tagName","performKeyAction","isOutsideClick","startElement","nodeName","localName","parentElement","changes","setData","currentValue","pick","viewportComponent","object","obj","hasOwnProperty","TreeComponent_Factory","contentQueries","TreeComponent_ContentQueries","dirIndex","ɵɵcontentQuery","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","TreeComponent_Query","ɵɵviewQuery","hostBindings","TreeComponent_HostBindings","TreeComponent_keydown_HostBindingHandler","onKeydown","ɵɵresolveBody","TreeComponent_mousedown_HostBindingHandler","onMousedown","focused","outputs","ɵɵNgOnChangesFeature","TreeComponent_Template","isDragging","isEmptyTree","TreeNodeCollectionComponent","TreeNodeDropSlot","args","static","TreeNodeComponent","TreeNodeComponent_Factory","TreeNodeComponent_Template","TreeNodeWrapperComponent","TreeNodeChildrenComponent","TreeNodeContent","TreeNodeContent_Factory","TreeNodeContent_Template","ɵɵpureFunction3","dropIndex","TreeNodeDropSlot_Factory","TreeNodeDropSlot_Template","TreeNodeDropSlot_Template_div_treeDrop_0_listener","TreeDropDirective","TreeNodeExpanderComponent","TreeNodeExpanderComponent_Factory","TreeNodeExpanderComponent_Template","TreeNodeChildrenComponent_Factory","TreeNodeChildrenComponent_Template","TreeAnimateOpenDirective","actionInternal","computedInternal","observableInternal","__decorate$3","__metadata$3","_nodes","setNodes","firstNode","relativePosition","getViewportNodes","n","nodeIndexes","compareStructural","TreeNodeCollectionComponent_Factory","TreeNodeCollectionComponent_Template","NgForOf","String","ngDevMode","ɵsetClassMetadata","selector","None","providers","TreeNodeWrapperComponent_Factory","TreeNodeWrapperComponent_Template","TreeDragDirective","TreeNodeCheckboxComponent","TreeNodeCheckboxComponent_Factory","TreeNodeCheckboxComponent_Template","DRAG_OVER_CLASS","DRAG_DISABLED_CLASS","renderer","ngZone","onDropCallback","onDragOverCallback","onDragLeaveCallback","onDragEnterCallback","_allowDrop","dragOverEventHandler","onDragOver","dragEnterEventHandler","onDragEnter","dragLeaveEventHandler","onDragLeave","runOutsideAngular","addDisabledClass","addClass","removeDisabledClass","removeClass","set","TreeDropDirective_Factory","TreeDropDirective_HostBindings","TreeDropDirective_drop_HostBindingHandler","treeAllowDrop","DRAG_OVER_CLASS$1","dragEventHandler","onDrag","setAttribute","treeDragEnabled","ev","dataTransfer","TreeDragDirective_Factory","TreeDragDirective_HostBindings","TreeDragDirective_dragstart_HostBindingHandler","onDragStart","TreeDragDirective_dragend_HostBindingHandler","onDragEnd","EASE_ACCELERATION","viewContainerRef","_show","_isOpen","_animateOpen","_animateClose","_hide","innerElement","rootNodes","delta","ease","maxHeight","setStyle","setInterval","clearInterval","roundedMaxHeight","TreeAnimateOpenDirective_Factory","isOpen","TreeModule","TreeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵa","ɵb","ɵc","ɵd","ɵe"],"mappings":"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","sourcesContent":["import { Directive, TemplateRef, ViewContainerRef, Input, Injectable, ɵɵdefineInjectable, Component, ViewEncapsulation, ElementRef, EventEmitter, ContentChild, ViewChild, Output, HostListener, Renderer2, NgZone, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { autorun, reaction, computed as computed$1, observable as observable$1, action as action$1 } from 'mobx';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction LoadingComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"loading...\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c0 = function (a0) { return { $implicit: a0 }; };\nfunction TreeViewportComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r0.getTotalHeight());\n} }\nconst _c1 = function () { return { dontDetach: true }; };\nconst _c2 = [\"*\"];\nconst _c3 = [\"loadingTemplate\"];\nconst _c4 = [\"treeNodeTemplate\"];\nconst _c5 = [\"treeNodeWrapperTemplate\"];\nconst _c6 = [\"treeNodeFullTemplate\"];\nconst _c7 = [\"viewport\"];\nconst _c8 = function (a0, a1, a2, a3) { return { loadingTemplate: a0, treeNodeTemplate: a1, treeNodeWrapperTemplate: a2, treeNodeFullTemplate: a3 }; };\nfunction TreeComponent_tree_node_collection_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-collection\", 4);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nodes\", ctx_r1.treeModel.roots)(\"treeModel\", ctx_r1.treeModel)(\"templates\", ɵngcc0.ɵɵpureFunction4(3, _c8, ctx_r1.loadingTemplate, ctx_r1.treeNodeTemplate, ctx_r1.treeNodeWrapperTemplate, ctx_r1.treeNodeFullTemplate));\n} }\nfunction TreeComponent_tree_node_drop_slot_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-drop-slot\", 5);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"dropIndex\", 0)(\"node\", ctx_r2.treeModel.virtualRoot);\n} }\nfunction TreeNodeComponent_ng_container_0_div_1_tree_node_drop_slot_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-drop-slot\", 6);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"dropIndex\", ctx_r2.node.index)(\"node\", ctx_r2.node.parent);\n} }\nfunction TreeNodeComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TreeNodeComponent_ng_container_0_div_1_tree_node_drop_slot_1_Template, 1, 2, \"tree-node-drop-slot\", 3);\n    ɵngcc0.ɵɵelement(2, \"tree-node-wrapper\", 4);\n    ɵngcc0.ɵɵelement(3, \"tree-node-children\", 5);\n    ɵngcc0.ɵɵelement(4, \"tree-node-drop-slot\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r1.node.getClass());\n    ɵngcc0.ɵɵclassProp(\"tree-node\", true)(\"tree-node-expanded\", ctx_r1.node.isExpanded && ctx_r1.node.hasChildren)(\"tree-node-collapsed\", ctx_r1.node.isCollapsed && ctx_r1.node.hasChildren)(\"tree-node-leaf\", ctx_r1.node.isLeaf)(\"tree-node-active\", ctx_r1.node.isActive)(\"tree-node-focused\", ctx_r1.node.isFocused);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.index === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node)(\"index\", ctx_r1.index)(\"templates\", ctx_r1.templates);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node)(\"templates\", ctx_r1.templates);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"dropIndex\", ctx_r1.node.index + 1)(\"node\", ctx_r1.node.parent);\n} }\nconst _c9 = function (a0, a1, a2, a3) { return { $implicit: a0, node: a1, index: a2, templates: a3 }; };\nfunction TreeNodeComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeComponent_ng_container_0_div_1_Template, 5, 22, \"div\", 1);\n    ɵngcc0.ɵɵelementContainer(2, 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.templates.treeNodeFullTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.templates.treeNodeFullTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(3, _c9, ctx_r0.node, ctx_r0.node, ctx_r0.index, ctx_r0.templates));\n} }\nfunction TreeNodeContent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.node.displayField);\n} }\nconst _c10 = function (a0, a1, a2) { return { $implicit: a0, node: a1, index: a2 }; };\nfunction TreeNodeExpanderComponent_ng_container_0_span_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeExpanderComponent_ng_container_0_span_1_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.node.mouseAction(\"expanderClick\", $event); });\n    ɵngcc0.ɵɵelement(1, \"span\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"toggle-children-wrapper-expanded\", ctx_r1.node.isExpanded)(\"toggle-children-wrapper-collapsed\", ctx_r1.node.isCollapsed);\n} }\nfunction TreeNodeExpanderComponent_ng_container_0_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 5);\n} }\nfunction TreeNodeExpanderComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeExpanderComponent_ng_container_0_span_1_Template, 2, 4, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(2, TreeNodeExpanderComponent_ng_container_0_span_2_Template, 1, 0, \"span\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.node.hasChildren);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.node.hasChildren);\n} }\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-collection\", 4);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nodes\", ctx_r2.node.children)(\"templates\", ctx_r2.templates)(\"treeModel\", ctx_r2.node.treeModel);\n} }\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-loading-component\", 5);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r3.node.getNodePadding());\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r3.templates.loadingTemplate)(\"node\", ctx_r3.node);\n} }\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template, 1, 3, \"tree-node-collection\", 2);\n    ɵngcc0.ɵɵtemplate(2, TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template, 1, 4, \"tree-loading-component\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"tree-children\", true)(\"tree-children-no-padding\", ctx_r1.node.options.levelPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.node.children);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.node.children);\n} }\nfunction TreeNodeChildrenComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_Template, 3, 6, \"div\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"treeAnimateOpen\", ctx_r0.node.isExpanded)(\"treeAnimateOpenSpeed\", ctx_r0.node.options.animateSpeed)(\"treeAnimateOpenAcceleration\", ctx_r0.node.options.animateAcceleration)(\"treeAnimateOpenEnabled\", ctx_r0.node.options.animateExpand);\n} }\nfunction TreeNodeCollectionComponent_ng_container_0_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node\", 2);\n} if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"node\", node_r2)(\"index\", i_r3)(\"templates\", ctx_r1.templates);\n} }\nfunction TreeNodeCollectionComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, TreeNodeCollectionComponent_ng_container_0_tree_node_2_Template, 1, 3, \"tree-node\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"margin-top\", ctx_r0.marginTop);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewportNodes)(\"ngForTrackBy\", ctx_r0.trackNode);\n} }\nfunction TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-checkbox\", 4);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node);\n} }\nfunction TreeNodeWrapperComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template, 1, 1, \"tree-node-checkbox\", 3);\n    ɵngcc0.ɵɵelement(2, \"tree-node-expander\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeWrapperComponent_div_0_Template_div_click_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.node.mouseAction(\"click\", $event); })(\"dblclick\", function TreeNodeWrapperComponent_div_0_Template_div_dblclick_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.node.mouseAction(\"dblClick\", $event); })(\"mouseover\", function TreeNodeWrapperComponent_div_0_Template_div_mouseover_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.node.mouseAction(\"mouseOver\", $event); })(\"mouseout\", function TreeNodeWrapperComponent_div_0_Template_div_mouseout_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.node.mouseAction(\"mouseOut\", $event); })(\"contextmenu\", function TreeNodeWrapperComponent_div_0_Template_div_contextmenu_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.node.mouseAction(\"contextMenu\", $event); })(\"treeDrop\", function TreeNodeWrapperComponent_div_0_Template_div_treeDrop_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.node.onDrop($event); })(\"treeDropDragOver\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragOver_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.node.mouseAction(\"dragOver\", $event); })(\"treeDropDragLeave\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragLeave_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.node.mouseAction(\"dragLeave\", $event); })(\"treeDropDragEnter\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragEnter_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.node.mouseAction(\"dragEnter\", $event); });\n    ɵngcc0.ɵɵelement(4, \"tree-node-content\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r0.node.getNodePadding());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.node.options.useCheckbox);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"node-content-wrapper-active\", ctx_r0.node.isActive)(\"node-content-wrapper-focused\", ctx_r0.node.isFocused);\n    ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx_r0.node.allowDrop)(\"allowDragoverStyling\", ctx_r0.node.allowDragoverStyling())(\"treeDrag\", ctx_r0.node)(\"treeDragEnabled\", ctx_r0.node.allowDrag());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node)(\"index\", ctx_r0.index)(\"template\", ctx_r0.templates.treeNodeTemplate);\n} }\nfunction TreeNodeCheckboxComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeCheckboxComponent_ng_container_0_Template_input_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.node.mouseAction(\"checkboxClick\", $event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.node.isSelected)(\"indeterminate\", ctx_r0.node.isPartiallySelected);\n} }\nclass TreeMobxAutorunDirective {\r\n    constructor(templateRef, viewContainer) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainer = viewContainer;\r\n        this.templateBindings = {};\r\n    }\r\n    ngOnInit() {\r\n        this.view = this.viewContainer.createEmbeddedView(this.templateRef);\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n        if (this.shouldDetach()) {\r\n            this.view.detach();\r\n        }\r\n        this.autoDetect(this.view);\r\n    }\r\n    shouldDetach() {\r\n        return this.treeMobxAutorun && this.treeMobxAutorun.detach;\r\n    }\r\n    autoDetect(view) {\r\n        this.dispose = autorun(() => view.detectChanges());\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n}\nTreeMobxAutorunDirective.ɵfac = function TreeMobxAutorunDirective_Factory(t) { return new (t || TreeMobxAutorunDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nTreeMobxAutorunDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TreeMobxAutorunDirective, selectors: [[\"\", \"treeMobxAutorun\", \"\"]], inputs: { treeMobxAutorun: \"treeMobxAutorun\" } });\r\n/** @nocollapse */\r\nTreeMobxAutorunDirective.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef }\r\n];\r\nTreeMobxAutorunDirective.propDecorators = {\r\n    treeMobxAutorun: [{ type: Input }]\r\n};\n\nconst KEYS = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40,\r\n    ENTER: 13,\r\n    SPACE: 32,\r\n    CONTEXT_MENU: 32\r\n};\n\nconst ɵ0 = (tree, node, $event) => node && node.toggleActivated(), ɵ1 = (tree, node, $event) => node && node.toggleActivated(true), ɵ2 = (tree, node, $event) => node && node.toggleSelected(), ɵ3 = (tree, node, $event) => node.setIsActive(true), ɵ4 = (tree, node, $event) => node.setIsActive(false), ɵ5 = (tree, node, $event) => node.setIsSelected(true), ɵ6 = (tree, node, $event) => node.setIsSelected(false), ɵ7 = (tree, node, $event) => node.focus(), ɵ8 = (tree, node, $event) => node.hasChildren && node.toggleExpanded(), ɵ9 = (tree, node, $event) => node.expand(), ɵ10 = (tree, node, $event) => node.collapse(), ɵ11 = (tree, node, $event) => tree.focusDrillDown(), ɵ12 = (tree, node, $event) => tree.focusDrillUp(), ɵ13 = (tree, node, $event) => tree.focusNextNode(), ɵ14 = (tree, node, $event) => tree.focusPreviousNode(), ɵ15 = (tree, node, $event, { from, to }) => {\r\n    // default action assumes from = node, to = {parent, index}\r\n    if ($event.ctrlKey) {\r\n        tree.copyNode(from, to);\r\n    }\r\n    else {\r\n        tree.moveNode(from, to);\r\n    }\r\n};\r\nconst TREE_ACTIONS = {\r\n    TOGGLE_ACTIVE: ɵ0,\r\n    TOGGLE_ACTIVE_MULTI: ɵ1,\r\n    TOGGLE_SELECTED: ɵ2,\r\n    ACTIVATE: ɵ3,\r\n    DEACTIVATE: ɵ4,\r\n    SELECT: ɵ5,\r\n    DESELECT: ɵ6,\r\n    FOCUS: ɵ7,\r\n    TOGGLE_EXPANDED: ɵ8,\r\n    EXPAND: ɵ9,\r\n    COLLAPSE: ɵ10,\r\n    DRILL_DOWN: ɵ11,\r\n    DRILL_UP: ɵ12,\r\n    NEXT_NODE: ɵ13,\r\n    PREVIOUS_NODE: ɵ14,\r\n    MOVE_NODE: ɵ15\r\n};\r\nconst defaultActionMapping = {\r\n    mouse: {\r\n        click: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n        dblClick: null,\r\n        contextMenu: null,\r\n        expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\r\n        checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,\r\n        drop: TREE_ACTIONS.MOVE_NODE\r\n    },\r\n    keys: {\r\n        [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\r\n        [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\r\n        [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\r\n        [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\r\n        [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n        [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE\r\n    }\r\n};\r\nclass TreeOptions {\r\n    constructor(options = {}) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35;\r\n        this.options = options;\r\n        this.actionMapping = {\r\n            mouse: {\r\n                click: (_d = (_c = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.actionMapping) === null || _b === void 0 ? void 0 : _b.mouse) === null || _c === void 0 ? void 0 : _c.click) !== null && _d !== void 0 ? _d : defaultActionMapping.mouse.click,\r\n                dblClick: (_h = (_g = (_f = (_e = this.options) === null || _e === void 0 ? void 0 : _e.actionMapping) === null || _f === void 0 ? void 0 : _f.mouse) === null || _g === void 0 ? void 0 : _g.dblClick) !== null && _h !== void 0 ? _h : defaultActionMapping.mouse.dblClick,\r\n                contextMenu: (_m = (_l = (_k = (_j = this.options) === null || _j === void 0 ? void 0 : _j.actionMapping) === null || _k === void 0 ? void 0 : _k.mouse) === null || _l === void 0 ? void 0 : _l.contextMenu) !== null && _m !== void 0 ? _m : defaultActionMapping.mouse.contextMenu,\r\n                expanderClick: (_r = (_q = (_p = (_o = this.options) === null || _o === void 0 ? void 0 : _o.actionMapping) === null || _p === void 0 ? void 0 : _p.mouse) === null || _q === void 0 ? void 0 : _q.expanderClick) !== null && _r !== void 0 ? _r : defaultActionMapping.mouse.expanderClick,\r\n                checkboxClick: (_v = (_u = (_t = (_s = this.options) === null || _s === void 0 ? void 0 : _s.actionMapping) === null || _t === void 0 ? void 0 : _t.mouse) === null || _u === void 0 ? void 0 : _u.checkboxClick) !== null && _v !== void 0 ? _v : defaultActionMapping.mouse.checkboxClick,\r\n                drop: (_z = (_y = (_x = (_w = this.options) === null || _w === void 0 ? void 0 : _w.actionMapping) === null || _x === void 0 ? void 0 : _x.mouse) === null || _y === void 0 ? void 0 : _y.drop) !== null && _z !== void 0 ? _z : defaultActionMapping.mouse.drop,\r\n                dragStart: (_3 = (_2 = (_1 = (_0 = this.options) === null || _0 === void 0 ? void 0 : _0.actionMapping) === null || _1 === void 0 ? void 0 : _1.mouse) === null || _2 === void 0 ? void 0 : _2.dragStart) !== null && _3 !== void 0 ? _3 : undefined,\r\n                drag: (_7 = (_6 = (_5 = (_4 = this.options) === null || _4 === void 0 ? void 0 : _4.actionMapping) === null || _5 === void 0 ? void 0 : _5.mouse) === null || _6 === void 0 ? void 0 : _6.drag) !== null && _7 !== void 0 ? _7 : undefined,\r\n                dragEnd: (_11 = (_10 = (_9 = (_8 = this.options) === null || _8 === void 0 ? void 0 : _8.actionMapping) === null || _9 === void 0 ? void 0 : _9.mouse) === null || _10 === void 0 ? void 0 : _10.dragEnd) !== null && _11 !== void 0 ? _11 : undefined,\r\n                dragOver: (_15 = (_14 = (_13 = (_12 = this.options) === null || _12 === void 0 ? void 0 : _12.actionMapping) === null || _13 === void 0 ? void 0 : _13.mouse) === null || _14 === void 0 ? void 0 : _14.dragOver) !== null && _15 !== void 0 ? _15 : undefined,\r\n                dragLeave: (_19 = (_18 = (_17 = (_16 = this.options) === null || _16 === void 0 ? void 0 : _16.actionMapping) === null || _17 === void 0 ? void 0 : _17.mouse) === null || _18 === void 0 ? void 0 : _18.dragLeave) !== null && _19 !== void 0 ? _19 : undefined,\r\n                dragEnter: (_23 = (_22 = (_21 = (_20 = this.options) === null || _20 === void 0 ? void 0 : _20.actionMapping) === null || _21 === void 0 ? void 0 : _21.mouse) === null || _22 === void 0 ? void 0 : _22.dragEnter) !== null && _23 !== void 0 ? _23 : undefined,\r\n                mouseOver: (_27 = (_26 = (_25 = (_24 = this.options) === null || _24 === void 0 ? void 0 : _24.actionMapping) === null || _25 === void 0 ? void 0 : _25.mouse) === null || _26 === void 0 ? void 0 : _26.mouseOver) !== null && _27 !== void 0 ? _27 : undefined,\r\n                mouseOut: (_31 = (_30 = (_29 = (_28 = this.options) === null || _28 === void 0 ? void 0 : _28.actionMapping) === null || _29 === void 0 ? void 0 : _29.mouse) === null || _30 === void 0 ? void 0 : _30.mouseOut) !== null && _31 !== void 0 ? _31 : undefined,\r\n            },\r\n            keys: {\r\n                [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\r\n                [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\r\n                [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\r\n                [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\r\n                [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n                [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE\r\n            }\r\n        };\r\n        if ((_33 = (_32 = this.options) === null || _32 === void 0 ? void 0 : _32.actionMapping) === null || _33 === void 0 ? void 0 : _33.keys) {\r\n            this.actionMapping.keys = Object.assign(Object.assign({}, this.actionMapping.keys), this.options.actionMapping.keys);\r\n        }\r\n        if (options.rtl) {\r\n            this.actionMapping.keys[KEYS.RIGHT] = ((_34 = options.actionMapping) === null || _34 === void 0 ? void 0 : _34.keys[KEYS.RIGHT]) || TREE_ACTIONS.DRILL_UP;\r\n            this.actionMapping.keys[KEYS.LEFT] = ((_35 = options.actionMapping) === null || _35 === void 0 ? void 0 : _35.keys[KEYS.LEFT]) || TREE_ACTIONS.DRILL_DOWN;\r\n        }\r\n    }\r\n    get hasChildrenField() { return this.options.hasChildrenField || 'hasChildren'; }\r\n    get childrenField() { return this.options.childrenField || 'children'; }\r\n    get displayField() { return this.options.displayField || 'name'; }\r\n    get idField() { return this.options.idField || 'id'; }\r\n    get isExpandedField() { return this.options.isExpandedField || 'isExpanded'; }\r\n    get getChildren() { return this.options.getChildren; }\r\n    get levelPadding() { return this.options.levelPadding || 0; }\r\n    get useVirtualScroll() { return this.options.useVirtualScroll; }\r\n    get animateExpand() { return this.options.animateExpand; }\r\n    get animateSpeed() { return this.options.animateSpeed || 1; }\r\n    get animateAcceleration() { return this.options.animateAcceleration || 1.2; }\r\n    get scrollOnActivate() { return this.options.scrollOnActivate === undefined ? true : this.options.scrollOnActivate; }\r\n    get rtl() { return !!this.options.rtl; }\r\n    get rootId() { return this.options.rootId; }\r\n    get useCheckbox() { return this.options.useCheckbox; }\r\n    get useTriState() { return this.options.useTriState === undefined ? true : this.options.useTriState; }\r\n    get scrollContainer() { return this.options.scrollContainer; }\r\n    get allowDragoverStyling() { return this.options.allowDragoverStyling === undefined ? true : this.options.allowDragoverStyling; }\r\n    getNodeClone(node) {\r\n        if (this.options.getNodeClone) {\r\n            return this.options.getNodeClone(node);\r\n        }\r\n        // remove id from clone\r\n        // keeping ie11 compatibility\r\n        const nodeClone = Object.assign({}, node.data);\r\n        if (nodeClone.id) {\r\n            delete nodeClone.id;\r\n        }\r\n        return nodeClone;\r\n    }\r\n    allowDrop(element, to, $event) {\r\n        if (this.options.allowDrop instanceof Function) {\r\n            return this.options.allowDrop(element, to, $event);\r\n        }\r\n        else {\r\n            return this.options.allowDrop === undefined ? true : this.options.allowDrop;\r\n        }\r\n    }\r\n    allowDrag(node) {\r\n        if (this.options.allowDrag instanceof Function) {\r\n            return this.options.allowDrag(node);\r\n        }\r\n        else {\r\n            return this.options.allowDrag;\r\n        }\r\n    }\r\n    nodeClass(node) {\r\n        return this.options.nodeClass ? this.options.nodeClass(node) : '';\r\n    }\r\n    nodeHeight(node) {\r\n        if (node.data.virtual) {\r\n            return 0;\r\n        }\r\n        let nodeHeight = this.options.nodeHeight || 22;\r\n        if (typeof nodeHeight === 'function') {\r\n            nodeHeight = nodeHeight(node);\r\n        }\r\n        // account for drop slots:\r\n        return nodeHeight + (node.index === 0 ? 2 : 1) * this.dropSlotHeight;\r\n    }\r\n    get dropSlotHeight() {\r\n        return typeof this.options.dropSlotHeight === 'number' ? this.options.dropSlotHeight : 2;\r\n    }\r\n}\n\nconst TREE_EVENTS = {\r\n    toggleExpanded: 'toggleExpanded',\r\n    activate: 'activate',\r\n    deactivate: 'deactivate',\r\n    nodeActivate: 'nodeActivate',\r\n    nodeDeactivate: 'nodeDeactivate',\r\n    select: 'select',\r\n    deselect: 'deselect',\r\n    focus: 'focus',\r\n    blur: 'blur',\r\n    initialized: 'initialized',\r\n    updateData: 'updateData',\r\n    moveNode: 'moveNode',\r\n    copyNode: 'copyNode',\r\n    event: 'event',\r\n    loadNodeChildren: 'loadNodeChildren',\r\n    changeFilter: 'changeFilter',\r\n    stateChange: 'stateChange'\r\n};\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeNode {\r\n    constructor(data, parent, treeModel, index) {\r\n        this.data = data;\r\n        this.parent = parent;\r\n        this.treeModel = treeModel;\r\n        this.position = 0;\r\n        this.allowDrop = (element, $event) => {\r\n            return this.options.allowDrop(element, { parent: this, index: 0 }, $event);\r\n        };\r\n        this.allowDragoverStyling = () => {\r\n            return this.options.allowDragoverStyling;\r\n        };\r\n        if (this.id === undefined || this.id === null) {\r\n            this.id = uuid();\r\n        } // Make sure there's a unique id without overriding existing ids to work with immutable data structures\r\n        this.index = index;\r\n        if (this.getField('children')) {\r\n            this._initChildren();\r\n        }\r\n        this.autoLoadChildren();\r\n    }\r\n    get isHidden() { return this.treeModel.isHidden(this); }\r\n    ;\r\n    get isExpanded() { return this.treeModel.isExpanded(this); }\r\n    ;\r\n    get isActive() { return this.treeModel.isActive(this); }\r\n    ;\r\n    get isFocused() { return this.treeModel.isNodeFocused(this); }\r\n    ;\r\n    get isSelected() {\r\n        if (this.isSelectable()) {\r\n            return this.treeModel.isSelected(this);\r\n        }\r\n        else {\r\n            return this.children.some((node) => node.isSelected);\r\n        }\r\n    }\r\n    ;\r\n    get isAllSelected() {\r\n        if (this.isSelectable()) {\r\n            return this.treeModel.isSelected(this);\r\n        }\r\n        else {\r\n            return this.children.every((node) => node.isAllSelected);\r\n        }\r\n    }\r\n    ;\r\n    get isPartiallySelected() {\r\n        return this.isSelected && !this.isAllSelected;\r\n    }\r\n    get level() {\r\n        return this.parent ? this.parent.level + 1 : 0;\r\n    }\r\n    get path() {\r\n        return this.parent ? [...this.parent.path, this.id] : [];\r\n    }\r\n    get elementRef() {\r\n        throw `Element Ref is no longer supported since introducing virtual scroll\\n\r\n      You may use a template to obtain a reference to the element`;\r\n    }\r\n    get originalNode() { return this._originalNode; }\r\n    ;\r\n    // helper get functions:\r\n    get hasChildren() {\r\n        return !!(this.getField('hasChildren') || (this.children && this.children.length > 0));\r\n    }\r\n    get isCollapsed() { return !this.isExpanded; }\r\n    get isLeaf() { return !this.hasChildren; }\r\n    get isRoot() { return this.parent.data.virtual; }\r\n    get realParent() { return this.isRoot ? null : this.parent; }\r\n    // proxy functions:\r\n    get options() { return this.treeModel.options; }\r\n    fireEvent(event) { this.treeModel.fireEvent(event); }\r\n    // field accessors:\r\n    get displayField() {\r\n        return this.getField('display');\r\n    }\r\n    get id() {\r\n        return this.getField('id');\r\n    }\r\n    set id(value) {\r\n        this.setField('id', value);\r\n    }\r\n    getField(key) {\r\n        return this.data[this.options[`${key}Field`]];\r\n    }\r\n    setField(key, value) {\r\n        this.data[this.options[`${key}Field`]] = value;\r\n    }\r\n    // traversing:\r\n    _findAdjacentSibling(steps, skipHidden = false) {\r\n        const siblings = this._getParentsChildren(skipHidden);\r\n        const index = siblings.indexOf(this);\r\n        return siblings.length > index + steps ? siblings[index + steps] : null;\r\n    }\r\n    findNextSibling(skipHidden = false) {\r\n        return this._findAdjacentSibling(+1, skipHidden);\r\n    }\r\n    findPreviousSibling(skipHidden = false) {\r\n        return this._findAdjacentSibling(-1, skipHidden);\r\n    }\r\n    getVisibleChildren() {\r\n        return this.visibleChildren;\r\n    }\r\n    get visibleChildren() {\r\n        return (this.children || []).filter((node) => !node.isHidden);\r\n    }\r\n    getFirstChild(skipHidden = false) {\r\n        let children = skipHidden ? this.visibleChildren : this.children;\r\n        return children != null && children.length ? children[0] : null;\r\n    }\r\n    getLastChild(skipHidden = false) {\r\n        let children = skipHidden ? this.visibleChildren : this.children;\r\n        return children != null && children.length ? children[children.length - 1] : null;\r\n    }\r\n    findNextNode(goInside = true, skipHidden = false) {\r\n        return goInside && this.isExpanded && this.getFirstChild(skipHidden) ||\r\n            this.findNextSibling(skipHidden) ||\r\n            this.parent && this.parent.findNextNode(false, skipHidden);\r\n    }\r\n    findPreviousNode(skipHidden = false) {\r\n        let previousSibling = this.findPreviousSibling(skipHidden);\r\n        if (!previousSibling) {\r\n            return this.realParent;\r\n        }\r\n        return previousSibling._getLastOpenDescendant(skipHidden);\r\n    }\r\n    _getLastOpenDescendant(skipHidden = false) {\r\n        const lastChild = this.getLastChild(skipHidden);\r\n        return (this.isCollapsed || !lastChild)\r\n            ? this\r\n            : lastChild._getLastOpenDescendant(skipHidden);\r\n    }\r\n    _getParentsChildren(skipHidden = false) {\r\n        const children = this.parent &&\r\n            (skipHidden ? this.parent.getVisibleChildren() : this.parent.children);\r\n        return children || [];\r\n    }\r\n    getIndexInParent(skipHidden = false) {\r\n        return this._getParentsChildren(skipHidden).indexOf(this);\r\n    }\r\n    isDescendantOf(node) {\r\n        if (this === node)\r\n            return true;\r\n        else\r\n            return this.parent && this.parent.isDescendantOf(node);\r\n    }\r\n    getNodePadding() {\r\n        return this.options.levelPadding * (this.level - 1) + 'px';\r\n    }\r\n    getClass() {\r\n        return [this.options.nodeClass(this), `tree-node-level-${this.level}`].join(' ');\r\n    }\r\n    onDrop($event) {\r\n        this.mouseAction('drop', $event.event, {\r\n            from: $event.element,\r\n            to: { parent: this, index: 0, dropOnNode: true }\r\n        });\r\n    }\r\n    allowDrag() {\r\n        return this.options.allowDrag(this);\r\n    }\r\n    // helper methods:\r\n    loadNodeChildren() {\r\n        if (!this.options.getChildren) {\r\n            return Promise.resolve(); // Not getChildren method - for using redux\r\n        }\r\n        return Promise.resolve(this.options.getChildren(this))\r\n            .then((children) => {\r\n            if (children) {\r\n                this.setField('children', children);\r\n                this._initChildren();\r\n                if (this.options.useTriState && this.treeModel.isSelected(this)) {\r\n                    this.setIsSelected(true);\r\n                }\r\n                this.children.forEach((child) => {\r\n                    if (child.getField('isExpanded') && child.hasChildren) {\r\n                        child.expand();\r\n                    }\r\n                });\r\n            }\r\n        }).then(() => {\r\n            this.fireEvent({\r\n                eventName: TREE_EVENTS.loadNodeChildren,\r\n                node: this\r\n            });\r\n        });\r\n    }\r\n    expand() {\r\n        if (!this.isExpanded) {\r\n            this.toggleExpanded();\r\n        }\r\n        return this;\r\n    }\r\n    collapse() {\r\n        if (this.isExpanded) {\r\n            this.toggleExpanded();\r\n        }\r\n        return this;\r\n    }\r\n    doForAll(fn) {\r\n        Promise.resolve(fn(this)).then(() => {\r\n            if (this.children) {\r\n                this.children.forEach((child) => child.doForAll(fn));\r\n            }\r\n        });\r\n    }\r\n    expandAll() {\r\n        this.doForAll((node) => node.expand());\r\n    }\r\n    collapseAll() {\r\n        this.doForAll((node) => node.collapse());\r\n    }\r\n    ensureVisible() {\r\n        if (this.realParent) {\r\n            this.realParent.expand();\r\n            this.realParent.ensureVisible();\r\n        }\r\n        return this;\r\n    }\r\n    toggleExpanded() {\r\n        this.setIsExpanded(!this.isExpanded);\r\n        return this;\r\n    }\r\n    setIsExpanded(value) {\r\n        if (this.hasChildren) {\r\n            this.treeModel.setExpandedNode(this, value);\r\n        }\r\n        return this;\r\n    }\r\n    ;\r\n    autoLoadChildren() {\r\n        this.handler =\r\n            reaction(() => this.isExpanded, (isExpanded) => {\r\n                if (!this.children && this.hasChildren && isExpanded) {\r\n                    this.loadNodeChildren();\r\n                }\r\n            }, { fireImmediately: true });\r\n    }\r\n    dispose() {\r\n        if (this.children) {\r\n            this.children.forEach((child) => child.dispose());\r\n        }\r\n        if (this.handler) {\r\n            this.handler();\r\n        }\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n    setIsActive(value, multi = false) {\r\n        this.treeModel.setActiveNode(this, value, multi);\r\n        if (value) {\r\n            this.focus(this.options.scrollOnActivate);\r\n        }\r\n        return this;\r\n    }\r\n    isSelectable() {\r\n        return this.isLeaf || !this.children || !this.options.useTriState;\r\n    }\r\n    setIsSelected(value) {\r\n        if (this.isSelectable()) {\r\n            this.treeModel.setSelectedNode(this, value);\r\n        }\r\n        else {\r\n            this.visibleChildren.forEach((child) => child.setIsSelected(value));\r\n        }\r\n        return this;\r\n    }\r\n    toggleSelected() {\r\n        this.setIsSelected(!this.isSelected);\r\n        return this;\r\n    }\r\n    toggleActivated(multi = false) {\r\n        this.setIsActive(!this.isActive, multi);\r\n        return this;\r\n    }\r\n    setActiveAndVisible(multi = false) {\r\n        this.setIsActive(true, multi)\r\n            .ensureVisible();\r\n        setTimeout(this.scrollIntoView.bind(this));\r\n        return this;\r\n    }\r\n    scrollIntoView(force = false) {\r\n        this.treeModel.virtualScroll.scrollIntoView(this, force);\r\n    }\r\n    focus(scroll = true) {\r\n        let previousNode = this.treeModel.getFocusedNode();\r\n        this.treeModel.setFocusedNode(this);\r\n        if (scroll) {\r\n            this.scrollIntoView();\r\n        }\r\n        if (previousNode) {\r\n            this.fireEvent({ eventName: TREE_EVENTS.blur, node: previousNode });\r\n        }\r\n        this.fireEvent({ eventName: TREE_EVENTS.focus, node: this });\r\n        return this;\r\n    }\r\n    blur() {\r\n        let previousNode = this.treeModel.getFocusedNode();\r\n        this.treeModel.setFocusedNode(null);\r\n        if (previousNode) {\r\n            this.fireEvent({ eventName: TREE_EVENTS.blur, node: this });\r\n        }\r\n        return this;\r\n    }\r\n    setIsHidden(value) {\r\n        this.treeModel.setIsHidden(this, value);\r\n    }\r\n    hide() {\r\n        this.setIsHidden(true);\r\n    }\r\n    show() {\r\n        this.setIsHidden(false);\r\n    }\r\n    mouseAction(actionName, $event, data = null) {\r\n        this.treeModel.setFocus(true);\r\n        const actionMapping = this.options.actionMapping.mouse;\r\n        const mouseAction = actionMapping[actionName];\r\n        if (mouseAction) {\r\n            mouseAction(this.treeModel, this, $event, data);\r\n        }\r\n    }\r\n    getSelfHeight() {\r\n        return this.options.nodeHeight(this);\r\n    }\r\n    _initChildren() {\r\n        this.children = this.getField('children')\r\n            .map((c, index) => new TreeNode(c, this, this.treeModel, index));\r\n    }\r\n}\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isHidden\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isExpanded\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isActive\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isFocused\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isSelected\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isAllSelected\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"isPartiallySelected\", null);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Array)\r\n], TreeNode.prototype, \"children\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Number)\r\n], TreeNode.prototype, \"index\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Object)\r\n], TreeNode.prototype, \"position\", void 0);\r\n__decorate([\r\n    observable$1,\r\n    __metadata(\"design:type\", Number)\r\n], TreeNode.prototype, \"height\", void 0);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"level\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Array),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"path\", null);\r\n__decorate([\r\n    computed$1,\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [])\r\n], TreeNode.prototype, \"visibleChildren\", null);\r\n__decorate([\r\n    action$1,\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TreeNode.prototype, \"setIsSelected\", null);\r\n__decorate([\r\n    action$1,\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TreeNode.prototype, \"_initChildren\", null);\r\nfunction uuid() {\r\n    return Math.floor(Math.random() * 10000000000000);\r\n}\n\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeModel {\r\n    constructor() {\r\n        this.options = new TreeOptions();\r\n        this.eventNames = Object.keys(TREE_EVENTS);\r\n        this.expandedNodeIds = {};\r\n        this.selectedLeafNodeIds = {};\r\n        this.activeNodeIds = {};\r\n        this.hiddenNodeIds = {};\r\n        this.focusedNodeId = null;\r\n        this.firstUpdate = true;\r\n        this.subscriptions = [];\r\n    }\r\n    // events\r\n    fireEvent(event) {\r\n        event.treeModel = this;\r\n        this.events[event.eventName].emit(event);\r\n        this.events.event.emit(event);\r\n    }\r\n    subscribe(eventName, fn) {\r\n        const subscription = this.events[eventName].subscribe(fn);\r\n        this.subscriptions.push(subscription);\r\n    }\r\n    // getters\r\n    getFocusedNode() {\r\n        return this.focusedNode;\r\n    }\r\n    getActiveNode() {\r\n        return this.activeNodes[0];\r\n    }\r\n    getActiveNodes() {\r\n        return this.activeNodes;\r\n    }\r\n    getVisibleRoots() {\r\n        return this.virtualRoot.visibleChildren;\r\n    }\r\n    getFirstRoot(skipHidden = false) {\r\n        const root = skipHidden ? this.getVisibleRoots() : this.roots;\r\n        return root != null && root.length ? root[0] : null;\r\n    }\r\n    getLastRoot(skipHidden = false) {\r\n        const root = skipHidden ? this.getVisibleRoots() : this.roots;\r\n        return root != null && root.length ? root[root.length - 1] : null;\r\n    }\r\n    get isFocused() {\r\n        return TreeModel.focusedTree === this;\r\n    }\r\n    isNodeFocused(node) {\r\n        return this.focusedNode === node;\r\n    }\r\n    isEmptyTree() {\r\n        return this.roots && this.roots.length === 0;\r\n    }\r\n    get focusedNode() {\r\n        return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null;\r\n    }\r\n    get expandedNodes() {\r\n        const nodes = Object.keys(this.expandedNodeIds)\r\n            .filter((id) => this.expandedNodeIds[id])\r\n            .map((id) => this.getNodeById(id));\r\n        return nodes.filter(Boolean);\r\n    }\r\n    get activeNodes() {\r\n        const nodes = Object.keys(this.activeNodeIds)\r\n            .filter((id) => this.activeNodeIds[id])\r\n            .map((id) => this.getNodeById(id));\r\n        return nodes.filter(Boolean);\r\n    }\r\n    get hiddenNodes() {\r\n        const nodes = Object.keys(this.hiddenNodeIds)\r\n            .filter((id) => this.hiddenNodeIds[id])\r\n            .map((id) => this.getNodeById(id));\r\n        return nodes.filter(Boolean);\r\n    }\r\n    get selectedLeafNodes() {\r\n        const nodes = Object.keys(this.selectedLeafNodeIds)\r\n            .filter((id) => this.selectedLeafNodeIds[id])\r\n            .map((id) => this.getNodeById(id));\r\n        return nodes.filter(Boolean);\r\n    }\r\n    // locating nodes\r\n    getNodeByPath(path, startNode = null) {\r\n        if (!path)\r\n            return null;\r\n        startNode = startNode || this.virtualRoot;\r\n        if (path.length === 0)\r\n            return startNode;\r\n        if (!startNode.children)\r\n            return null;\r\n        const childId = path.shift();\r\n        const childNode = startNode.children.find(c => c.id === childId);\r\n        if (!childNode)\r\n            return null;\r\n        return this.getNodeByPath(path, childNode);\r\n    }\r\n    getNodeById(id) {\r\n        const idStr = id.toString();\r\n        return this.getNodeBy((node) => node.id.toString() === idStr);\r\n    }\r\n    getNodeBy(predicate, startNode = null) {\r\n        startNode = startNode || this.virtualRoot;\r\n        if (!startNode.children)\r\n            return null;\r\n        const found = startNode.children.find(predicate);\r\n        if (found) { // found in children\r\n            return found;\r\n        }\r\n        else { // look in children's children\r\n            for (let child of startNode.children) {\r\n                const foundInChildren = this.getNodeBy(predicate, child);\r\n                if (foundInChildren)\r\n                    return foundInChildren;\r\n            }\r\n        }\r\n    }\r\n    isExpanded(node) {\r\n        return this.expandedNodeIds[node.id];\r\n    }\r\n    isHidden(node) {\r\n        return this.hiddenNodeIds[node.id];\r\n    }\r\n    isActive(node) {\r\n        return this.activeNodeIds[node.id];\r\n    }\r\n    isSelected(node) {\r\n        return this.selectedLeafNodeIds[node.id];\r\n    }\r\n    ngOnDestroy() {\r\n        this.dispose();\r\n        this.unsubscribeAll();\r\n    }\r\n    dispose() {\r\n        // Dispose reactions of the replaced nodes\r\n        if (this.virtualRoot) {\r\n            this.virtualRoot.dispose();\r\n        }\r\n    }\r\n    unsubscribeAll() {\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n        this.subscriptions = [];\r\n    }\r\n    // actions\r\n    setData({ nodes, options = null, events = null }) {\r\n        if (options) {\r\n            this.options = new TreeOptions(options);\r\n        }\r\n        if (events) {\r\n            this.events = events;\r\n        }\r\n        if (nodes) {\r\n            this.nodes = nodes;\r\n        }\r\n        this.update();\r\n    }\r\n    update() {\r\n        // Rebuild tree:\r\n        let virtualRootConfig = {\r\n            id: this.options.rootId,\r\n            virtual: true,\r\n            [this.options.childrenField]: this.nodes\r\n        };\r\n        this.dispose();\r\n        this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0);\r\n        this.roots = this.virtualRoot.children;\r\n        // Fire event:\r\n        if (this.firstUpdate) {\r\n            if (this.roots) {\r\n                this.firstUpdate = false;\r\n                this._calculateExpandedNodes();\r\n            }\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.updateData });\r\n        }\r\n    }\r\n    setFocusedNode(node) {\r\n        this.focusedNodeId = node ? node.id : null;\r\n    }\r\n    setFocus(value) {\r\n        TreeModel.focusedTree = value ? this : null;\r\n    }\r\n    doForAll(fn) {\r\n        this.roots.forEach((root) => root.doForAll(fn));\r\n    }\r\n    focusNextNode() {\r\n        let previousNode = this.getFocusedNode();\r\n        let nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true);\r\n        if (nextNode)\r\n            nextNode.focus();\r\n    }\r\n    focusPreviousNode() {\r\n        let previousNode = this.getFocusedNode();\r\n        let nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true);\r\n        if (nextNode)\r\n            nextNode.focus();\r\n    }\r\n    focusDrillDown() {\r\n        let previousNode = this.getFocusedNode();\r\n        if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\r\n            previousNode.toggleExpanded();\r\n        }\r\n        else {\r\n            let nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true);\r\n            if (nextNode)\r\n                nextNode.focus();\r\n        }\r\n    }\r\n    focusDrillUp() {\r\n        let previousNode = this.getFocusedNode();\r\n        if (!previousNode)\r\n            return;\r\n        if (previousNode.isExpanded) {\r\n            previousNode.toggleExpanded();\r\n        }\r\n        else {\r\n            let nextNode = previousNode.realParent;\r\n            if (nextNode)\r\n                nextNode.focus();\r\n        }\r\n    }\r\n    setActiveNode(node, value, multi = false) {\r\n        if (multi) {\r\n            this._setActiveNodeMulti(node, value);\r\n        }\r\n        else {\r\n            this._setActiveNodeSingle(node, value);\r\n        }\r\n        if (value) {\r\n            node.focus(this.options.scrollOnActivate);\r\n            this.fireEvent({ eventName: TREE_EVENTS.activate, node });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeActivate, node }); // For IE11\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node }); // For IE11\r\n        }\r\n    }\r\n    setSelectedNode(node, value) {\r\n        this.selectedLeafNodeIds = Object.assign({}, this.selectedLeafNodeIds, { [node.id]: value });\r\n        if (value) {\r\n            node.focus();\r\n            this.fireEvent({ eventName: TREE_EVENTS.select, node });\r\n        }\r\n        else {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deselect, node });\r\n        }\r\n    }\r\n    setExpandedNode(node, value) {\r\n        this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, { [node.id]: value });\r\n        this.fireEvent({ eventName: TREE_EVENTS.toggleExpanded, node, isExpanded: value });\r\n    }\r\n    expandAll() {\r\n        this.roots.forEach((root) => root.expandAll());\r\n    }\r\n    collapseAll() {\r\n        this.roots.forEach((root) => root.collapseAll());\r\n    }\r\n    setIsHidden(node, value) {\r\n        this.hiddenNodeIds = Object.assign({}, this.hiddenNodeIds, { [node.id]: value });\r\n    }\r\n    setHiddenNodeIds(nodeIds) {\r\n        this.hiddenNodeIds = nodeIds.reduce((hiddenNodeIds, id) => Object.assign(hiddenNodeIds, {\r\n            [id]: true\r\n        }), {});\r\n    }\r\n    performKeyAction(node, $event) {\r\n        const keyAction = this.options.actionMapping.keys[$event.keyCode];\r\n        if (keyAction) {\r\n            $event.preventDefault();\r\n            keyAction(this, node, $event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    filterNodes(filter, autoShow = true) {\r\n        let filterFn;\r\n        if (!filter) {\r\n            return this.clearFilter();\r\n        }\r\n        // support function and string filter\r\n        if (filter && typeof filter.valueOf() === 'string') {\r\n            filterFn = (node) => node.displayField.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n        }\r\n        else if (filter && typeof filter === 'function') {\r\n            filterFn = filter;\r\n        }\r\n        else {\r\n            console.error('Don\\'t know what to do with filter', filter);\r\n            console.error('Should be either a string or function');\r\n            return;\r\n        }\r\n        const ids = {};\r\n        this.roots.forEach((node) => this._filterNode(ids, node, filterFn, autoShow));\r\n        this.hiddenNodeIds = ids;\r\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n    }\r\n    clearFilter() {\r\n        this.hiddenNodeIds = {};\r\n        this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n    }\r\n    moveNode(node, to) {\r\n        const fromIndex = node.getIndexInParent();\r\n        const fromParent = node.parent;\r\n        if (!this.canMoveNode(node, to, fromIndex))\r\n            return;\r\n        const fromChildren = fromParent.getField('children');\r\n        // If node doesn't have children - create children array\r\n        if (!to.parent.getField('children')) {\r\n            to.parent.setField('children', []);\r\n        }\r\n        const toChildren = to.parent.getField('children');\r\n        const originalNode = fromChildren.splice(fromIndex, 1)[0];\r\n        // Compensate for index if already removed from parent:\r\n        let toIndex = (fromParent === to.parent && to.index > fromIndex) ? to.index - 1 : to.index;\r\n        toChildren.splice(toIndex, 0, originalNode);\r\n        fromParent.treeModel.update();\r\n        if (to.parent.treeModel !== fromParent.treeModel) {\r\n            to.parent.treeModel.update();\r\n        }\r\n        this.fireEvent({\r\n            eventName: TREE_EVENTS.moveNode,\r\n            node: originalNode,\r\n            to: { parent: to.parent.data, index: toIndex },\r\n            from: { parent: fromParent.data, index: fromIndex }\r\n        });\r\n    }\r\n    copyNode(node, to) {\r\n        const fromIndex = node.getIndexInParent();\r\n        if (!this.canMoveNode(node, to, fromIndex))\r\n            return;\r\n        // If node doesn't have children - create children array\r\n        if (!to.parent.getField('children')) {\r\n            to.parent.setField('children', []);\r\n        }\r\n        const toChildren = to.parent.getField('children');\r\n        const nodeCopy = this.options.getNodeClone(node);\r\n        toChildren.splice(to.index, 0, nodeCopy);\r\n        node.treeModel.update();\r\n        if (to.parent.treeModel !== node.treeModel) {\r\n            to.parent.treeModel.update();\r\n        }\r\n        this.fireEvent({ eventName: TREE_EVENTS.copyNode, node: nodeCopy, to: { parent: to.parent.data, index: to.index } });\r\n    }\r\n    getState() {\r\n        return {\r\n            expandedNodeIds: this.expandedNodeIds,\r\n            selectedLeafNodeIds: this.selectedLeafNodeIds,\r\n            activeNodeIds: this.activeNodeIds,\r\n            hiddenNodeIds: this.hiddenNodeIds,\r\n            focusedNodeId: this.focusedNodeId\r\n        };\r\n    }\r\n    setState(state) {\r\n        if (!state)\r\n            return;\r\n        Object.assign(this, {\r\n            expandedNodeIds: state.expandedNodeIds || {},\r\n            selectedLeafNodeIds: state.selectedLeafNodeIds || {},\r\n            activeNodeIds: state.activeNodeIds || {},\r\n            hiddenNodeIds: state.hiddenNodeIds || {},\r\n            focusedNodeId: state.focusedNodeId\r\n        });\r\n    }\r\n    subscribeToState(fn) {\r\n        autorun(() => fn(this.getState()));\r\n    }\r\n    canMoveNode(node, to, fromIndex = undefined) {\r\n        const fromNodeIndex = fromIndex || node.getIndexInParent();\r\n        // same node:\r\n        if (node.parent === to.parent && fromIndex === to.index) {\r\n            return false;\r\n        }\r\n        return !to.parent.isDescendantOf(node);\r\n    }\r\n    calculateExpandedNodes() {\r\n        this._calculateExpandedNodes();\r\n    }\r\n    // private methods\r\n    _filterNode(ids, node, filterFn, autoShow) {\r\n        // if node passes function then it's visible\r\n        let isVisible = filterFn(node);\r\n        if (node.children) {\r\n            // if one of node's children passes filter then this node is also visible\r\n            node.children.forEach((child) => {\r\n                if (this._filterNode(ids, child, filterFn, autoShow)) {\r\n                    isVisible = true;\r\n                }\r\n            });\r\n        }\r\n        // mark node as hidden\r\n        if (!isVisible) {\r\n            ids[node.id] = true;\r\n        }\r\n        // auto expand parents to make sure the filtered nodes are visible\r\n        if (autoShow && isVisible) {\r\n            node.ensureVisible();\r\n        }\r\n        return isVisible;\r\n    }\r\n    _calculateExpandedNodes(startNode = null) {\r\n        startNode = startNode || this.virtualRoot;\r\n        if (startNode.data[this.options.isExpandedField]) {\r\n            this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, { [startNode.id]: true });\r\n        }\r\n        if (startNode.children) {\r\n            startNode.children.forEach((child) => this._calculateExpandedNodes(child));\r\n        }\r\n    }\r\n    _setActiveNodeSingle(node, value) {\r\n        // Deactivate all other nodes:\r\n        this.activeNodes\r\n            .filter((activeNode) => activeNode !== node)\r\n            .forEach((activeNode) => {\r\n            this.fireEvent({ eventName: TREE_EVENTS.deactivate, node: activeNode });\r\n            this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node: activeNode }); // For IE11\r\n        });\r\n        if (value) {\r\n            this.activeNodeIds = { [node.id]: true };\r\n        }\r\n        else {\r\n            this.activeNodeIds = {};\r\n        }\r\n    }\r\n    _setActiveNodeMulti(node, value) {\r\n        this.activeNodeIds = Object.assign({}, this.activeNodeIds, { [node.id]: value });\r\n    }\r\n}\nTreeModel.ɵfac = function TreeModel_Factory(t) { return new (t || TreeModel)(); };\nTreeModel.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TreeModel, factory: TreeModel.ɵfac });\r\nTreeModel.focusedTree = null;\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Array)\r\n], TreeModel.prototype, \"roots\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"expandedNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"selectedLeafNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"activeNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"hiddenNodeIds\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", Object)\r\n], TreeModel.prototype, \"focusedNodeId\", void 0);\r\n__decorate$1([\r\n    observable$1,\r\n    __metadata$1(\"design:type\", TreeNode)\r\n], TreeModel.prototype, \"virtualRoot\", void 0);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"focusedNode\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"expandedNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"activeNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"hiddenNodes\", null);\r\n__decorate$1([\r\n    computed$1,\r\n    __metadata$1(\"design:type\", Object),\r\n    __metadata$1(\"design:paramtypes\", [])\r\n], TreeModel.prototype, \"selectedLeafNodes\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setData\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"update\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setFocusedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setFocus\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"doForAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusNextNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusPreviousNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusDrillDown\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"focusDrillUp\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setActiveNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setSelectedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setExpandedNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"expandAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"collapseAll\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setIsHidden\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setHiddenNodeIds\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"filterNodes\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", []),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"clearFilter\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"moveNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object, Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"copyNode\", null);\r\n__decorate$1([\r\n    action$1,\r\n    __metadata$1(\"design:type\", Function),\r\n    __metadata$1(\"design:paramtypes\", [Object]),\r\n    __metadata$1(\"design:returntype\", void 0)\r\n], TreeModel.prototype, \"setState\", null);\n\nclass TreeDraggedElement {\r\n    constructor() {\r\n        this._draggedElement = null;\r\n    }\r\n    set(draggedElement) {\r\n        this._draggedElement = draggedElement;\r\n    }\r\n    get() {\r\n        return this._draggedElement;\r\n    }\r\n    isDragging() {\r\n        return !!this.get();\r\n    }\r\n}\nTreeDraggedElement.ɵfac = function TreeDraggedElement_Factory(t) { return new (t || TreeDraggedElement)(); };\r\n/** @nocollapse */ TreeDraggedElement.ɵprov = ɵɵdefineInjectable({ factory: function TreeDraggedElement_Factory() { return new TreeDraggedElement(); }, token: TreeDraggedElement, providedIn: \"root\" });\n\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nconst Y_OFFSET = 500; // Extra pixels outside the viewport, in each direction, to render nodes in\r\nconst Y_EPSILON = 150; // Minimum pixel change required to recalculate the rendered nodes\r\nclass TreeVirtualScroll {\r\n    constructor(treeModel) {\r\n        this.treeModel = treeModel;\r\n        this.yBlocks = 0;\r\n        this.x = 0;\r\n        this.viewportHeight = null;\r\n        this.viewport = null;\r\n        treeModel.virtualScroll = this;\r\n        this._dispose = [autorun(() => this.fixScroll())];\r\n    }\r\n    get y() {\r\n        return this.yBlocks * Y_EPSILON;\r\n    }\r\n    get totalHeight() {\r\n        return this.treeModel.virtualRoot ? this.treeModel.virtualRoot.height : 0;\r\n    }\r\n    fireEvent(event) {\r\n        this.treeModel.fireEvent(event);\r\n    }\r\n    init() {\r\n        const fn = this.recalcPositions.bind(this);\r\n        fn();\r\n        this._dispose = [\r\n            ...this._dispose,\r\n            reaction(() => this.treeModel.roots, fn),\r\n            reaction(() => this.treeModel.expandedNodeIds, fn),\r\n            reaction(() => this.treeModel.hiddenNodeIds, fn)\r\n        ];\r\n        this.treeModel.subscribe(TREE_EVENTS.loadNodeChildren, fn);\r\n    }\r\n    isEnabled() {\r\n        return this.treeModel.options.useVirtualScroll;\r\n    }\r\n    _setYBlocks(value) {\r\n        this.yBlocks = value;\r\n    }\r\n    recalcPositions() {\r\n        this.treeModel.virtualRoot.height = this._getPositionAfter(this.treeModel.getVisibleRoots(), 0);\r\n    }\r\n    _getPositionAfter(nodes, startPos) {\r\n        let position = startPos;\r\n        nodes.forEach((node) => {\r\n            node.position = position;\r\n            position = this._getPositionAfterNode(node, position);\r\n        });\r\n        return position;\r\n    }\r\n    _getPositionAfterNode(node, startPos) {\r\n        let position = node.getSelfHeight() + startPos;\r\n        if (node.children && node.isExpanded) { // TBD: consider loading component as well\r\n            position = this._getPositionAfter(node.visibleChildren, position);\r\n        }\r\n        node.height = position - startPos;\r\n        return position;\r\n    }\r\n    clear() {\r\n        this._dispose.forEach((d) => d());\r\n    }\r\n    setViewport(viewport) {\r\n        Object.assign(this, {\r\n            viewport,\r\n            x: viewport.scrollLeft,\r\n            yBlocks: Math.round(viewport.scrollTop / Y_EPSILON),\r\n            viewportHeight: viewport.getBoundingClientRect ? viewport.getBoundingClientRect().height : 0\r\n        });\r\n    }\r\n    scrollIntoView(node, force, scrollToMiddle = true) {\r\n        if (node.options.scrollContainer) {\r\n            const scrollContainer = node.options.scrollContainer;\r\n            const scrollContainerHeight = scrollContainer.getBoundingClientRect().height;\r\n            const scrollContainerTop = scrollContainer.getBoundingClientRect().top;\r\n            const nodeTop = this.viewport.getBoundingClientRect().top + node.position - scrollContainerTop;\r\n            if (force || // force scroll to node\r\n                nodeTop < scrollContainer.scrollTop || // node is above scroll container\r\n                nodeTop + node.getSelfHeight() > scrollContainer.scrollTop + scrollContainerHeight) { // node is below container\r\n                scrollContainer.scrollTop = scrollToMiddle ?\r\n                    nodeTop - scrollContainerHeight / 2 : // scroll to middle\r\n                    nodeTop; // scroll to start\r\n            }\r\n        }\r\n        else {\r\n            if (force || // force scroll to node\r\n                node.position < this.y || // node is above viewport\r\n                node.position + node.getSelfHeight() > this.y + this.viewportHeight) { // node is below viewport\r\n                if (this.viewport) {\r\n                    this.viewport.scrollTop = scrollToMiddle ?\r\n                        node.position - this.viewportHeight / 2 : // scroll to middle\r\n                        node.position; // scroll to start\r\n                    this._setYBlocks(Math.floor(this.viewport.scrollTop / Y_EPSILON));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getViewportNodes(nodes) {\r\n        if (!nodes)\r\n            return [];\r\n        const visibleNodes = nodes.filter((node) => !node.isHidden);\r\n        if (!this.isEnabled())\r\n            return visibleNodes;\r\n        if (!this.viewportHeight || !visibleNodes.length)\r\n            return [];\r\n        // When loading children async this method is called before their height and position is calculated.\r\n        // In that case firstIndex === 0 and lastIndex === visibleNodes.length - 1 (e.g. 1000),\r\n        // which means that it loops through every visibleNodes item and push them into viewportNodes array.\r\n        // We can prevent nodes from being pushed to the array and wait for the appropriate calculations to take place\r\n        const lastVisibleNode = visibleNodes.slice(-1)[0];\r\n        if (!lastVisibleNode.height && lastVisibleNode.position === 0)\r\n            return [];\r\n        // Search for first node in the viewport using binary search\r\n        // Look for first node that starts after the beginning of the viewport (with buffer)\r\n        // Or that ends after the beginning of the viewport\r\n        const firstIndex = binarySearch(visibleNodes, (node) => {\r\n            return (node.position + Y_OFFSET > this.y) ||\r\n                (node.position + node.height > this.y);\r\n        });\r\n        // Search for last node in the viewport using binary search\r\n        // Look for first node that starts after the end of the viewport (with buffer)\r\n        const lastIndex = binarySearch(visibleNodes, (node) => {\r\n            return node.position - Y_OFFSET > this.y + this.viewportHeight;\r\n        }, firstIndex);\r\n        const viewportNodes = [];\r\n        for (let i = firstIndex; i <= lastIndex; i++) {\r\n            viewportNodes.push(visibleNodes[i]);\r\n        }\r\n        return viewportNodes;\r\n    }\r\n    fixScroll() {\r\n        const maxY = Math.max(0, this.totalHeight - this.viewportHeight);\r\n        if (this.y < 0)\r\n            this._setYBlocks(0);\r\n        if (this.y > maxY)\r\n            this._setYBlocks(maxY / Y_EPSILON);\r\n    }\r\n}\nTreeVirtualScroll.ɵfac = function TreeVirtualScroll_Factory(t) { return new (t || TreeVirtualScroll)(ɵngcc0.ɵɵinject(TreeModel)); };\nTreeVirtualScroll.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TreeVirtualScroll, factory: TreeVirtualScroll.ɵfac });\r\n/** @nocollapse */\r\nTreeVirtualScroll.ctorParameters = () => [\r\n    { type: TreeModel }\r\n];\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"yBlocks\", void 0);\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"x\", void 0);\r\n__decorate$2([\r\n    observable$1,\r\n    __metadata$2(\"design:type\", Object)\r\n], TreeVirtualScroll.prototype, \"viewportHeight\", void 0);\r\n__decorate$2([\r\n    computed$1,\r\n    __metadata$2(\"design:type\", Object),\r\n    __metadata$2(\"design:paramtypes\", [])\r\n], TreeVirtualScroll.prototype, \"y\", null);\r\n__decorate$2([\r\n    computed$1,\r\n    __metadata$2(\"design:type\", Object),\r\n    __metadata$2(\"design:paramtypes\", [])\r\n], TreeVirtualScroll.prototype, \"totalHeight\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"_setYBlocks\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", []),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"recalcPositions\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"setViewport\", null);\r\n__decorate$2([\r\n    action$1,\r\n    __metadata$2(\"design:type\", Function),\r\n    __metadata$2(\"design:paramtypes\", [Object, Object, Object]),\r\n    __metadata$2(\"design:returntype\", void 0)\r\n], TreeVirtualScroll.prototype, \"scrollIntoView\", null);\r\nfunction binarySearch(nodes, condition, firstIndex = 0) {\r\n    let index = firstIndex;\r\n    let toIndex = nodes.length - 1;\r\n    while (index !== toIndex) {\r\n        let midIndex = Math.floor((index + toIndex) / 2);\r\n        if (condition(nodes[midIndex])) {\r\n            toIndex = midIndex;\r\n        }\r\n        else {\r\n            if (index === midIndex)\r\n                index = toIndex;\r\n            else\r\n                index = midIndex;\r\n        }\r\n    }\r\n    return index;\r\n}\n\nclass LoadingComponent {\r\n}\nLoadingComponent.ɵfac = function LoadingComponent_Factory(t) { return new (t || LoadingComponent)(); };\nLoadingComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoadingComponent, selectors: [[\"tree-loading-component\"]], inputs: { template: \"template\", node: \"node\" }, decls: 2, vars: 5, consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function LoadingComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LoadingComponent_span_0_Template, 2, 0, \"span\", 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.node));\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });\r\nLoadingComponent.propDecorators = {\r\n    template: [{ type: Input }],\r\n    node: [{ type: Input }]\r\n};\n\nclass TreeViewportComponent {\r\n    constructor(elementRef, virtualScroll) {\r\n        this.elementRef = elementRef;\r\n        this.virtualScroll = virtualScroll;\r\n        this.setViewport = this.throttle(() => {\r\n            this.virtualScroll.setViewport(this.elementRef.nativeElement);\r\n        }, 17);\r\n        this.scrollEventHandler = this.setViewport.bind(this);\r\n    }\r\n    ngOnInit() {\r\n        this.virtualScroll.init();\r\n    }\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.setViewport();\r\n            this.virtualScroll.fireEvent({ eventName: TREE_EVENTS.initialized });\r\n        });\r\n        let el = this.elementRef.nativeElement;\r\n        el.addEventListener('scroll', this.scrollEventHandler);\r\n    }\r\n    ngOnDestroy() {\r\n        this.virtualScroll.clear();\r\n        let el = this.elementRef.nativeElement;\r\n        el.removeEventListener('scroll', this.scrollEventHandler);\r\n    }\r\n    getTotalHeight() {\r\n        return ((this.virtualScroll.isEnabled() &&\r\n            this.virtualScroll.totalHeight + 'px') ||\r\n            'auto');\r\n    }\r\n    throttle(func, timeFrame) {\r\n        let lastTime = 0;\r\n        return function () {\r\n            let now = Date.now();\r\n            if (now - lastTime >= timeFrame) {\r\n                func();\r\n                lastTime = now;\r\n            }\r\n        };\r\n    }\r\n}\nTreeViewportComponent.ɵfac = function TreeViewportComponent_Factory(t) { return new (t || TreeViewportComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(TreeVirtualScroll)); };\nTreeViewportComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeViewportComponent, selectors: [[\"tree-viewport\"]], features: [ɵngcc0.ɵɵProvidersFeature([TreeVirtualScroll])], ngContentSelectors: _c2, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"]], template: function TreeViewportComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TreeViewportComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: [TreeMobxAutorunDirective], encapsulation: 2 });\r\n/** @nocollapse */\r\nTreeViewportComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: TreeVirtualScroll }\r\n];\n\nclass TreeComponent {\r\n    constructor(treeModel, treeDraggedElement) {\r\n        this.treeModel = treeModel;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        treeModel.eventNames.forEach((name) => this[name] = new EventEmitter());\r\n        treeModel.subscribeToState((state) => this.stateChange.emit(state));\r\n    }\r\n    // Will be handled in ngOnChanges\r\n    set nodes(nodes) {\r\n    }\r\n    ;\r\n    set options(options) {\r\n    }\r\n    ;\r\n    set focused(value) {\r\n        this.treeModel.setFocus(value);\r\n    }\r\n    set state(state) {\r\n        this.treeModel.setState(state);\r\n    }\r\n    onKeydown($event) {\r\n        if (!this.treeModel.isFocused)\r\n            return;\r\n        if (['input', 'textarea'].includes(document.activeElement.tagName.toLowerCase()))\r\n            return;\r\n        const focusedNode = this.treeModel.getFocusedNode();\r\n        this.treeModel.performKeyAction(focusedNode, $event);\r\n    }\r\n    onMousedown($event) {\r\n        function isOutsideClick(startElement, nodeName) {\r\n            return !startElement ? true : startElement.localName === nodeName ? false : isOutsideClick(startElement.parentElement, nodeName);\r\n        }\r\n        if (isOutsideClick($event.target, 'tree-root')) {\r\n            this.treeModel.setFocus(false);\r\n        }\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.options || changes.nodes) {\r\n            this.treeModel.setData({\r\n                options: changes.options && changes.options.currentValue,\r\n                nodes: changes.nodes && changes.nodes.currentValue,\r\n                events: this.pick(this, this.treeModel.eventNames)\r\n            });\r\n        }\r\n    }\r\n    sizeChanged() {\r\n        this.viewportComponent.setViewport();\r\n    }\r\n    pick(object, keys) {\r\n        return keys.reduce((obj, key) => {\r\n            if (object && object.hasOwnProperty(key)) {\r\n                obj[key] = object[key];\r\n            }\r\n            return obj;\r\n        }, {});\r\n    }\r\n}\nTreeComponent.ɵfac = function TreeComponent_Factory(t) { return new (t || TreeComponent)(ɵngcc0.ɵɵdirectiveInject(TreeModel), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement)); };\nTreeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeComponent, selectors: [[\"Tree\"], [\"tree-root\"]], contentQueries: function TreeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c4, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c5, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c6, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeWrapperTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeNodeFullTemplate = _t.first);\n    } }, viewQuery: function TreeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewportComponent = _t.first);\n    } }, hostBindings: function TreeComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function TreeComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); }, false, ɵngcc0.ɵɵresolveBody)(\"mousedown\", function TreeComponent_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); }, false, ɵngcc0.ɵɵresolveBody);\n    } }, inputs: { nodes: \"nodes\", options: \"options\", focused: \"focused\", state: \"state\" }, outputs: { toggleExpanded: \"toggleExpanded\", activate: \"activate\", deactivate: \"deactivate\", nodeActivate: \"nodeActivate\", nodeDeactivate: \"nodeDeactivate\", select: \"select\", deselect: \"deselect\", focus: \"focus\", blur: \"blur\", updateData: \"updateData\", initialized: \"initialized\", moveNode: \"moveNode\", copyNode: \"copyNode\", loadNodeChildren: \"loadNodeChildren\", changeFilter: \"changeFilter\", event: \"event\", stateChange: \"stateChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([TreeModel]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 6, consts: [[\"viewport\", \"\"], [1, \"angular-tree-component\"], [3, \"nodes\", \"treeModel\", \"templates\", 4, \"ngIf\"], [\"class\", \"empty-tree-drop-slot\", 3, \"dropIndex\", \"node\", 4, \"ngIf\"], [3, \"nodes\", \"treeModel\", \"templates\"], [1, \"empty-tree-drop-slot\", 3, \"dropIndex\", \"node\"]], template: function TreeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tree-viewport\", null, 0);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, TreeComponent_tree_node_collection_3_Template, 1, 8, \"tree-node-collection\", 2);\n        ɵngcc0.ɵɵtemplate(4, TreeComponent_tree_node_drop_slot_4_Template, 1, 2, \"tree-node-drop-slot\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"node-dragging\", ctx.treeDraggedElement.isDragging())(\"angular-tree-component-rtl\", ctx.treeModel.options.rtl);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.treeModel.roots);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.treeModel.isEmptyTree());\n    } }, directives: function () { return [TreeViewportComponent, ɵngcc1.NgIf, TreeNodeCollectionComponent, TreeNodeDropSlot]; }, encapsulation: 2 });\r\n/** @nocollapse */\r\nTreeComponent.ctorParameters = () => [\r\n    { type: TreeModel },\r\n    { type: TreeDraggedElement }\r\n];\r\nTreeComponent.propDecorators = {\r\n    loadingTemplate: [{ type: ContentChild, args: ['loadingTemplate', { static: false },] }],\r\n    treeNodeTemplate: [{ type: ContentChild, args: ['treeNodeTemplate', { static: false },] }],\r\n    treeNodeWrapperTemplate: [{ type: ContentChild, args: ['treeNodeWrapperTemplate', { static: false },] }],\r\n    treeNodeFullTemplate: [{ type: ContentChild, args: ['treeNodeFullTemplate', { static: false },] }],\r\n    viewportComponent: [{ type: ViewChild, args: ['viewport', { static: false },] }],\r\n    nodes: [{ type: Input }],\r\n    options: [{ type: Input }],\r\n    focused: [{ type: Input }],\r\n    state: [{ type: Input }],\r\n    toggleExpanded: [{ type: Output }],\r\n    activate: [{ type: Output }],\r\n    deactivate: [{ type: Output }],\r\n    nodeActivate: [{ type: Output }],\r\n    nodeDeactivate: [{ type: Output }],\r\n    select: [{ type: Output }],\r\n    deselect: [{ type: Output }],\r\n    focus: [{ type: Output }],\r\n    blur: [{ type: Output }],\r\n    updateData: [{ type: Output }],\r\n    initialized: [{ type: Output }],\r\n    moveNode: [{ type: Output }],\r\n    copyNode: [{ type: Output }],\r\n    loadNodeChildren: [{ type: Output }],\r\n    changeFilter: [{ type: Output }],\r\n    event: [{ type: Output }],\r\n    stateChange: [{ type: Output }],\r\n    onKeydown: [{ type: HostListener, args: ['body: keydown', ['$event'],] }],\r\n    onMousedown: [{ type: HostListener, args: ['body: mousedown', ['$event'],] }]\r\n};\n\nclass TreeNodeComponent {\r\n}\nTreeNodeComponent.ɵfac = function TreeNodeComponent_Factory(t) { return new (t || TreeNodeComponent)(); };\nTreeNodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeComponent, selectors: [[\"TreeNode\"], [\"tree-node\"]], inputs: { node: \"node\", index: \"index\", templates: \"templates\" }, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"], [3, \"class\", \"tree-node\", \"tree-node-expanded\", \"tree-node-collapsed\", \"tree-node-leaf\", \"tree-node-active\", \"tree-node-focused\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"dropIndex\", \"node\", 4, \"ngIf\"], [3, \"node\", \"index\", \"templates\"], [3, \"node\", \"templates\"], [3, \"dropIndex\", \"node\"]], template: function TreeNodeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeComponent_ng_container_0_Template, 3, 8, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: function () { return [TreeMobxAutorunDirective, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, TreeNodeWrapperComponent, TreeNodeChildrenComponent, TreeNodeDropSlot]; }, encapsulation: 2 });\r\nTreeNodeComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\n\nclass TreeNodeContent {\r\n}\nTreeNodeContent.ɵfac = function TreeNodeContent_Factory(t) { return new (t || TreeNodeContent)(); };\nTreeNodeContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeContent, selectors: [[\"tree-node-content\"]], inputs: { node: \"node\", index: \"index\", template: \"template\" }, decls: 2, vars: 7, consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function TreeNodeContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeContent_span_0_Template, 2, 1, \"span\", 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(3, _c10, ctx.node, ctx.node, ctx.index));\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });\r\nTreeNodeContent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    template: [{ type: Input }]\r\n};\n\nclass TreeNodeDropSlot {\r\n    onDrop($event) {\r\n        this.node.mouseAction('drop', $event.event, {\r\n            from: $event.element,\r\n            to: { parent: this.node, index: this.dropIndex }\r\n        });\r\n    }\r\n    allowDrop(element, $event) {\r\n        return this.node.options.allowDrop(element, { parent: this.node, index: this.dropIndex }, $event);\r\n    }\r\n}\nTreeNodeDropSlot.ɵfac = function TreeNodeDropSlot_Factory(t) { return new (t || TreeNodeDropSlot)(); };\nTreeNodeDropSlot.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeDropSlot, selectors: [[\"TreeNodeDropSlot\"], [\"tree-node-drop-slot\"]], inputs: { node: \"node\", dropIndex: \"dropIndex\" }, decls: 1, vars: 2, consts: [[1, \"node-drop-slot\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrop\"]], template: function TreeNodeDropSlot_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"treeDrop\", function TreeNodeDropSlot_Template_div_treeDrop_0_listener($event) { return ctx.onDrop($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx.allowDrop.bind(ctx))(\"allowDragoverStyling\", true);\n    } }, directives: function () { return [TreeDropDirective]; }, encapsulation: 2 });\r\nTreeNodeDropSlot.propDecorators = {\r\n    node: [{ type: Input }],\r\n    dropIndex: [{ type: Input }]\r\n};\n\nclass TreeNodeExpanderComponent {\r\n}\nTreeNodeExpanderComponent.ɵfac = function TreeNodeExpanderComponent_Factory(t) { return new (t || TreeNodeExpanderComponent)(); };\nTreeNodeExpanderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeExpanderComponent, selectors: [[\"tree-node-expander\"]], inputs: { node: \"node\" }, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"], [\"class\", \"toggle-children-wrapper\", 3, \"toggle-children-wrapper-expanded\", \"toggle-children-wrapper-collapsed\", \"click\", 4, \"ngIf\"], [\"class\", \"toggle-children-placeholder\", 4, \"ngIf\"], [1, \"toggle-children-wrapper\", 3, \"click\"], [1, \"toggle-children\"], [1, \"toggle-children-placeholder\"]], template: function TreeNodeExpanderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeExpanderComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: [TreeMobxAutorunDirective, ɵngcc1.NgIf], encapsulation: 2 });\r\nTreeNodeExpanderComponent.propDecorators = {\r\n    node: [{ type: Input }]\r\n};\n\nclass TreeNodeChildrenComponent {\r\n}\nTreeNodeChildrenComponent.ɵfac = function TreeNodeChildrenComponent_Factory(t) { return new (t || TreeNodeChildrenComponent)(); };\nTreeNodeChildrenComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeChildrenComponent, selectors: [[\"tree-node-children\"]], inputs: { node: \"node\", templates: \"templates\" }, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"], [3, \"tree-children\", \"tree-children-no-padding\", 4, \"treeAnimateOpen\", \"treeAnimateOpenSpeed\", \"treeAnimateOpenAcceleration\", \"treeAnimateOpenEnabled\"], [3, \"nodes\", \"templates\", \"treeModel\", 4, \"ngIf\"], [\"class\", \"tree-node-loading\", 3, \"padding-left\", \"template\", \"node\", 4, \"ngIf\"], [3, \"nodes\", \"templates\", \"treeModel\"], [1, \"tree-node-loading\", 3, \"template\", \"node\"]], template: function TreeNodeChildrenComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeChildrenComponent_ng_container_0_Template, 2, 4, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: function () { return [TreeMobxAutorunDirective, TreeAnimateOpenDirective, ɵngcc1.NgIf, TreeNodeCollectionComponent, LoadingComponent]; }, encapsulation: 2 });\r\nTreeNodeChildrenComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\n\n// Re-export mobx operators to be able to use inside components with AOT:\r\nfunction actionInternal(...args) {\r\n    return action$1(...args);\r\n}\r\nconst action = Object.assign(actionInternal, action$1);\r\nfunction computedInternal(...args) {\r\n    return computed$1(...args);\r\n}\r\nconst computed = Object.assign(computedInternal, computed$1);\r\nfunction observableInternal(...args) {\r\n    return observable$1(...args);\r\n}\r\nconst observable = Object.assign(observableInternal, observable$1);\n\nvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$3 = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nclass TreeNodeCollectionComponent {\r\n    constructor() {\r\n        this._dispose = [];\r\n    }\r\n    get nodes() {\r\n        return this._nodes;\r\n    }\r\n    set nodes(nodes) {\r\n        this.setNodes(nodes);\r\n    }\r\n    get marginTop() {\r\n        const firstNode = this.viewportNodes && this.viewportNodes.length && this.viewportNodes[0];\r\n        const relativePosition = firstNode && firstNode.parent\r\n            ? firstNode.position -\r\n                firstNode.parent.position -\r\n                firstNode.parent.getSelfHeight()\r\n            : 0;\r\n        return `${relativePosition}px`;\r\n    }\r\n    setNodes(nodes) {\r\n        this._nodes = nodes;\r\n    }\r\n    ngOnInit() {\r\n        this.virtualScroll = this.treeModel.virtualScroll;\r\n        this._dispose = [\r\n            // return node indexes so we can compare structurally,\r\n            reaction(() => {\r\n                return this.virtualScroll\r\n                    .getViewportNodes(this.nodes)\r\n                    .map(n => n.index);\r\n            }, nodeIndexes => {\r\n                this.viewportNodes = nodeIndexes.map(i => this.nodes[i]);\r\n            }, { compareStructural: true, fireImmediately: true }),\r\n            reaction(() => this.nodes, nodes => {\r\n                this.viewportNodes = this.virtualScroll.getViewportNodes(nodes);\r\n            })\r\n        ];\r\n    }\r\n    ngOnDestroy() {\r\n        this._dispose.forEach(d => d());\r\n    }\r\n    trackNode(index, node) {\r\n        return node.id;\r\n    }\r\n}\nTreeNodeCollectionComponent.ɵfac = function TreeNodeCollectionComponent_Factory(t) { return new (t || TreeNodeCollectionComponent)(); };\nTreeNodeCollectionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeCollectionComponent, selectors: [[\"tree-node-collection\"]], inputs: { nodes: \"nodes\", treeModel: \"treeModel\", templates: \"templates\" }, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"], [3, \"node\", \"index\", \"templates\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"node\", \"index\", \"templates\"]], template: function TreeNodeCollectionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeCollectionComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: [TreeMobxAutorunDirective, ɵngcc1.NgForOf, TreeNodeComponent], encapsulation: 2 });\r\nTreeNodeCollectionComponent.propDecorators = {\r\n    nodes: [{ type: Input }],\r\n    treeModel: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\r\n__decorate$3([\r\n    observable,\r\n    __metadata$3(\"design:type\", Object)\r\n], TreeNodeCollectionComponent.prototype, \"_nodes\", void 0);\r\n__decorate$3([\r\n    observable,\r\n    __metadata$3(\"design:type\", Array)\r\n], TreeNodeCollectionComponent.prototype, \"viewportNodes\", void 0);\r\n__decorate$3([\r\n    computed,\r\n    __metadata$3(\"design:type\", String),\r\n    __metadata$3(\"design:paramtypes\", [])\r\n], TreeNodeCollectionComponent.prototype, \"marginTop\", null);\r\n__decorate$3([\r\n    action,\r\n    __metadata$3(\"design:type\", Function),\r\n    __metadata$3(\"design:paramtypes\", [Object]),\r\n    __metadata$3(\"design:returntype\", void 0)\r\n], TreeNodeCollectionComponent.prototype, \"setNodes\", null);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeMobxAutorunDirective, [{\n        type: Directive,\n        args: [{ selector: '[treeMobxAutorun]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, { treeMobxAutorun: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeModel, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDraggedElement, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeVirtualScroll, [{\n        type: Injectable\n    }], function () { return [{ type: TreeModel }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'tree-loading-component',\n                template: `\r\n    <span *ngIf=\"!template\">loading...</span>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"template\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: node }\">\r\n    </ng-container>\r\n  `\n            }]\n    }], null, { template: [{\n            type: Input\n        }], node: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeViewportComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-viewport',\n                providers: [TreeVirtualScroll],\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.height]=\"getTotalHeight()\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </ng-container>\r\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: TreeVirtualScroll }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'Tree, tree-root',\n                providers: [TreeModel],\n                template: `\r\n      <tree-viewport #viewport>\r\n          <div\r\n                  class=\"angular-tree-component\"\r\n                  [class.node-dragging]=\"treeDraggedElement.isDragging()\"\r\n                  [class.angular-tree-component-rtl]=\"treeModel.options.rtl\">\r\n              <tree-node-collection\r\n                      *ngIf=\"treeModel.roots\"\r\n                      [nodes]=\"treeModel.roots\"\r\n                      [treeModel]=\"treeModel\"\r\n                      [templates]=\"{\r\n            loadingTemplate: loadingTemplate,\r\n            treeNodeTemplate: treeNodeTemplate,\r\n            treeNodeWrapperTemplate: treeNodeWrapperTemplate,\r\n            treeNodeFullTemplate: treeNodeFullTemplate\r\n          }\">\r\n              </tree-node-collection>\r\n              <tree-node-drop-slot\r\n                      class=\"empty-tree-drop-slot\"\r\n                      *ngIf=\"treeModel.isEmptyTree()\"\r\n                      [dropIndex]=\"0\"\r\n                      [node]=\"treeModel.virtualRoot\">\r\n              </tree-node-drop-slot>\r\n          </div>\r\n      </tree-viewport>\r\n  `\n            }]\n    }], function () { return [{ type: TreeModel }, { type: TreeDraggedElement }]; }, { nodes: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], focused: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }], onKeydown: [{\n            type: HostListener,\n            args: ['body: keydown', ['$event']]\n        }], onMousedown: [{\n            type: HostListener,\n            args: ['body: mousedown', ['$event']]\n        }], loadingTemplate: [{\n            type: ContentChild,\n            args: ['loadingTemplate', { static: false }]\n        }], treeNodeTemplate: [{\n            type: ContentChild,\n            args: ['treeNodeTemplate', { static: false }]\n        }], treeNodeWrapperTemplate: [{\n            type: ContentChild,\n            args: ['treeNodeWrapperTemplate', { static: false }]\n        }], treeNodeFullTemplate: [{\n            type: ContentChild,\n            args: ['treeNodeFullTemplate', { static: false }]\n        }], viewportComponent: [{\n            type: ViewChild,\n            args: ['viewport', { static: false }]\n        }], toggleExpanded: [{\n            type: Output\n        }], activate: [{\n            type: Output\n        }], deactivate: [{\n            type: Output\n        }], nodeActivate: [{\n            type: Output\n        }], nodeDeactivate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], deselect: [{\n            type: Output\n        }], focus: [{\n            type: Output\n        }], blur: [{\n            type: Output\n        }], updateData: [{\n            type: Output\n        }], initialized: [{\n            type: Output\n        }], moveNode: [{\n            type: Output\n        }], copyNode: [{\n            type: Output\n        }], loadNodeChildren: [{\n            type: Output\n        }], changeFilter: [{\n            type: Output\n        }], event: [{\n            type: Output\n        }], stateChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'TreeNode, tree-node',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        *ngIf=\"!templates.treeNodeFullTemplate\"\r\n        [class]=\"node.getClass()\"\r\n        [class.tree-node]=\"true\"\r\n        [class.tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\r\n        [class.tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\r\n        [class.tree-node-leaf]=\"node.isLeaf\"\r\n        [class.tree-node-active]=\"node.isActive\"\r\n        [class.tree-node-focused]=\"node.isFocused\"\r\n      >\r\n        <tree-node-drop-slot\r\n          *ngIf=\"index === 0\"\r\n          [dropIndex]=\"node.index\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n\r\n        <tree-node-wrapper\r\n          [node]=\"node\"\r\n          [index]=\"index\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-wrapper>\r\n\r\n        <tree-node-children\r\n          [node]=\"node\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-children>\r\n        <tree-node-drop-slot\r\n          [dropIndex]=\"node.index + 1\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n      </div>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"templates.treeNodeFullTemplate\"\r\n        [ngTemplateOutletContext]=\"{\r\n          $implicit: node,\r\n          node: node,\r\n          index: index,\r\n          templates: templates\r\n        }\"\r\n      >\r\n      </ng-container>\r\n    </ng-container>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeContent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-content',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n  <span *ngIf=\"!template\">{{ node.displayField }}</span>\r\n  <ng-container\r\n    [ngTemplateOutlet]=\"template\"\r\n    [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index }\">\r\n  </ng-container>`\n            }]\n    }], null, { node: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], template: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeDropSlot, [{\n        type: Component,\n        args: [{\n                selector: 'TreeNodeDropSlot, tree-node-drop-slot',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <div\r\n      class=\"node-drop-slot\"\r\n      (treeDrop)=\"onDrop($event)\"\r\n      [treeAllowDrop]=\"allowDrop.bind(this)\"\r\n      [allowDragoverStyling]=\"true\">\r\n    </div>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }], dropIndex: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeExpanderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-expander',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <span\r\n        *ngIf=\"node.hasChildren\"\r\n        [class.toggle-children-wrapper-expanded]=\"node.isExpanded\"\r\n        [class.toggle-children-wrapper-collapsed]=\"node.isCollapsed\"\r\n        class=\"toggle-children-wrapper\"\r\n        (click)=\"node.mouseAction('expanderClick', $event)\"\r\n      >\r\n        <span class=\"toggle-children\"></span>\r\n      </span>\r\n      <span *ngIf=\"!node.hasChildren\" class=\"toggle-children-placeholder\">\r\n      </span>\r\n    </ng-container>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeChildrenComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-children',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        [class.tree-children]=\"true\"\r\n        [class.tree-children-no-padding]=\"node.options.levelPadding\"\r\n        *treeAnimateOpen=\"\r\n          node.isExpanded;\r\n          speed: node.options.animateSpeed;\r\n          acceleration: node.options.animateAcceleration;\r\n          enabled: node.options.animateExpand\r\n        \"\r\n      >\r\n        <tree-node-collection\r\n          *ngIf=\"node.children\"\r\n          [nodes]=\"node.children\"\r\n          [templates]=\"templates\"\r\n          [treeModel]=\"node.treeModel\"\r\n        >\r\n        </tree-node-collection>\r\n        <tree-loading-component\r\n          [style.padding-left]=\"node.getNodePadding()\"\r\n          class=\"tree-node-loading\"\r\n          *ngIf=\"!node.children\"\r\n          [template]=\"templates.loadingTemplate\"\r\n          [node]=\"node\"\r\n        ></tree-loading-component>\r\n      </div>\r\n    </ng-container>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeCollectionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-collection',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.margin-top]=\"marginTop\">\r\n        <tree-node\r\n          *ngFor=\"let node of viewportNodes; let i = index; trackBy: trackNode\"\r\n          [node]=\"node\"\r\n          [index]=\"i\"\r\n          [templates]=\"templates\"\r\n        >\r\n        </tree-node>\r\n      </div>\r\n    </ng-container>\r\n  `\n            }]\n    }], function () { return []; }, { nodes: [{\n            type: Input\n        }], treeModel: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }] }); })();\n\nclass TreeNodeWrapperComponent {\r\n}\nTreeNodeWrapperComponent.ɵfac = function TreeNodeWrapperComponent_Factory(t) { return new (t || TreeNodeWrapperComponent)(); };\nTreeNodeWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeWrapperComponent, selectors: [[\"tree-node-wrapper\"]], inputs: { node: \"node\", index: \"index\", templates: \"templates\" }, decls: 2, vars: 8, consts: [[\"class\", \"node-wrapper\", 3, \"padding-left\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"node-wrapper\"], [3, \"node\", 4, \"ngIf\"], [3, \"node\"], [1, \"node-content-wrapper\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrag\", \"treeDragEnabled\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"contextmenu\", \"treeDrop\", \"treeDropDragOver\", \"treeDropDragLeave\", \"treeDropDragEnter\"], [3, \"node\", \"index\", \"template\"]], template: function TreeNodeWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeWrapperComponent_div_0_Template, 5, 15, \"div\", 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.templates.treeNodeWrapperTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templates.treeNodeWrapperTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(3, _c9, ctx.node, ctx.node, ctx.index, ctx.templates));\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, TreeNodeExpanderComponent, TreeDragDirective, TreeDropDirective, TreeNodeContent, TreeNodeCheckboxComponent]; }, encapsulation: 2 });\r\nTreeNodeWrapperComponent.propDecorators = {\r\n    node: [{ type: Input }],\r\n    index: [{ type: Input }],\r\n    templates: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeWrapperComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-wrapper',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n      <div *ngIf=\"!templates.treeNodeWrapperTemplate\" class=\"node-wrapper\" [style.padding-left]=\"node.getNodePadding()\">\r\n          <tree-node-checkbox *ngIf=\"node.options.useCheckbox\" [node]=\"node\"></tree-node-checkbox>\r\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\r\n          <div class=\"node-content-wrapper\"\r\n               [class.node-content-wrapper-active]=\"node.isActive\"\r\n               [class.node-content-wrapper-focused]=\"node.isFocused\"\r\n               (click)=\"node.mouseAction('click', $event)\"\r\n               (dblclick)=\"node.mouseAction('dblClick', $event)\"\r\n               (mouseover)=\"node.mouseAction('mouseOver', $event)\"\r\n               (mouseout)=\"node.mouseAction('mouseOut', $event)\"\r\n               (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\r\n               (treeDrop)=\"node.onDrop($event)\"\r\n               (treeDropDragOver)=\"node.mouseAction('dragOver', $event)\"\r\n               (treeDropDragLeave)=\"node.mouseAction('dragLeave', $event)\"\r\n               (treeDropDragEnter)=\"node.mouseAction('dragEnter', $event)\"\r\n               [treeAllowDrop]=\"node.allowDrop\"\r\n               [allowDragoverStyling]=\"node.allowDragoverStyling()\"\r\n               [treeDrag]=\"node\"\r\n               [treeDragEnabled]=\"node.allowDrag()\">\r\n\r\n              <tree-node-content [node]=\"node\" [index]=\"index\" [template]=\"templates.treeNodeTemplate\">\r\n              </tree-node-content>\r\n          </div>\r\n      </div>\r\n      <ng-container\r\n              [ngTemplateOutlet]=\"templates.treeNodeWrapperTemplate\"\r\n              [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index, templates: templates }\">\r\n      </ng-container>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], templates: [{\n            type: Input\n        }] }); })();\n\nclass TreeNodeCheckboxComponent {\r\n}\nTreeNodeCheckboxComponent.ɵfac = function TreeNodeCheckboxComponent_Factory(t) { return new (t || TreeNodeCheckboxComponent)(); };\nTreeNodeCheckboxComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TreeNodeCheckboxComponent, selectors: [[\"tree-node-checkbox\"]], inputs: { node: \"node\" }, decls: 1, vars: 2, consts: [[4, \"treeMobxAutorun\"], [\"type\", \"checkbox\", 1, \"tree-node-checkbox\", 3, \"checked\", \"indeterminate\", \"click\"]], template: function TreeNodeCheckboxComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeCheckboxComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c1));\n    } }, directives: [TreeMobxAutorunDirective], encapsulation: 2 });\r\nTreeNodeCheckboxComponent.propDecorators = {\r\n    node: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeNodeCheckboxComponent, [{\n        type: Component,\n        args: [{\n                selector: 'tree-node-checkbox',\n                encapsulation: ViewEncapsulation.None,\n                template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <input\r\n        class=\"tree-node-checkbox\"\r\n        type=\"checkbox\"\r\n        (click)=\"node.mouseAction('checkboxClick', $event)\"\r\n        [checked]=\"node.isSelected\"\r\n        [indeterminate]=\"node.isPartiallySelected\"\r\n      />\r\n    </ng-container>\r\n  `\n            }]\n    }], null, { node: [{\n            type: Input\n        }] }); })();\n\nconst DRAG_OVER_CLASS = 'is-dragging-over';\r\nconst DRAG_DISABLED_CLASS = 'is-dragging-over-disabled';\r\nclass TreeDropDirective {\r\n    constructor(el, renderer, treeDraggedElement, ngZone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        this.ngZone = ngZone;\r\n        this.allowDragoverStyling = true;\r\n        this.onDropCallback = new EventEmitter();\r\n        this.onDragOverCallback = new EventEmitter();\r\n        this.onDragLeaveCallback = new EventEmitter();\r\n        this.onDragEnterCallback = new EventEmitter();\r\n        this._allowDrop = (element, $event) => true;\r\n        this.dragOverEventHandler = this.onDragOver.bind(this);\r\n        this.dragEnterEventHandler = this.onDragEnter.bind(this);\r\n        this.dragLeaveEventHandler = this.onDragLeave.bind(this);\r\n    }\r\n    set treeAllowDrop(allowDrop) {\r\n        if (allowDrop instanceof Function) {\r\n            this._allowDrop = allowDrop;\r\n        }\r\n        else\r\n            this._allowDrop = (element, $event) => allowDrop;\r\n    }\r\n    allowDrop($event) {\r\n        return this._allowDrop(this.treeDraggedElement.get(), $event);\r\n    }\r\n    ngAfterViewInit() {\r\n        let el = this.el.nativeElement;\r\n        this.ngZone.runOutsideAngular(() => {\r\n            el.addEventListener('dragover', this.dragOverEventHandler);\r\n            el.addEventListener('dragenter', this.dragEnterEventHandler);\r\n            el.addEventListener('dragleave', this.dragLeaveEventHandler);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        let el = this.el.nativeElement;\r\n        el.removeEventListener('dragover', this.dragOverEventHandler);\r\n        el.removeEventListener('dragenter', this.dragEnterEventHandler);\r\n        el.removeEventListener('dragleave', this.dragLeaveEventHandler);\r\n    }\r\n    onDragOver($event) {\r\n        if (!this.allowDrop($event)) {\r\n            if (this.allowDragoverStyling) {\r\n                return this.addDisabledClass();\r\n            }\r\n            return;\r\n        }\r\n        this.onDragOverCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        $event.preventDefault();\r\n        if (this.allowDragoverStyling) {\r\n            this.addClass();\r\n        }\r\n    }\r\n    onDragEnter($event) {\r\n        if (!this.allowDrop($event))\r\n            return;\r\n        $event.preventDefault();\r\n        this.onDragEnterCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n    }\r\n    onDragLeave($event) {\r\n        if (!this.allowDrop($event)) {\r\n            if (this.allowDragoverStyling) {\r\n                return this.removeDisabledClass();\r\n            }\r\n            return;\r\n        }\r\n        this.onDragLeaveCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        if (this.allowDragoverStyling) {\r\n            this.removeClass();\r\n        }\r\n    }\r\n    onDrop($event) {\r\n        if (!this.allowDrop($event))\r\n            return;\r\n        $event.preventDefault();\r\n        this.onDropCallback.emit({ event: $event, element: this.treeDraggedElement.get() });\r\n        if (this.allowDragoverStyling) {\r\n            this.removeClass();\r\n        }\r\n        this.treeDraggedElement.set(null);\r\n    }\r\n    addClass() {\r\n        this.renderer.addClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n    }\r\n    removeClass() {\r\n        this.renderer.removeClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n    }\r\n    addDisabledClass() {\r\n        this.renderer.addClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n    }\r\n    removeDisabledClass() {\r\n        this.renderer.removeClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n    }\r\n}\nTreeDropDirective.ɵfac = function TreeDropDirective_Factory(t) { return new (t || TreeDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nTreeDropDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TreeDropDirective, selectors: [[\"\", \"treeDrop\", \"\"]], hostBindings: function TreeDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function TreeDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); });\n    } }, inputs: { allowDragoverStyling: \"allowDragoverStyling\", treeAllowDrop: \"treeAllowDrop\" }, outputs: { onDropCallback: \"treeDrop\", onDragOverCallback: \"treeDropDragOver\", onDragLeaveCallback: \"treeDropDragLeave\", onDragEnterCallback: \"treeDropDragEnter\" } });\r\n/** @nocollapse */\r\nTreeDropDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: TreeDraggedElement },\r\n    { type: NgZone }\r\n];\r\nTreeDropDirective.propDecorators = {\r\n    allowDragoverStyling: [{ type: Input }],\r\n    onDropCallback: [{ type: Output, args: ['treeDrop',] }],\r\n    onDragOverCallback: [{ type: Output, args: ['treeDropDragOver',] }],\r\n    onDragLeaveCallback: [{ type: Output, args: ['treeDropDragLeave',] }],\r\n    onDragEnterCallback: [{ type: Output, args: ['treeDropDragEnter',] }],\r\n    treeAllowDrop: [{ type: Input }],\r\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDropDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[treeDrop]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: TreeDraggedElement }, { type: ɵngcc0.NgZone }]; }, { allowDragoverStyling: [{\n            type: Input\n        }], onDropCallback: [{\n            type: Output,\n            args: ['treeDrop']\n        }], onDragOverCallback: [{\n            type: Output,\n            args: ['treeDropDragOver']\n        }], onDragLeaveCallback: [{\n            type: Output,\n            args: ['treeDropDragLeave']\n        }], onDragEnterCallback: [{\n            type: Output,\n            args: ['treeDropDragEnter']\n        }], treeAllowDrop: [{\n            type: Input\n        }], onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }] }); })();\n\nconst DRAG_OVER_CLASS$1 = 'is-dragging-over';\r\nclass TreeDragDirective {\r\n    constructor(el, renderer, treeDraggedElement, ngZone) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.treeDraggedElement = treeDraggedElement;\r\n        this.ngZone = ngZone;\r\n        this.dragEventHandler = this.onDrag.bind(this);\r\n    }\r\n    ngAfterViewInit() {\r\n        let el = this.el.nativeElement;\r\n        this.ngZone.runOutsideAngular(() => {\r\n            el.addEventListener('drag', this.dragEventHandler);\r\n        });\r\n    }\r\n    ngDoCheck() {\r\n        this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false');\r\n    }\r\n    ngOnDestroy() {\r\n        let el = this.el.nativeElement;\r\n        el.removeEventListener('drag', this.dragEventHandler);\r\n    }\r\n    onDragStart(ev) {\r\n        // setting the data is required by firefox\r\n        ev.dataTransfer.setData('text', ev.target.id);\r\n        this.treeDraggedElement.set(this.draggedElement);\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('dragStart', ev);\r\n        }\r\n    }\r\n    onDrag(ev) {\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('drag', ev);\r\n        }\r\n    }\r\n    onDragEnd() {\r\n        if (this.draggedElement.mouseAction) {\r\n            this.draggedElement.mouseAction('dragEnd');\r\n        }\r\n        this.treeDraggedElement.set(null);\r\n    }\r\n}\nTreeDragDirective.ɵfac = function TreeDragDirective_Factory(t) { return new (t || TreeDragDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(TreeDraggedElement), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nTreeDragDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TreeDragDirective, selectors: [[\"\", \"treeDrag\", \"\"]], hostBindings: function TreeDragDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function TreeDragDirective_dragstart_HostBindingHandler($event) { return ctx.onDragStart($event); })(\"dragend\", function TreeDragDirective_dragend_HostBindingHandler() { return ctx.onDragEnd(); });\n    } }, inputs: { draggedElement: [\"treeDrag\", \"draggedElement\"], treeDragEnabled: \"treeDragEnabled\" } });\r\n/** @nocollapse */\r\nTreeDragDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: TreeDraggedElement },\r\n    { type: NgZone }\r\n];\r\nTreeDragDirective.propDecorators = {\r\n    draggedElement: [{ type: Input, args: ['treeDrag',] }],\r\n    treeDragEnabled: [{ type: Input }],\r\n    onDragStart: [{ type: HostListener, args: ['dragstart', ['$event'],] }],\r\n    onDragEnd: [{ type: HostListener, args: ['dragend',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeDragDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[treeDrag]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: TreeDraggedElement }, { type: ɵngcc0.NgZone }]; }, { onDragStart: [{\n            type: HostListener,\n            args: ['dragstart', ['$event']]\n        }], onDragEnd: [{\n            type: HostListener,\n            args: ['dragend']\n        }], draggedElement: [{\n            type: Input,\n            args: ['treeDrag']\n        }], treeDragEnabled: [{\n            type: Input\n        }] }); })();\n\nconst EASE_ACCELERATION = 1.005;\r\nclass TreeAnimateOpenDirective {\r\n    constructor(renderer, templateRef, viewContainerRef) {\r\n        this.renderer = renderer;\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n    }\r\n    set isOpen(value) {\r\n        if (value) {\r\n            this._show();\r\n            if (this.isEnabled && this._isOpen === false) {\r\n                this._animateOpen();\r\n            }\r\n        }\r\n        else {\r\n            this.isEnabled ? this._animateClose() : this._hide();\r\n        }\r\n        this._isOpen = !!value;\r\n    }\r\n    ;\r\n    _show() {\r\n        if (this.innerElement)\r\n            return;\r\n        // create child view\r\n        this.innerElement = this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0];\r\n    }\r\n    _hide() {\r\n        this.viewContainerRef.clear();\r\n        this.innerElement = null;\r\n    }\r\n    _animateOpen() {\r\n        let delta = this.animateSpeed;\r\n        let ease = this.animateAcceleration;\r\n        let maxHeight = 0;\r\n        // set height to 0\r\n        this.renderer.setStyle(this.innerElement, 'max-height', `0`);\r\n        // increase maxHeight until height doesn't change\r\n        setTimeout(() => {\r\n            const i = setInterval(() => {\r\n                if (!this._isOpen || !this.innerElement)\r\n                    return clearInterval(i);\r\n                maxHeight += delta;\r\n                const roundedMaxHeight = Math.round(maxHeight);\r\n                this.renderer.setStyle(this.innerElement, 'max-height', `${roundedMaxHeight}px`);\r\n                const height = this.innerElement.getBoundingClientRect ? this.innerElement.getBoundingClientRect().height : 0; // TBD use renderer\r\n                delta *= ease;\r\n                ease *= EASE_ACCELERATION;\r\n                if (height < roundedMaxHeight) {\r\n                    // Make maxHeight auto because animation finished and container might change height later on\r\n                    this.renderer.setStyle(this.innerElement, 'max-height', null);\r\n                    clearInterval(i);\r\n                }\r\n            }, 17);\r\n        });\r\n    }\r\n    _animateClose() {\r\n        if (!this.innerElement)\r\n            return;\r\n        let delta = this.animateSpeed;\r\n        let ease = this.animateAcceleration;\r\n        let height = this.innerElement.getBoundingClientRect().height; // TBD use renderer\r\n        // slowly decrease maxHeight to 0, starting from current height\r\n        const i = setInterval(() => {\r\n            if (this._isOpen || !this.innerElement)\r\n                return clearInterval(i);\r\n            height -= delta;\r\n            this.renderer.setStyle(this.innerElement, 'max-height', `${height}px`);\r\n            delta *= ease;\r\n            ease *= EASE_ACCELERATION;\r\n            if (height <= 0) {\r\n                // after animation complete - remove child element\r\n                this.viewContainerRef.clear();\r\n                this.innerElement = null;\r\n                clearInterval(i);\r\n            }\r\n        }, 17);\r\n    }\r\n}\nTreeAnimateOpenDirective.ɵfac = function TreeAnimateOpenDirective_Factory(t) { return new (t || TreeAnimateOpenDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nTreeAnimateOpenDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TreeAnimateOpenDirective, selectors: [[\"\", \"treeAnimateOpen\", \"\"]], inputs: { isOpen: [\"treeAnimateOpen\", \"isOpen\"], animateSpeed: [\"treeAnimateOpenSpeed\", \"animateSpeed\"], animateAcceleration: [\"treeAnimateOpenAcceleration\", \"animateAcceleration\"], isEnabled: [\"treeAnimateOpenEnabled\", \"isEnabled\"] } });\r\n/** @nocollapse */\r\nTreeAnimateOpenDirective.ctorParameters = () => [\r\n    { type: Renderer2 },\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef }\r\n];\r\nTreeAnimateOpenDirective.propDecorators = {\r\n    animateSpeed: [{ type: Input, args: ['treeAnimateOpenSpeed',] }],\r\n    animateAcceleration: [{ type: Input, args: ['treeAnimateOpenAcceleration',] }],\r\n    isEnabled: [{ type: Input, args: ['treeAnimateOpenEnabled',] }],\r\n    isOpen: [{ type: Input, args: ['treeAnimateOpen',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeAnimateOpenDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[treeAnimateOpen]'\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, { isOpen: [{\n            type: Input,\n            args: ['treeAnimateOpen']\n        }], animateSpeed: [{\n            type: Input,\n            args: ['treeAnimateOpenSpeed']\n        }], animateAcceleration: [{\n            type: Input,\n            args: ['treeAnimateOpenAcceleration']\n        }], isEnabled: [{\n            type: Input,\n            args: ['treeAnimateOpenEnabled']\n        }] }); })();\n\nclass TreeModule {\r\n}\nTreeModule.ɵfac = function TreeModule_Factory(t) { return new (t || TreeModule)(); };\nTreeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TreeModule });\nTreeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    TreeComponent,\n                    TreeNodeComponent,\n                    TreeNodeContent,\n                    LoadingComponent,\n                    TreeDropDirective,\n                    TreeDragDirective,\n                    TreeNodeExpanderComponent,\n                    TreeNodeChildrenComponent,\n                    TreeNodeDropSlot,\n                    TreeNodeCollectionComponent,\n                    TreeViewportComponent,\n                    TreeNodeWrapperComponent,\n                    TreeNodeCheckboxComponent,\n                    TreeAnimateOpenDirective,\n                    TreeMobxAutorunDirective\n                ],\n                exports: [\n                    TreeComponent,\n                    TreeNodeComponent,\n                    TreeNodeContent,\n                    LoadingComponent,\n                    TreeDropDirective,\n                    TreeDragDirective,\n                    TreeNodeExpanderComponent,\n                    TreeNodeChildrenComponent,\n                    TreeNodeDropSlot,\n                    TreeNodeCollectionComponent,\n                    TreeViewportComponent,\n                    TreeNodeWrapperComponent,\n                    TreeNodeCheckboxComponent,\n                    TreeAnimateOpenDirective,\n                    TreeMobxAutorunDirective\n                ],\n                imports: [CommonModule],\n                providers: []\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TreeModule, { declarations: function () { return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective]; } }); })();\n\n/*\r\n * Public API Surface of angular-tree-component\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { KEYS, LoadingComponent, TREE_ACTIONS, TreeAnimateOpenDirective, TreeComponent, TreeDragDirective, TreeDraggedElement, TreeDropDirective, TreeModel, TreeModule, TreeNode, TreeNodeCheckboxComponent, TreeNodeChildrenComponent, TreeNodeCollectionComponent, TreeNodeComponent, TreeNodeContent, TreeNodeDropSlot, TreeNodeExpanderComponent, TreeNodeWrapperComponent, TreeViewportComponent, TreeVirtualScroll, actionInternal as ɵa, action as ɵb, computed as ɵc, observable as ɵd, TreeMobxAutorunDirective as ɵe };\n\n"]},"metadata":{},"sourceType":"module"}