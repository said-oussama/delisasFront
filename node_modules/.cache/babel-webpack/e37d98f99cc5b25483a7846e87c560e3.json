{"ast":null,"code":"/*!\nFullCalendar v5.7.2\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './main.css';\nimport { hasBgRendering, Splitter, createFormatter, createElement, ViewContextType, RenderHook, BaseComponent, createRef, diffDays, buildNavLinkData, WeekNumberRoot, getStickyHeaderDates, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorRoot, renderScrollShim, DateComponent, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkRoot, setRef, SegHierarchy, groupIntersectingEntries, buildEntryKey, binarySearch, getEntrySpanEnd, StandardEvent, DayCellContent, Fragment, getSegMeta, memoize, sortEventSegs, DayCellRoot, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, intersectRanges, Slicer, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign } from 'tslib';\nimport { DayTable } from '@fullcalendar/daygrid';\n\nvar AllDaySplitter =\n/** @class */\nfunction (_super) {\n  __extends(AllDaySplitter, _super);\n\n  function AllDaySplitter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AllDaySplitter.prototype.getKeyInfo = function () {\n    return {\n      allDay: {},\n      timed: {}\n    };\n  };\n\n  AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n    if (dateSpan.allDay) {\n      return ['allDay'];\n    }\n\n    return ['timed'];\n  };\n\n  AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {\n    if (!eventDef.allDay) {\n      return ['timed'];\n    }\n\n    if (hasBgRendering(eventDef)) {\n      return ['timed', 'allDay'];\n    }\n\n    return ['allDay'];\n  };\n\n  return AllDaySplitter;\n}(Splitter);\n\nvar DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'short'\n});\n\nfunction TimeColsAxisCell(props) {\n  var classNames = ['fc-timegrid-slot', 'fc-timegrid-slot-label', props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor'];\n  return createElement(ViewContextType.Consumer, null, function (context) {\n    if (!props.isLabeled) {\n      return createElement(\"td\", {\n        className: classNames.join(' '),\n        \"data-time\": props.isoTimeStr\n      });\n    }\n\n    var dateEnv = context.dateEnv,\n        options = context.options,\n        viewApi = context.viewApi;\n    var labelFormat = // TODO: fully pre-parse\n    options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT : Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) : createFormatter(options.slotLabelFormat);\n    var hookProps = {\n      level: 0,\n      time: props.time,\n      date: dateEnv.toDate(props.date),\n      view: viewApi,\n      text: dateEnv.format(props.date, labelFormat)\n    };\n    return createElement(RenderHook, {\n      hookProps: hookProps,\n      classNames: options.slotLabelClassNames,\n      content: options.slotLabelContent,\n      defaultContent: renderInnerContent,\n      didMount: options.slotLabelDidMount,\n      willUnmount: options.slotLabelWillUnmount\n    }, function (rootElRef, customClassNames, innerElRef, innerContent) {\n      return createElement(\"td\", {\n        ref: rootElRef,\n        className: classNames.concat(customClassNames).join(' '),\n        \"data-time\": props.isoTimeStr\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion\",\n        ref: innerElRef\n      }, innerContent)));\n    });\n  });\n}\n\nfunction renderInnerContent(props) {\n  return props.text;\n}\n\nvar TimeBodyAxis =\n/** @class */\nfunction (_super) {\n  __extends(TimeBodyAxis, _super);\n\n  function TimeBodyAxis() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeBodyAxis.prototype.render = function () {\n    return this.props.slatMetas.map(function (slatMeta) {\n      return createElement(\"tr\", {\n        key: slatMeta.key\n      }, createElement(TimeColsAxisCell, __assign({}, slatMeta)));\n    });\n  };\n\n  return TimeBodyAxis;\n}(BaseComponent);\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'short'\n});\nvar AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\n\nvar TimeColsView =\n/** @class */\nfunction (_super) {\n  __extends(TimeColsView, _super);\n\n  function TimeColsView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n\n    _this.headerElRef = createRef();\n    _this.rootElRef = createRef();\n    _this.scrollerElRef = createRef();\n    _this.state = {\n      slatCoords: null\n    };\n\n    _this.handleScrollTopRequest = function (scrollTop) {\n      var scrollerEl = _this.scrollerElRef.current;\n\n      if (scrollerEl) {\n        // TODO: not sure how this could ever be null. weirdness with the reducer\n        scrollerEl.scrollTop = scrollTop;\n      }\n    };\n    /* Header Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    _this.renderHeadAxis = function (rowKey, frameHeight) {\n      if (frameHeight === void 0) {\n        frameHeight = '';\n      }\n\n      var options = _this.context.options;\n      var dateProfile = _this.props.dateProfile;\n      var range = dateProfile.renderRange;\n      var dayCnt = diffDays(range.start, range.end);\n      var navLinkAttrs = options.navLinks && dayCnt === 1 // only do in day views (to avoid doing in week views that dont need it)\n      ? {\n        'data-navlink': buildNavLinkData(range.start, 'week'),\n        tabIndex: 0\n      } : {};\n\n      if (options.weekNumbers && rowKey === 'day') {\n        return createElement(WeekNumberRoot, {\n          date: range.start,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }, function (rootElRef, classNames, innerElRef, innerContent) {\n          return createElement(\"th\", {\n            ref: rootElRef,\n            className: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'].concat(classNames).join(' ')\n          }, createElement(\"div\", {\n            className: \"fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid\",\n            style: {\n              height: frameHeight\n            }\n          }, createElement(\"a\", __assign({\n            ref: innerElRef,\n            className: \"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\"\n          }, navLinkAttrs), innerContent)));\n        });\n      }\n\n      return createElement(\"th\", {\n        className: \"fc-timegrid-axis\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-axis-frame\",\n        style: {\n          height: frameHeight\n        }\n      }));\n    };\n    /* Table Component Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n    // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n    // but DayGrid still needs to have classNames on inner elements in order to measure.\n\n\n    _this.renderTableRowAxis = function (rowHeight) {\n      var _a = _this.context,\n          options = _a.options,\n          viewApi = _a.viewApi;\n      var hookProps = {\n        text: options.allDayText,\n        view: viewApi\n      };\n      return (// TODO: make reusable hook. used in list view too\n        createElement(RenderHook, {\n          hookProps: hookProps,\n          classNames: options.allDayClassNames,\n          content: options.allDayContent,\n          defaultContent: renderAllDayInner,\n          didMount: options.allDayDidMount,\n          willUnmount: options.allDayWillUnmount\n        }, function (rootElRef, classNames, innerElRef, innerContent) {\n          return createElement(\"td\", {\n            ref: rootElRef,\n            className: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'].concat(classNames).join(' ')\n          }, createElement(\"div\", {\n            className: 'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' + (rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''),\n            style: {\n              height: rowHeight\n            }\n          }, createElement(\"span\", {\n            className: \"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\",\n            ref: innerElRef\n          }, innerContent)));\n        })\n      );\n    };\n\n    _this.handleSlatCoords = function (slatCoords) {\n      _this.setState({\n        slatCoords: slatCoords\n      });\n    };\n\n    return _this;\n  } // rendering\n  // ----------------------------------------------------------------------------------------------------\n\n\n  TimeColsView.prototype.renderSimpleLayout = function (headerRowContent, allDayContent, timeContent) {\n    var _a = this,\n        context = _a.context,\n        props = _a.props;\n\n    var sections = [];\n    var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    if (allDayContent) {\n      sections.push({\n        type: 'body',\n        key: 'all-day',\n        chunk: {\n          content: allDayContent\n        }\n      });\n      sections.push({\n        type: 'body',\n        key: 'all-day-divider',\n        outerContent: // TODO: rename to cellContent so don't need to define <tr>?\n        createElement(\"tr\", {\n          className: \"fc-scrollgrid-section\"\n        }, createElement(\"td\", {\n          className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n        }))\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      expandRows: Boolean(context.options.expandRows),\n      chunk: {\n        scrollerElRef: this.scrollerElRef,\n        content: timeContent\n      }\n    });\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec,\n      elRef: this.rootElRef\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        className: ['fc-timegrid'].concat(classNames).join(' '),\n        ref: rootElRef\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [{\n          width: 'shrink'\n        }],\n        sections: sections\n      }));\n    });\n  };\n\n  TimeColsView.prototype.renderHScrollLayout = function (headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n    var _this = this;\n\n    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    var _a = this,\n        context = _a.context,\n        props = _a.props;\n\n    var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    var sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        syncRowHeights: true,\n        chunks: [{\n          key: 'axis',\n          rowContent: function rowContent(arg) {\n            return createElement(\"tr\", null, _this.renderHeadAxis('day', arg.rowSyncHeights[0]));\n          }\n        }, {\n          key: 'cols',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    if (allDayContent) {\n      sections.push({\n        type: 'body',\n        key: 'all-day',\n        syncRowHeights: true,\n        chunks: [{\n          key: 'axis',\n          rowContent: function rowContent(contentArg) {\n            return createElement(\"tr\", null, _this.renderTableRowAxis(contentArg.rowSyncHeights[0]));\n          }\n        }, {\n          key: 'cols',\n          content: allDayContent\n        }]\n      });\n      sections.push({\n        key: 'all-day-divider',\n        type: 'body',\n        outerContent: // TODO: rename to cellContent so don't need to define <tr>?\n        createElement(\"tr\", {\n          className: \"fc-scrollgrid-section\"\n        }, createElement(\"td\", {\n          colSpan: 2,\n          className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n        }))\n      });\n    }\n\n    var isNowIndicator = context.options.nowIndicator;\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      expandRows: Boolean(context.options.expandRows),\n      chunks: [{\n        key: 'axis',\n        content: function content(arg) {\n          return (// TODO: make this now-indicator arrow more DRY with TimeColsContent\n            createElement(\"div\", {\n              className: \"fc-timegrid-axis-chunk\"\n            }, createElement(\"table\", {\n              style: {\n                height: arg.expandRows ? arg.clientHeight : ''\n              }\n            }, arg.tableColGroupNode, createElement(\"tbody\", null, createElement(TimeBodyAxis, {\n              slatMetas: slatMetas\n            }))), createElement(\"div\", {\n              className: \"fc-timegrid-now-indicator-container\"\n            }, createElement(NowTimer, {\n              unit: isNowIndicator ? 'minute' : 'day'\n              /* hacky */\n\n            }, function (nowDate) {\n              var nowIndicatorTop = isNowIndicator && slatCoords && slatCoords.safeComputeTop(nowDate); // might return void\n\n              if (typeof nowIndicatorTop === 'number') {\n                return createElement(NowIndicatorRoot, {\n                  isAxis: true,\n                  date: nowDate\n                }, function (rootElRef, classNames, innerElRef, innerContent) {\n                  return createElement(\"div\", {\n                    ref: rootElRef,\n                    className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '),\n                    style: {\n                      top: nowIndicatorTop\n                    }\n                  }, innerContent);\n                });\n              }\n\n              return null;\n            })))\n          );\n        }\n      }, {\n        key: 'cols',\n        scrollerElRef: this.scrollerElRef,\n        content: timeContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        key: 'footer',\n        type: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'axis',\n          content: renderScrollShim\n        }, {\n          key: 'cols',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec,\n      elRef: this.rootElRef\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        className: ['fc-timegrid'].concat(classNames).join(' '),\n        ref: rootElRef\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: false,\n        colGroups: [{\n          width: 'shrink',\n          cols: [{\n            width: 'shrink'\n          }]\n        }, {\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    });\n  };\n  /* Dimensions\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  TimeColsView.prototype.getAllDayMaxEventProps = function () {\n    var _a = this.context.options,\n        dayMaxEvents = _a.dayMaxEvents,\n        dayMaxEventRows = _a.dayMaxEventRows;\n\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n      // is auto?\n      dayMaxEvents = undefined;\n      dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n    }\n\n    return {\n      dayMaxEvents: dayMaxEvents,\n      dayMaxEventRows: dayMaxEventRows\n    };\n  };\n\n  return TimeColsView;\n}(DateComponent);\n\nfunction renderAllDayInner(hookProps) {\n  return hookProps.text;\n}\n\nvar TimeColsSlatsCoords =\n/** @class */\nfunction () {\n  function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {\n    this.positions = positions;\n    this.dateProfile = dateProfile;\n    this.slotDuration = slotDuration;\n  }\n\n  TimeColsSlatsCoords.prototype.safeComputeTop = function (date) {\n    var dateProfile = this.dateProfile;\n\n    if (rangeContainsMarker(dateProfile.currentRange, date)) {\n      var startOfDayDate = startOfDay(date);\n      var timeMs = date.valueOf() - startOfDayDate.valueOf();\n\n      if (timeMs >= asRoughMs(dateProfile.slotMinTime) && timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n        return this.computeTimeTop(createDuration(timeMs));\n      }\n    }\n\n    return null;\n  }; // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n  // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n\n\n  TimeColsSlatsCoords.prototype.computeDateTop = function (when, startOfDayDate) {\n    if (!startOfDayDate) {\n      startOfDayDate = startOfDay(when);\n    }\n\n    return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n  }; // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n  // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n  // Eventually allow computation with arbirary slat dates.\n\n\n  TimeColsSlatsCoords.prototype.computeTimeTop = function (duration) {\n    var _a = this,\n        positions = _a.positions,\n        dateProfile = _a.dateProfile;\n\n    var len = positions.els.length; // floating-point value of # of slots covered\n\n    var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n    var slatIndex;\n    var slatRemainder; // compute a floating-point number for how many slats should be progressed through.\n    // from 0 to number of slats (inclusive)\n    // constrained because slotMinTime/slotMaxTime might be customized.\n\n    slatCoverage = Math.max(0, slatCoverage);\n    slatCoverage = Math.min(len, slatCoverage); // an integer index of the furthest whole slat\n    // from 0 to number slats (*exclusive*, so len-1)\n\n    slatIndex = Math.floor(slatCoverage);\n    slatIndex = Math.min(slatIndex, len - 1); // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n    // could be 1.0 if slatCoverage is covering *all* the slots\n\n    slatRemainder = slatCoverage - slatIndex;\n    return positions.tops[slatIndex] + positions.getHeight(slatIndex) * slatRemainder;\n  };\n\n  return TimeColsSlatsCoords;\n}();\n\nvar TimeColsSlatsBody =\n/** @class */\nfunction (_super) {\n  __extends(TimeColsSlatsBody, _super);\n\n  function TimeColsSlatsBody() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeColsSlatsBody.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var options = context.options;\n    var slatElRefs = props.slatElRefs;\n    return createElement(\"tbody\", null, props.slatMetas.map(function (slatMeta, i) {\n      var hookProps = {\n        time: slatMeta.time,\n        date: context.dateEnv.toDate(slatMeta.date),\n        view: context.viewApi\n      };\n      var classNames = ['fc-timegrid-slot', 'fc-timegrid-slot-lane', slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor'];\n      return createElement(\"tr\", {\n        key: slatMeta.key,\n        ref: slatElRefs.createRef(slatMeta.key)\n      }, props.axis && createElement(TimeColsAxisCell, __assign({}, slatMeta)), createElement(RenderHook, {\n        hookProps: hookProps,\n        classNames: options.slotLaneClassNames,\n        content: options.slotLaneContent,\n        didMount: options.slotLaneDidMount,\n        willUnmount: options.slotLaneWillUnmount\n      }, function (rootElRef, customClassNames, innerElRef, innerContent) {\n        return createElement(\"td\", {\n          ref: rootElRef,\n          className: classNames.concat(customClassNames).join(' '),\n          \"data-time\": slatMeta.isoTimeStr\n        }, innerContent);\n      }));\n    }));\n  };\n\n  return TimeColsSlatsBody;\n}(BaseComponent);\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\n\n\nvar TimeColsSlats =\n/** @class */\nfunction (_super) {\n  __extends(TimeColsSlats, _super);\n\n  function TimeColsSlats() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.rootElRef = createRef();\n    _this.slatElRefs = new RefMap();\n    return _this;\n  }\n\n  TimeColsSlats.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    return createElement(\"div\", {\n      className: \"fc-timegrid-slots\",\n      ref: this.rootElRef\n    }, createElement(\"table\", {\n      className: context.theme.getClass('table'),\n      style: {\n        minWidth: props.tableMinWidth,\n        width: props.clientWidth,\n        height: props.minHeight\n      }\n    }, props.tableColGroupNode\n    /* relies on there only being a single <col> for the axis */\n    , createElement(TimeColsSlatsBody, {\n      slatElRefs: this.slatElRefs,\n      axis: props.axis,\n      slatMetas: props.slatMetas\n    })));\n  };\n\n  TimeColsSlats.prototype.componentDidMount = function () {\n    this.updateSizing();\n  };\n\n  TimeColsSlats.prototype.componentDidUpdate = function () {\n    this.updateSizing();\n  };\n\n  TimeColsSlats.prototype.componentWillUnmount = function () {\n    if (this.props.onCoords) {\n      this.props.onCoords(null);\n    }\n  };\n\n  TimeColsSlats.prototype.updateSizing = function () {\n    var _a = this,\n        context = _a.context,\n        props = _a.props;\n\n    if (props.onCoords && props.clientWidth !== null // means sizing has stabilized\n    ) {\n      var rootEl = this.rootElRef.current;\n\n      if (rootEl.offsetHeight) {\n        // not hidden by css\n        props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n      }\n    }\n  };\n\n  return TimeColsSlats;\n}(BaseComponent);\n\nfunction collectSlatEls(elMap, slatMetas) {\n  return slatMetas.map(function (slatMeta) {\n    return elMap[slatMeta.key];\n  });\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n  var segsByCol = [];\n  var i;\n\n  for (i = 0; i < colCnt; i += 1) {\n    segsByCol.push([]);\n  }\n\n  if (segs) {\n    for (i = 0; i < segs.length; i += 1) {\n      segsByCol[segs[i].col].push(segs[i]);\n    }\n  }\n\n  return segsByCol;\n}\n\nfunction splitInteractionByCol(ui, colCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < colCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var i = 0; i < colCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n      var seg = _a[_i];\n      byRow[seg.col].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nvar TimeColMoreLink =\n/** @class */\nfunction (_super) {\n  __extends(TimeColMoreLink, _super);\n\n  function TimeColMoreLink() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.rootElRef = createRef();\n    return _this;\n  }\n\n  TimeColMoreLink.prototype.render = function () {\n    var _this = this;\n\n    var props = this.props;\n    return createElement(MoreLinkRoot, {\n      allDayDate: null,\n      moreCnt: props.hiddenSegs.length,\n      allSegs: props.hiddenSegs,\n      hiddenSegs: props.hiddenSegs,\n      alignmentElRef: this.rootElRef,\n      defaultContent: renderMoreLinkInner,\n      extraDateSpan: props.extraDateSpan,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      popoverContent: function popoverContent() {\n        return renderPlainFgSegs(props.hiddenSegs, props);\n      }\n    }, function (rootElRef, classNames, innerElRef, innerContent, handleClick) {\n      return createElement(\"a\", {\n        ref: function ref(el) {\n          setRef(rootElRef, el);\n          setRef(_this.rootElRef, el);\n        },\n        className: ['fc-timegrid-more-link'].concat(classNames).join(' '),\n        style: {\n          top: props.top,\n          bottom: props.bottom\n        },\n        onClick: handleClick\n      }, createElement(\"div\", {\n        ref: innerElRef,\n        className: \"fc-timegrid-more-link-inner fc-sticky\"\n      }, innerContent));\n    });\n  };\n\n  return TimeColMoreLink;\n}(BaseComponent);\n\nfunction renderMoreLinkInner(props) {\n  return props.shortText;\n} // segInputs assumed sorted\n\n\nfunction computeFgSegPlacements(segInputs, strictOrder, maxStackCnt) {\n  var hierarchy = new SegHierarchy();\n\n  if (strictOrder != null) {\n    hierarchy.strictOrder = strictOrder;\n  }\n\n  if (maxStackCnt != null) {\n    hierarchy.maxStackCnt = maxStackCnt;\n  }\n\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var hiddenGroups = groupIntersectingEntries(hiddenEntries);\n  var web = buildWeb(hierarchy);\n  web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n\n  var segRects = webToRects(web);\n  return {\n    segRects: segRects,\n    hiddenGroups: hiddenGroups\n  };\n}\n\nfunction buildWeb(hierarchy) {\n  var entriesByLevel = hierarchy.entriesByLevel;\n  var buildNode = cacheable(function (level, lateral) {\n    return level + ':' + lateral;\n  }, function (level, lateral) {\n    var siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n    var nextLevelRes = buildNodes(siblingRange, buildNode);\n    var entry = entriesByLevel[level][lateral];\n    return [__assign(__assign({}, entry), {\n      nextLevelNodes: nextLevelRes[0]\n    }), entry.thickness + nextLevelRes[1] // the pressure builds\n    ];\n  });\n  return buildNodes(entriesByLevel.length ? {\n    level: 0,\n    lateralStart: 0,\n    lateralEnd: entriesByLevel[0].length\n  } : null, buildNode)[0];\n}\n\nfunction buildNodes(siblingRange, buildNode) {\n  if (!siblingRange) {\n    return [[], 0];\n  }\n\n  var level = siblingRange.level,\n      lateralStart = siblingRange.lateralStart,\n      lateralEnd = siblingRange.lateralEnd;\n  var lateral = lateralStart;\n  var pairs = [];\n\n  while (lateral < lateralEnd) {\n    pairs.push(buildNode(level, lateral));\n    lateral += 1;\n  }\n\n  pairs.sort(cmpDescPressures);\n  return [pairs.map(extractNode), pairs[0][1] // first item's pressure\n  ];\n}\n\nfunction cmpDescPressures(a, b) {\n  return b[1] - a[1];\n}\n\nfunction extractNode(a) {\n  return a[0];\n}\n\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n  var levelCoords = hierarchy.levelCoords,\n      entriesByLevel = hierarchy.entriesByLevel;\n  var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n  var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n  var levelCnt = levelCoords.length;\n  var level = subjectLevel; // skip past levels that are too high up\n\n  for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1) {\n    ;\n  } // do nothing\n\n\n  for (; level < levelCnt; level += 1) {\n    var entries = entriesByLevel[level];\n    var entry = void 0;\n    var searchIndex = binarySearch(entries, subjectEntry.spanStart, getEntrySpanEnd);\n    var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n\n    var lateralEnd = lateralStart;\n\n    while ( // loop through entries that horizontally intersect\n    (entry = entries[lateralEnd]) && // but not past the whole seg list\n    entry.spanStart < subjectEntry.spanEnd) {\n      lateralEnd += 1;\n    }\n\n    if (lateralStart < lateralEnd) {\n      return {\n        level: level,\n        lateralStart: lateralStart,\n        lateralEnd: lateralEnd\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction stretchWeb(topLevelNodes, totalThickness) {\n  var stretchNode = cacheable(function (node, startCoord, prevThickness) {\n    return buildEntryKey(node);\n  }, function (node, startCoord, prevThickness) {\n    var nextLevelNodes = node.nextLevelNodes,\n        thickness = node.thickness;\n    var allThickness = thickness + prevThickness;\n    var thicknessFraction = thickness / allThickness;\n    var endCoord;\n    var newChildren = [];\n\n    if (!nextLevelNodes.length) {\n      endCoord = totalThickness;\n    } else {\n      for (var _i = 0, nextLevelNodes_1 = nextLevelNodes; _i < nextLevelNodes_1.length; _i++) {\n        var childNode = nextLevelNodes_1[_i];\n\n        if (endCoord === undefined) {\n          var res = stretchNode(childNode, startCoord, allThickness);\n          endCoord = res[0];\n          newChildren.push(res[1]);\n        } else {\n          var res = stretchNode(childNode, endCoord, 0);\n          newChildren.push(res[1]);\n        }\n      }\n    }\n\n    var newThickness = (endCoord - startCoord) * thicknessFraction;\n    return [endCoord - newThickness, __assign(__assign({}, node), {\n      thickness: newThickness,\n      nextLevelNodes: newChildren\n    })];\n  });\n  return topLevelNodes.map(function (node) {\n    return stretchNode(node, 0, 0)[1];\n  });\n} // not sorted in any particular order\n\n\nfunction webToRects(topLevelNodes) {\n  var rects = [];\n  var processNode = cacheable(function (node, levelCoord, stackDepth) {\n    return buildEntryKey(node);\n  }, function (node, levelCoord, stackDepth) {\n    var rect = __assign(__assign({}, node), {\n      levelCoord: levelCoord,\n      stackDepth: stackDepth,\n      stackForward: 0\n    });\n\n    rects.push(rect);\n    return rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1;\n  });\n\n  function processNodes(nodes, levelCoord, stackDepth) {\n    var stackForward = 0;\n\n    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n      var node = nodes_1[_i];\n      stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n    }\n\n    return stackForward;\n  }\n\n  processNodes(topLevelNodes, 0, 0);\n  return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n} // TODO: move to general util\n\n\nfunction cacheable(keyFunc, workFunc) {\n  var cache = {};\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var key = keyFunc.apply(void 0, args);\n    return key in cache ? cache[key] : cache[key] = workFunc.apply(void 0, args);\n  };\n}\n\nvar DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: false\n});\n\nvar TimeColEvent =\n/** @class */\nfunction (_super) {\n  __extends(TimeColEvent, _super);\n\n  function TimeColEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeColEvent.prototype.render = function () {\n    var classNames = ['fc-timegrid-event', 'fc-v-event'];\n\n    if (this.props.isShort) {\n      classNames.push('fc-timegrid-event-short');\n    }\n\n    return createElement(StandardEvent, __assign({}, this.props, {\n      defaultTimeFormat: DEFAULT_TIME_FORMAT,\n      extraClassNames: classNames\n    }));\n  };\n\n  return TimeColEvent;\n}(BaseComponent);\n\nvar TimeColMisc =\n/** @class */\nfunction (_super) {\n  __extends(TimeColMisc, _super);\n\n  function TimeColMisc() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TimeColMisc.prototype.render = function () {\n    var props = this.props;\n    return createElement(DayCellContent, {\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      extraHookProps: props.extraHookProps\n    }, function (innerElRef, innerContent) {\n      return innerContent && createElement(\"div\", {\n        className: \"fc-timegrid-col-misc\",\n        ref: innerElRef\n      }, innerContent);\n    });\n  };\n\n  return TimeColMisc;\n}(BaseComponent);\n\nvar TimeCol =\n/** @class */\nfunction (_super) {\n  __extends(TimeCol, _super);\n\n  function TimeCol() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.sortEventSegs = memoize(sortEventSegs);\n    _this.computeFgSegPlacements = memoize(computeFgSegPlacements); // only for non-print, non-mirror\n\n    return _this;\n  }\n\n  TimeCol.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var isSelectMirror = context.options.selectMirror;\n    var mirrorSegs = props.eventDrag && props.eventDrag.segs || props.eventResize && props.eventResize.segs || isSelectMirror && props.dateSelectionSegs || [];\n    var interactionAffectedInstances = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, context.options.eventOrder);\n    return createElement(DayCellRoot, {\n      elRef: props.elRef,\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      extraHookProps: props.extraHookProps\n    }, function (rootElRef, classNames, dataAttrs) {\n      return createElement(\"td\", __assign({\n        ref: rootElRef,\n        className: ['fc-timegrid-col'].concat(classNames, props.extraClassNames || []).join(' ')\n      }, dataAttrs, props.extraDataAttrs), createElement(\"div\", {\n        className: \"fc-timegrid-col-frame\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-col-bg\"\n      }, _this.renderFillSegs(props.businessHourSegs, 'non-business'), _this.renderFillSegs(props.bgEventSegs, 'bg-event'), _this.renderFillSegs(props.dateSelectionSegs, 'highlight')), createElement(\"div\", {\n        className: \"fc-timegrid-col-events\"\n      }, _this.renderFgSegs(sortedFgSegs, interactionAffectedInstances)), createElement(\"div\", {\n        className: \"fc-timegrid-col-events\"\n      }, _this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror))), createElement(\"div\", {\n        className: \"fc-timegrid-now-indicator-container\"\n      }, _this.renderNowIndicator(props.nowIndicatorSegs)), createElement(TimeColMisc, {\n        date: props.date,\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        extraHookProps: props.extraHookProps\n      })));\n    });\n  };\n\n  TimeCol.prototype.renderFgSegs = function (sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting) {\n    var props = this.props;\n\n    if (props.forPrint) {\n      return renderPlainFgSegs(sortedFgSegs, props);\n    }\n\n    if (props.slatCoords) {\n      return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting);\n    }\n\n    return null;\n  };\n\n  TimeCol.prototype.renderPositionedFgSegs = function (segs, // if not mirror, needs to be sorted\n  segIsInvisible, isDragging, isResizing, isDateSelecting) {\n    var _this = this;\n\n    var _a = this.context.options,\n        eventMaxStack = _a.eventMaxStack,\n        eventShortHeight = _a.eventShortHeight,\n        eventOrderStrict = _a.eventOrderStrict;\n    var _b = this.props,\n        eventSelection = _b.eventSelection,\n        todayRange = _b.todayRange,\n        nowDate = _b.nowDate;\n    var isMirror = isDragging || isResizing || isDateSelecting;\n    var segInputs = this.buildSegInputs(segs);\n\n    var _c = isMirror ? computeFgSegPlacements(segInputs) : // don't use memoized\n    this.computeFgSegPlacements(segInputs, eventOrderStrict, eventMaxStack),\n        segRects = _c.segRects,\n        hiddenGroups = _c.hiddenGroups;\n\n    return createElement(Fragment, null, this.renderHiddenGroups(hiddenGroups, segs), segRects.map(function (segRect) {\n      var seg = segs[segRect.segInput.index];\n      var instanceId = seg.eventRange.instance.instanceId;\n\n      var positionCss = __assign(__assign({}, _this.computeSegTopBottomCss(segRect.segInput)), isMirror ? {\n        left: 0,\n        right: 0\n      } : _this.computeSegLeftRightCss(segRect));\n\n      return createElement(\"div\", {\n        className: 'fc-timegrid-event-harness' + (segRect.stackForward > 0 ? ' fc-timegrid-event-harness-inset' : ''),\n        key: instanceId,\n        style: __assign({\n          visibility: segIsInvisible[instanceId] ? 'hidden' : ''\n        }, positionCss)\n      }, createElement(TimeColEvent, __assign({\n        seg: seg,\n        isDragging: isDragging,\n        isResizing: isResizing,\n        isDateSelecting: isDateSelecting,\n        isSelected: instanceId === eventSelection,\n        isShort: segRect.spanEnd - segRect.spanStart < eventShortHeight\n      }, getSegMeta(seg, todayRange, nowDate))));\n    }));\n  }; // will already have eventMinHeight applied because segInputs already had it\n\n\n  TimeCol.prototype.renderHiddenGroups = function (hiddenGroups, segs) {\n    var _this = this;\n\n    var _a = this.props,\n        extraDateSpan = _a.extraDateSpan,\n        dateProfile = _a.dateProfile,\n        todayRange = _a.todayRange,\n        nowDate = _a.nowDate,\n        eventSelection = _a.eventSelection,\n        eventDrag = _a.eventDrag,\n        eventResize = _a.eventResize;\n    return createElement(Fragment, null, hiddenGroups.map(function (hiddenGroup) {\n      var positionCss = _this.computeSegTopBottomCss(hiddenGroup);\n\n      var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n      return createElement(TimeColMoreLink, {\n        key: buildIsoString(computeEarliestSegStart(hiddenSegs)),\n        hiddenSegs: hiddenSegs,\n        top: positionCss.top,\n        bottom: positionCss.bottom,\n        extraDateSpan: extraDateSpan,\n        dateProfile: dateProfile,\n        todayRange: todayRange,\n        nowDate: nowDate,\n        eventSelection: eventSelection,\n        eventDrag: eventDrag,\n        eventResize: eventResize\n      });\n    }));\n  };\n\n  TimeCol.prototype.buildSegInputs = function (segs) {\n    var _a = this.props,\n        date = _a.date,\n        slatCoords = _a.slatCoords;\n    var eventMinHeight = this.context.options.eventMinHeight;\n    var segInputs = [];\n\n    for (var i = 0; i < segs.length; i += 1) {\n      var seg = segs[i];\n      var spanStart = slatCoords.computeDateTop(seg.start, date);\n      var spanEnd = Math.max(spanStart + (eventMinHeight || 0), // yuck\n      slatCoords.computeDateTop(seg.end, date));\n      segInputs.push({\n        index: i,\n        spanStart: Math.round(spanStart),\n        spanEnd: Math.round(spanEnd),\n        thickness: 1\n      });\n    }\n\n    return segInputs;\n  };\n\n  TimeCol.prototype.renderFillSegs = function (segs, fillType) {\n    var _this = this;\n\n    var props = this.props;\n\n    if (!props.slatCoords) {\n      return null;\n    }\n\n    var segInputs = this.buildSegInputs(segs);\n    var children = segInputs.map(function (segInput) {\n      var seg = segs[segInput.index];\n      return createElement(\"div\", {\n        key: buildEventRangeKey(seg.eventRange),\n        className: \"fc-timegrid-bg-harness\",\n        style: _this.computeSegTopBottomCss(segInput)\n      }, fillType === 'bg-event' ? createElement(BgEvent, __assign({\n        seg: seg\n      }, getSegMeta(seg, props.todayRange, props.nowDate))) : renderFill(fillType));\n    });\n    return createElement(Fragment, null, children);\n  };\n\n  TimeCol.prototype.renderNowIndicator = function (segs) {\n    var _a = this.props,\n        slatCoords = _a.slatCoords,\n        date = _a.date;\n\n    if (!slatCoords) {\n      return null;\n    }\n\n    return segs.map(function (seg, i) {\n      return createElement(NowIndicatorRoot, {\n        isAxis: false,\n        date: date,\n        // key doesn't matter. will only ever be one\n        key: i\n      }, function (rootElRef, classNames, innerElRef, innerContent) {\n        return createElement(\"div\", {\n          ref: rootElRef,\n          className: ['fc-timegrid-now-indicator-line'].concat(classNames).join(' '),\n          style: {\n            top: slatCoords.computeDateTop(seg.start, date)\n          }\n        }, innerContent);\n      });\n    });\n  };\n\n  TimeCol.prototype.computeSegTopBottomCss = function (segLike) {\n    return {\n      top: segLike.spanStart,\n      bottom: -segLike.spanEnd\n    };\n  };\n\n  TimeCol.prototype.computeSegLeftRightCss = function (segRect) {\n    var _a = this.context,\n        isRtl = _a.isRtl,\n        options = _a.options;\n    var shouldOverlap = options.slotEventOverlap;\n    var nearCoord = segRect.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n\n    var farCoord = segRect.levelCoord + segRect.thickness; // the right side if LTR. the left side if RTL. floating-point\n\n    var left; // amount of space from left edge, a fraction of the total width\n\n    var right; // amount of space from right edge, a fraction of the total width\n\n    if (shouldOverlap) {\n      // double the width, but don't go beyond the maximum forward coordinate (1.0)\n      farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n    }\n\n    if (isRtl) {\n      left = 1 - farCoord;\n      right = nearCoord;\n    } else {\n      left = nearCoord;\n      right = 1 - farCoord;\n    }\n\n    var props = {\n      zIndex: segRect.stackDepth + 1,\n      left: left * 100 + '%',\n      right: right * 100 + '%'\n    };\n\n    if (shouldOverlap && !segRect.stackForward) {\n      // add padding to the edge so that forward stacked events don't cover the resizer's icon\n      props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n    }\n\n    return props;\n  };\n\n  return TimeCol;\n}(BaseComponent);\n\nfunction renderPlainFgSegs(sortedFgSegs, _a) {\n  var todayRange = _a.todayRange,\n      nowDate = _a.nowDate,\n      eventSelection = _a.eventSelection,\n      eventDrag = _a.eventDrag,\n      eventResize = _a.eventResize;\n  var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) || (eventResize ? eventResize.affectedInstances : null) || {};\n  return createElement(Fragment, null, sortedFgSegs.map(function (seg) {\n    var instanceId = seg.eventRange.instance.instanceId;\n    return createElement(\"div\", {\n      key: instanceId,\n      style: {\n        visibility: hiddenInstances[instanceId] ? 'hidden' : ''\n      }\n    }, createElement(TimeColEvent, __assign({\n      seg: seg,\n      isDragging: false,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: instanceId === eventSelection,\n      isShort: false\n    }, getSegMeta(seg, todayRange, nowDate))));\n  }));\n}\n\nfunction compileSegsFromEntries(segEntries, allSegs) {\n  return segEntries.map(function (segEntry) {\n    return allSegs[segEntry.segInput.index];\n  });\n}\n\nvar TimeColsContent =\n/** @class */\nfunction (_super) {\n  __extends(TimeColsContent, _super);\n\n  function TimeColsContent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.splitFgEventSegs = memoize(splitSegsByCol);\n    _this.splitBgEventSegs = memoize(splitSegsByCol);\n    _this.splitBusinessHourSegs = memoize(splitSegsByCol);\n    _this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n    _this.splitDateSelectionSegs = memoize(splitSegsByCol);\n    _this.splitEventDrag = memoize(splitInteractionByCol);\n    _this.splitEventResize = memoize(splitInteractionByCol);\n    _this.rootElRef = createRef();\n    _this.cellElRefs = new RefMap();\n    return _this;\n  }\n\n  TimeColsContent.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var nowIndicatorTop = context.options.nowIndicator && props.slatCoords && props.slatCoords.safeComputeTop(props.nowDate); // might return void\n\n    var colCnt = props.cells.length;\n    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n    var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n    var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n    var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n    return createElement(\"div\", {\n      className: \"fc-timegrid-cols\",\n      ref: this.rootElRef\n    }, createElement(\"table\", {\n      style: {\n        minWidth: props.tableMinWidth,\n        width: props.clientWidth\n      }\n    }, props.tableColGroupNode, createElement(\"tbody\", null, createElement(\"tr\", null, props.axis && createElement(\"td\", {\n      className: \"fc-timegrid-col fc-timegrid-axis\"\n    }, createElement(\"div\", {\n      className: \"fc-timegrid-col-frame\"\n    }, createElement(\"div\", {\n      className: \"fc-timegrid-now-indicator-container\"\n    }, typeof nowIndicatorTop === 'number' && createElement(NowIndicatorRoot, {\n      isAxis: true,\n      date: props.nowDate\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '),\n        style: {\n          top: nowIndicatorTop\n        }\n      }, innerContent);\n    })))), props.cells.map(function (cell, i) {\n      return createElement(TimeCol, {\n        key: cell.key,\n        elRef: _this.cellElRefs.createRef(cell.key),\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        nowDate: props.nowDate,\n        todayRange: props.todayRange,\n        extraHookProps: cell.extraHookProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        fgEventSegs: fgEventSegsByRow[i],\n        bgEventSegs: bgEventSegsByRow[i],\n        businessHourSegs: businessHourSegsByRow[i],\n        nowIndicatorSegs: nowIndicatorSegsByRow[i],\n        dateSelectionSegs: dateSelectionSegsByRow[i],\n        eventDrag: eventDragByRow[i],\n        eventResize: eventResizeByRow[i],\n        slatCoords: props.slatCoords,\n        eventSelection: props.eventSelection,\n        forPrint: props.forPrint\n      });\n    })))));\n  };\n\n  TimeColsContent.prototype.componentDidMount = function () {\n    this.updateCoords();\n  };\n\n  TimeColsContent.prototype.componentDidUpdate = function () {\n    this.updateCoords();\n  };\n\n  TimeColsContent.prototype.updateCoords = function () {\n    var props = this.props;\n\n    if (props.onColCoords && props.clientWidth !== null // means sizing has stabilized\n    ) {\n      props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n      false));\n    }\n  };\n\n  return TimeColsContent;\n}(BaseComponent);\n\nfunction collectCellEls(elMap, cells) {\n  return cells.map(function (cell) {\n    return elMap[cell.key];\n  });\n}\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\n\n\nvar TimeCols =\n/** @class */\nfunction (_super) {\n  __extends(TimeCols, _super);\n\n  function TimeCols() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.processSlotOptions = memoize(processSlotOptions);\n    _this.state = {\n      slatCoords: null\n    };\n\n    _this.handleRootEl = function (el) {\n      if (el) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: el,\n          isHitComboAllowed: _this.props.isHitComboAllowed\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    _this.handleScrollRequest = function (request) {\n      var onScrollTopRequest = _this.props.onScrollTopRequest;\n      var slatCoords = _this.state.slatCoords;\n\n      if (onScrollTopRequest && slatCoords) {\n        if (request.time) {\n          var top_1 = slatCoords.computeTimeTop(request.time);\n          top_1 = Math.ceil(top_1); // zoom can give weird floating-point values. rather scroll a little bit further\n\n          if (top_1) {\n            top_1 += 1; // to overcome top border that slots beyond the first have. looks better\n          }\n\n          onScrollTopRequest(top_1);\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.handleColCoords = function (colCoords) {\n      _this.colCoords = colCoords;\n    };\n\n    _this.handleSlatCoords = function (slatCoords) {\n      _this.setState({\n        slatCoords: slatCoords\n      });\n\n      if (_this.props.onSlatCoords) {\n        _this.props.onSlatCoords(slatCoords);\n      }\n    };\n\n    return _this;\n  }\n\n  TimeCols.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        state = _a.state;\n\n    return createElement(\"div\", {\n      className: \"fc-timegrid-body\",\n      ref: this.handleRootEl,\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(TimeColsSlats, {\n      axis: props.axis,\n      dateProfile: props.dateProfile,\n      slatMetas: props.slatMetas,\n      clientWidth: props.clientWidth,\n      minHeight: props.expandRows ? props.clientHeight : '',\n      tableMinWidth: props.tableMinWidth,\n      tableColGroupNode: props.axis ? props.tableColGroupNode : null\n      /* axis depends on the colgroup's shrinking */\n      ,\n      onCoords: this.handleSlatCoords\n    }), createElement(TimeColsContent, {\n      cells: props.cells,\n      axis: props.axis,\n      dateProfile: props.dateProfile,\n      businessHourSegs: props.businessHourSegs,\n      bgEventSegs: props.bgEventSegs,\n      fgEventSegs: props.fgEventSegs,\n      dateSelectionSegs: props.dateSelectionSegs,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      todayRange: props.todayRange,\n      nowDate: props.nowDate,\n      nowIndicatorSegs: props.nowIndicatorSegs,\n      clientWidth: props.clientWidth,\n      tableMinWidth: props.tableMinWidth,\n      tableColGroupNode: props.tableColGroupNode,\n      slatCoords: state.slatCoords,\n      onColCoords: this.handleColCoords,\n      forPrint: props.forPrint\n    }));\n  };\n\n  TimeCols.prototype.componentDidMount = function () {\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n  };\n\n  TimeCols.prototype.componentDidUpdate = function (prevProps) {\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n  };\n\n  TimeCols.prototype.componentWillUnmount = function () {\n    this.scrollResponder.detach();\n  };\n\n  TimeCols.prototype.queryHit = function (positionLeft, positionTop) {\n    var _a = this.context,\n        dateEnv = _a.dateEnv,\n        options = _a.options;\n    var colCoords = this.colCoords;\n    var dateProfile = this.props.dateProfile;\n    var slatCoords = this.state.slatCoords;\n\n    var _b = this.processSlotOptions(this.props.slotDuration, options.snapDuration),\n        snapDuration = _b.snapDuration,\n        snapsPerSlot = _b.snapsPerSlot;\n\n    var colIndex = colCoords.leftToIndex(positionLeft);\n    var slatIndex = slatCoords.positions.topToIndex(positionTop);\n\n    if (colIndex != null && slatIndex != null) {\n      var cell = this.props.cells[colIndex];\n      var slatTop = slatCoords.positions.tops[slatIndex];\n      var slatHeight = slatCoords.positions.getHeight(slatIndex);\n      var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n\n      var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n\n      var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n      var dayDate = this.props.cells[colIndex].date;\n      var time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n      var start = dateEnv.add(dayDate, time);\n      var end = dateEnv.add(start, snapDuration);\n      return {\n        dateProfile: dateProfile,\n        dateSpan: __assign({\n          range: {\n            start: start,\n            end: end\n          },\n          allDay: false\n        }, cell.extraDateSpan),\n        dayEl: colCoords.els[colIndex],\n        rect: {\n          left: colCoords.lefts[colIndex],\n          right: colCoords.rights[colIndex],\n          top: slatTop,\n          bottom: slatTop + slatHeight\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  };\n\n  return TimeCols;\n}(DateComponent);\n\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n  var snapDuration = snapDurationOverride || slotDuration;\n  var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n\n  if (snapsPerSlot === null) {\n    snapDuration = slotDuration;\n    snapsPerSlot = 1; // TODO: say warning?\n  }\n\n  return {\n    snapDuration: snapDuration,\n    snapsPerSlot: snapsPerSlot\n  };\n}\n\nvar DayTimeColsSlicer =\n/** @class */\nfunction (_super) {\n  __extends(DayTimeColsSlicer, _super);\n\n  function DayTimeColsSlicer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayTimeColsSlicer.prototype.sliceRange = function (range, dayRanges) {\n    var segs = [];\n\n    for (var col = 0; col < dayRanges.length; col += 1) {\n      var segRange = intersectRanges(range, dayRanges[col]);\n\n      if (segRange) {\n        segs.push({\n          start: segRange.start,\n          end: segRange.end,\n          isStart: segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: segRange.end.valueOf() === range.end.valueOf(),\n          col: col\n        });\n      }\n    }\n\n    return segs;\n  };\n\n  return DayTimeColsSlicer;\n}(Slicer);\n\nvar DayTimeCols =\n/** @class */\nfunction (_super) {\n  __extends(DayTimeCols, _super);\n\n  function DayTimeCols() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDayRanges = memoize(buildDayRanges);\n    _this.slicer = new DayTimeColsSlicer();\n    _this.timeColsRef = createRef();\n    return _this;\n  }\n\n  DayTimeCols.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var dateProfile = props.dateProfile,\n        dayTableModel = props.dayTableModel;\n    var isNowIndicator = context.options.nowIndicator;\n    var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv); // give it the first row of cells\n    // TODO: would move this further down hierarchy, but sliceNowDate needs it\n\n    return createElement(NowTimer, {\n      unit: isNowIndicator ? 'minute' : 'day'\n    }, function (nowDate, todayRange) {\n      return createElement(TimeCols, __assign({\n        ref: _this.timeColsRef\n      }, _this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), {\n        forPrint: props.forPrint,\n        axis: props.axis,\n        dateProfile: dateProfile,\n        slatMetas: props.slatMetas,\n        slotDuration: props.slotDuration,\n        cells: dayTableModel.cells[0],\n        tableColGroupNode: props.tableColGroupNode,\n        tableMinWidth: props.tableMinWidth,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        expandRows: props.expandRows,\n        nowDate: nowDate,\n        nowIndicatorSegs: isNowIndicator && _this.slicer.sliceNowDate(nowDate, context, dayRanges),\n        todayRange: todayRange,\n        onScrollTopRequest: props.onScrollTopRequest,\n        onSlatCoords: props.onSlatCoords\n      }));\n    });\n  };\n\n  return DayTimeCols;\n}(DateComponent);\n\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n  var ranges = [];\n\n  for (var _i = 0, _a = dayTableModel.headerDates; _i < _a.length; _i++) {\n    var date = _a[_i];\n    ranges.push({\n      start: dateEnv.add(date, dateProfile.slotMinTime),\n      end: dateEnv.add(date, dateProfile.slotMaxTime)\n    });\n  }\n\n  return ranges;\n} // potential nice values for the slot-duration and interval-duration\n// from largest to smallest\n\n\nvar STOCK_SUB_DURATIONS = [{\n  hours: 1\n}, {\n  minutes: 30\n}, {\n  minutes: 15\n}, {\n  seconds: 30\n}, {\n  seconds: 15\n}];\n\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n  var dayStart = new Date(0);\n  var slatTime = slotMinTime;\n  var slatIterator = createDuration(0);\n  var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n  var metas = [];\n\n  while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n    var date = dateEnv.add(dayStart, slatTime);\n    var isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n    metas.push({\n      date: date,\n      time: slatTime,\n      key: date.toISOString(),\n      isoTimeStr: formatIsoTimeString(date),\n      isLabeled: isLabeled\n    });\n    slatTime = addDurations(slatTime, slotDuration);\n    slatIterator = addDurations(slatIterator, slotDuration);\n  }\n\n  return metas;\n} // Computes an automatic value for slotLabelInterval\n\n\nfunction computeLabelInterval(slotDuration) {\n  var i;\n  var labelInterval;\n  var slotsPerLabel; // find the smallest stock label interval that results in more than one slots-per-label\n\n  for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n    labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n    slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n\n    if (slotsPerLabel !== null && slotsPerLabel > 1) {\n      return labelInterval;\n    }\n  }\n\n  return slotDuration; // fall back\n}\n\nvar DayTimeColsView =\n/** @class */\nfunction (_super) {\n  __extends(DayTimeColsView, _super);\n\n  function DayTimeColsView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildTimeColsModel = memoize(buildTimeColsModel);\n    _this.buildSlatMetas = memoize(buildSlatMetas);\n    return _this;\n  }\n\n  DayTimeColsView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.context,\n        options = _a.options,\n        dateEnv = _a.dateEnv,\n        dateProfileGenerator = _a.dateProfileGenerator;\n    var props = this.props;\n    var dateProfile = props.dateProfile;\n    var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n    var splitProps = this.allDaySplitter.splitProps(props);\n    var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n    var dayMinWidth = options.dayMinWidth;\n    var hasAttachedAxis = !dayMinWidth;\n    var hasDetachedAxis = dayMinWidth;\n    var headerContent = options.dayHeaders && createElement(DayHeader, {\n      dates: dayTableModel.headerDates,\n      dateProfile: dateProfile,\n      datesRepDistinctDays: true,\n      renderIntro: hasAttachedAxis ? this.renderHeadAxis : null\n    });\n\n    var allDayContent = options.allDaySlot !== false && function (contentArg) {\n      return createElement(DayTable, __assign({}, splitProps.allDay, {\n        dateProfile: dateProfile,\n        dayTableModel: dayTableModel,\n        nextDayThreshold: options.nextDayThreshold,\n        tableMinWidth: contentArg.tableMinWidth,\n        colGroupNode: contentArg.tableColGroupNode,\n        renderRowIntro: hasAttachedAxis ? _this.renderTableRowAxis : null,\n        showWeekNumbers: false,\n        expandRows: false,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      }, _this.getAllDayMaxEventProps()));\n    };\n\n    var timeGridContent = function timeGridContent(contentArg) {\n      return createElement(DayTimeCols, __assign({}, splitProps.timed, {\n        dayTableModel: dayTableModel,\n        dateProfile: dateProfile,\n        axis: hasAttachedAxis,\n        slotDuration: options.slotDuration,\n        slatMetas: slatMetas,\n        forPrint: props.forPrint,\n        tableColGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        onSlatCoords: _this.handleSlatCoords,\n        expandRows: contentArg.expandRows,\n        onScrollTopRequest: _this.handleScrollTopRequest\n      }));\n    };\n\n    return hasDetachedAxis ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords) : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n  };\n\n  return DayTimeColsView;\n}(TimeColsView);\n\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, false);\n}\n\nvar OPTION_REFINERS = {\n  allDaySlot: Boolean\n};\nvar main = createPlugin({\n  initialView: 'timeGridWeek',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    timeGrid: {\n      component: DayTimeColsView,\n      usesMinMaxTime: true,\n      allDaySlot: true,\n      slotDuration: '00:30:00',\n      slotEventOverlap: true // a bad name. confused with overlap/constraint system\n\n    },\n    timeGridDay: {\n      type: 'timeGrid',\n      duration: {\n        days: 1\n      }\n    },\n    timeGridWeek: {\n      type: 'timeGrid',\n      duration: {\n        weeks: 1\n      }\n    }\n  }\n});\nexport default main;\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/f/fgs/node_modules/@fullcalendar/timegrid/main.js"],"names":["hasBgRendering","Splitter","createFormatter","createElement","ViewContextType","RenderHook","BaseComponent","createRef","diffDays","buildNavLinkData","WeekNumberRoot","getStickyHeaderDates","ViewRoot","SimpleScrollGrid","getStickyFooterScrollbar","NowTimer","NowIndicatorRoot","renderScrollShim","DateComponent","rangeContainsMarker","startOfDay","asRoughMs","createDuration","RefMap","PositionCache","MoreLinkRoot","setRef","SegHierarchy","groupIntersectingEntries","buildEntryKey","binarySearch","getEntrySpanEnd","StandardEvent","DayCellContent","Fragment","getSegMeta","memoize","sortEventSegs","DayCellRoot","buildIsoString","computeEarliestSegStart","buildEventRangeKey","BgEvent","renderFill","addDurations","multiplyDuration","wholeDivideDurations","intersectRanges","Slicer","formatIsoTimeString","DayHeader","DaySeriesModel","DayTableModel","createPlugin","__extends","__assign","DayTable","AllDaySplitter","_super","apply","arguments","prototype","getKeyInfo","allDay","timed","getKeysForDateSpan","dateSpan","getKeysForEventDef","eventDef","DEFAULT_SLAT_LABEL_FORMAT","hour","minute","omitZeroMinute","meridiem","TimeColsAxisCell","props","classNames","isLabeled","Consumer","context","className","join","isoTimeStr","dateEnv","options","viewApi","labelFormat","slotLabelFormat","Array","isArray","hookProps","level","time","date","toDate","view","text","format","slotLabelClassNames","content","slotLabelContent","defaultContent","renderInnerContent","didMount","slotLabelDidMount","willUnmount","slotLabelWillUnmount","rootElRef","customClassNames","innerElRef","innerContent","ref","concat","TimeBodyAxis","render","slatMetas","map","slatMeta","key","DEFAULT_WEEK_NUM_FORMAT","week","AUTO_ALL_DAY_MAX_EVENT_ROWS","TimeColsView","_this","allDaySplitter","headerElRef","scrollerElRef","state","slatCoords","handleScrollTopRequest","scrollTop","scrollerEl","current","renderHeadAxis","rowKey","frameHeight","dateProfile","range","renderRange","dayCnt","start","end","navLinkAttrs","navLinks","tabIndex","weekNumbers","defaultFormat","style","height","renderTableRowAxis","rowHeight","_a","allDayText","allDayClassNames","allDayContent","renderAllDayInner","allDayDidMount","allDayWillUnmount","handleSlatCoords","setState","renderSimpleLayout","headerRowContent","timeContent","sections","stickyHeaderDates","push","type","isSticky","chunk","elRef","tableClassName","rowContent","outerContent","theme","getClass","liquid","expandRows","Boolean","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","width","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","syncRowHeights","chunks","arg","rowSyncHeights","contentArg","colSpan","isNowIndicator","nowIndicator","clientHeight","tableColGroupNode","unit","nowDate","nowIndicatorTop","safeComputeTop","isAxis","top","colGroups","span","minWidth","getAllDayMaxEventProps","dayMaxEvents","dayMaxEventRows","undefined","TimeColsSlatsCoords","positions","slotDuration","currentRange","startOfDayDate","timeMs","valueOf","slotMinTime","slotMaxTime","computeTimeTop","computeDateTop","when","duration","len","els","length","slatCoverage","milliseconds","slatIndex","slatRemainder","Math","max","min","floor","tops","getHeight","TimeColsSlatsBody","slatElRefs","i","axis","slotLaneClassNames","slotLaneContent","slotLaneDidMount","slotLaneWillUnmount","TimeColsSlats","tableMinWidth","clientWidth","minHeight","componentDidMount","updateSizing","componentDidUpdate","componentWillUnmount","onCoords","rootEl","offsetHeight","collectSlatEls","currentMap","elMap","splitSegsByCol","segs","segsByCol","col","splitInteractionByCol","ui","byRow","affectedInstances","isEvent","_i","seg","TimeColMoreLink","allDayDate","moreCnt","hiddenSegs","allSegs","alignmentElRef","renderMoreLinkInner","extraDateSpan","todayRange","popoverContent","renderPlainFgSegs","handleClick","el","bottom","onClick","shortText","computeFgSegPlacements","segInputs","strictOrder","maxStackCnt","hierarchy","hiddenEntries","addSegs","hiddenGroups","web","buildWeb","stretchWeb","segRects","webToRects","entriesByLevel","buildNode","cacheable","lateral","siblingRange","findNextLevelSegs","nextLevelRes","buildNodes","entry","nextLevelNodes","thickness","lateralStart","lateralEnd","pairs","sort","cmpDescPressures","extractNode","a","b","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","levelCnt","entries","searchIndex","spanStart","spanEnd","topLevelNodes","totalThickness","stretchNode","node","startCoord","prevThickness","allThickness","thicknessFraction","endCoord","newChildren","nextLevelNodes_1","childNode","res","newThickness","rects","processNode","levelCoord","stackDepth","rect","stackForward","processNodes","nodes","nodes_1","keyFunc","workFunc","cache","args","DEFAULT_TIME_FORMAT","TimeColEvent","isShort","defaultTimeFormat","extraClassNames","TimeColMisc","extraHookProps","TimeCol","isSelectMirror","selectMirror","mirrorSegs","eventDrag","eventResize","dateSelectionSegs","interactionAffectedInstances","sortedFgSegs","fgEventSegs","eventOrder","dataAttrs","extraDataAttrs","renderFillSegs","businessHourSegs","bgEventSegs","renderFgSegs","renderNowIndicator","nowIndicatorSegs","segIsInvisible","isDragging","isResizing","isDateSelecting","renderPositionedFgSegs","eventMaxStack","eventShortHeight","eventOrderStrict","_b","eventSelection","isMirror","buildSegInputs","_c","renderHiddenGroups","segRect","segInput","index","instanceId","eventRange","instance","positionCss","computeSegTopBottomCss","left","right","computeSegLeftRightCss","visibility","isSelected","hiddenGroup","compileSegsFromEntries","eventMinHeight","round","fillType","children","segLike","isRtl","shouldOverlap","slotEventOverlap","nearCoord","farCoord","zIndex","hiddenInstances","segEntries","segEntry","TimeColsContent","splitFgEventSegs","splitBgEventSegs","splitBusinessHourSegs","splitNowIndicatorSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","cellElRefs","cells","fgEventSegsByRow","bgEventSegsByRow","businessHourSegsByRow","nowIndicatorSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cell","updateCoords","onColCoords","collectCellEls","TimeCols","processSlotOptions","handleRootEl","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","handleScrollRequest","request","onScrollTopRequest","top_1","ceil","handleColCoords","colCoords","onSlatCoords","scrollResponder","createScrollResponder","prevProps","update","detach","queryHit","positionLeft","positionTop","snapDuration","snapsPerSlot","colIndex","leftToIndex","topToIndex","slatTop","slatHeight","partial","localSnapIndex","snapIndex","dayDate","add","dayEl","lefts","rights","layer","snapDurationOverride","DayTimeColsSlicer","sliceRange","dayRanges","segRange","isStart","isEnd","DayTimeCols","buildDayRanges","slicer","timeColsRef","dayTableModel","sliceProps","sliceNowDate","ranges","headerDates","STOCK_SUB_DURATIONS","hours","minutes","seconds","buildSlatMetas","explicitLabelInterval","dayStart","Date","slatTime","slatIterator","labelInterval","computeLabelInterval","metas","toISOString","slotsPerLabel","DayTimeColsView","buildTimeColsModel","dateProfileGenerator","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","headerContent","dayHeaders","dates","datesRepDistinctDays","renderIntro","allDaySlot","nextDayThreshold","colGroupNode","renderRowIntro","showWeekNumbers","headerAlignElRef","timeGridContent","daySeries","OPTION_REFINERS","main","initialView","optionRefiners","views","timeGrid","component","usesMinMaxTime","timeGridDay","days","timeGridWeek","weeks"],"mappings":"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","sourcesContent":["/*!\nFullCalendar v5.7.2\nDocs & License: https://fullcalendar.io/\n(c) 2021 Adam Shaw\n*/\nimport './main.css';\n\nimport { hasBgRendering, Splitter, createFormatter, createElement, ViewContextType, RenderHook, BaseComponent, createRef, diffDays, buildNavLinkData, WeekNumberRoot, getStickyHeaderDates, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorRoot, renderScrollShim, DateComponent, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkRoot, setRef, SegHierarchy, groupIntersectingEntries, buildEntryKey, binarySearch, getEntrySpanEnd, StandardEvent, DayCellContent, Fragment, getSegMeta, memoize, sortEventSegs, DayCellRoot, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, intersectRanges, Slicer, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign } from 'tslib';\nimport { DayTable } from '@fullcalendar/daygrid';\n\nvar AllDaySplitter = /** @class */ (function (_super) {\n    __extends(AllDaySplitter, _super);\n    function AllDaySplitter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AllDaySplitter.prototype.getKeyInfo = function () {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    };\n    AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    };\n    AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    };\n    return AllDaySplitter;\n}(Splitter));\n\nvar DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    var classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, function (context) {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        var dateEnv = context.dateEnv, options = context.options, viewApi = context.viewApi;\n        var labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        var hookProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(RenderHook, { hookProps: hookProps, classNames: options.slotLabelClassNames, content: options.slotLabelContent, defaultContent: renderInnerContent, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement(\"td\", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), \"data-time\": props.isoTimeStr },\n            createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n                createElement(\"div\", { className: \"fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion\", ref: innerElRef }, innerContent)))); }));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nvar TimeBodyAxis = /** @class */ (function (_super) {\n    __extends(TimeBodyAxis, _super);\n    function TimeBodyAxis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeBodyAxis.prototype.render = function () {\n        return this.props.slatMetas.map(function (slatMeta) { return (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, __assign({}, slatMeta)))); });\n    };\n    return TimeBodyAxis;\n}(BaseComponent));\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nvar AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nvar TimeColsView = /** @class */ (function (_super) {\n    __extends(TimeColsView, _super);\n    function TimeColsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        _this.headerElRef = createRef();\n        _this.rootElRef = createRef();\n        _this.scrollerElRef = createRef();\n        _this.state = {\n            slatCoords: null,\n        };\n        _this.handleScrollTopRequest = function (scrollTop) {\n            var scrollerEl = _this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        _this.renderHeadAxis = function (rowKey, frameHeight) {\n            if (frameHeight === void 0) { frameHeight = ''; }\n            var options = _this.context.options;\n            var dateProfile = _this.props.dateProfile;\n            var range = dateProfile.renderRange;\n            var dayCnt = diffDays(range.start, range.end);\n            var navLinkAttrs = (options.navLinks && dayCnt === 1) // only do in day views (to avoid doing in week views that dont need it)\n                ? { 'data-navlink': buildNavLinkData(range.start, 'week'), tabIndex: 0 }\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberRoot, { date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"th\", { ref: rootElRef, className: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ].concat(classNames).join(' ') },\n                    createElement(\"div\", { className: \"fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid\", style: { height: frameHeight } },\n                        createElement(\"a\", __assign({ ref: innerElRef, className: \"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\" }, navLinkAttrs), innerContent)))); }));\n            }\n            return (createElement(\"th\", { className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        _this.renderTableRowAxis = function (rowHeight) {\n            var _a = _this.context, options = _a.options, viewApi = _a.viewApi;\n            var hookProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"td\", { ref: rootElRef, className: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ].concat(classNames).join(' ') },\n                createElement(\"div\", { className: 'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' + (rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''), style: { height: rowHeight } },\n                    createElement(\"span\", { className: \"fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner\", ref: innerElRef }, innerContent)))); }));\n        };\n        _this.handleSlatCoords = function (slatCoords) {\n            _this.setState({ slatCoords: slatCoords });\n        };\n        return _this;\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    TimeColsView.prototype.renderSimpleLayout = function (headerRowContent, allDayContent, timeContent) {\n        var _a = this, context = _a.context, props = _a.props;\n        var sections = [];\n        var stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return (createElement(\"div\", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections }))); }));\n    };\n    TimeColsView.prototype.renderHScrollLayout = function (headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        var _this = this;\n        var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        var _a = this, context = _a.context, props = _a.props;\n        var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        var sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: function (arg) { return (createElement(\"tr\", null, _this.renderHeadAxis('day', arg.rowSyncHeights[0]))); },\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: function (contentArg) { return (createElement(\"tr\", null, _this.renderTableRowAxis(contentArg.rowSyncHeights[0]))); },\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        var isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: function (arg) { return (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, function (nowDate) {\n                                var nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorRoot, { isAxis: true, date: nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"div\", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); }));\n                                }\n                                return null;\n                            })))); },\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return (createElement(\"div\", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections }))); }));\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    TimeColsView.prototype.getAllDayMaxEventProps = function () {\n        var _a = this.context.options, dayMaxEvents = _a.dayMaxEvents, dayMaxEventRows = _a.dayMaxEventRows;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows };\n    };\n    return TimeColsView;\n}(DateComponent));\nfunction renderAllDayInner(hookProps) {\n    return hookProps.text;\n}\n\nvar TimeColsSlatsCoords = /** @class */ (function () {\n    function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    TimeColsSlatsCoords.prototype.safeComputeTop = function (date) {\n        var dateProfile = this.dateProfile;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            var startOfDayDate = startOfDay(date);\n            var timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    };\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    TimeColsSlatsCoords.prototype.computeDateTop = function (when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    };\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    TimeColsSlatsCoords.prototype.computeTimeTop = function (duration) {\n        var _a = this, positions = _a.positions, dateProfile = _a.dateProfile;\n        var len = positions.els.length;\n        // floating-point value of # of slots covered\n        var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        var slatIndex;\n        var slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    };\n    return TimeColsSlatsCoords;\n}());\n\nvar TimeColsSlatsBody = /** @class */ (function (_super) {\n    __extends(TimeColsSlatsBody, _super);\n    function TimeColsSlatsBody() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeColsSlatsBody.prototype.render = function () {\n        var _a = this, props = _a.props, context = _a.context;\n        var options = context.options;\n        var slatElRefs = props.slatElRefs;\n        return (createElement(\"tbody\", null, props.slatMetas.map(function (slatMeta, i) {\n            var hookProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            var classNames = [\n                'fc-timegrid-slot',\n                'fc-timegrid-slot-lane',\n                slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor',\n            ];\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, __assign({}, slatMeta))),\n                createElement(RenderHook, { hookProps: hookProps, classNames: options.slotLaneClassNames, content: options.slotLaneContent, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement(\"td\", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), \"data-time\": slatMeta.isoTimeStr }, innerContent)); })));\n        })));\n    };\n    return TimeColsSlatsBody;\n}(BaseComponent));\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nvar TimeColsSlats = /** @class */ (function (_super) {\n    __extends(TimeColsSlats, _super);\n    function TimeColsSlats() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rootElRef = createRef();\n        _this.slatElRefs = new RefMap();\n        return _this;\n    }\n    TimeColsSlats.prototype.render = function () {\n        var _a = this, props = _a.props, context = _a.context;\n        return (createElement(\"div\", { className: \"fc-timegrid-slots\", ref: this.rootElRef },\n            createElement(\"table\", { className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    };\n    TimeColsSlats.prototype.componentDidMount = function () {\n        this.updateSizing();\n    };\n    TimeColsSlats.prototype.componentDidUpdate = function () {\n        this.updateSizing();\n    };\n    TimeColsSlats.prototype.componentWillUnmount = function () {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    };\n    TimeColsSlats.prototype.updateSizing = function () {\n        var _a = this, context = _a.context, props = _a.props;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            var rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    };\n    return TimeColsSlats;\n}(BaseComponent));\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map(function (slatMeta) { return elMap[slatMeta.key]; });\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    var segsByCol = [];\n    var i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    var byRow = [];\n    if (!ui) {\n        for (var i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (var i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n            var seg = _a[_i];\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nvar TimeColMoreLink = /** @class */ (function (_super) {\n    __extends(TimeColMoreLink, _super);\n    function TimeColMoreLink() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rootElRef = createRef();\n        return _this;\n    }\n    TimeColMoreLink.prototype.render = function () {\n        var _this = this;\n        var props = this.props;\n        return (createElement(MoreLinkRoot, { allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, alignmentElRef: this.rootElRef, defaultContent: renderMoreLinkInner, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: function () { return renderPlainFgSegs(props.hiddenSegs, props); } }, function (rootElRef, classNames, innerElRef, innerContent, handleClick) { return (createElement(\"a\", { ref: function (el) {\n                setRef(rootElRef, el);\n                setRef(_this.rootElRef, el);\n            }, className: ['fc-timegrid-more-link'].concat(classNames).join(' '), style: { top: props.top, bottom: props.bottom }, onClick: handleClick },\n            createElement(\"div\", { ref: innerElRef, className: \"fc-timegrid-more-link-inner fc-sticky\" }, innerContent))); }));\n    };\n    return TimeColMoreLink;\n}(BaseComponent));\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction computeFgSegPlacements(segInputs, strictOrder, maxStackCnt) {\n    var hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    var hiddenEntries = hierarchy.addSegs(segInputs);\n    var hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    var web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    var segRects = webToRects(web);\n    return { segRects: segRects, hiddenGroups: hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    var entriesByLevel = hierarchy.entriesByLevel;\n    var buildNode = cacheable(function (level, lateral) { return level + ':' + lateral; }, function (level, lateral) {\n        var siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        var nextLevelRes = buildNodes(siblingRange, buildNode);\n        var entry = entriesByLevel[level][lateral];\n        return [\n            __assign(__assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    var level = siblingRange.level, lateralStart = siblingRange.lateralStart, lateralEnd = siblingRange.lateralEnd;\n    var lateral = lateralStart;\n    var pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    var levelCoords = hierarchy.levelCoords, entriesByLevel = hierarchy.entriesByLevel;\n    var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    var levelCnt = levelCoords.length;\n    var level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        var entries = entriesByLevel[level];\n        var entry = void 0;\n        var searchIndex = binarySearch(entries, subjectEntry.spanStart, getEntrySpanEnd);\n        var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        var lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.spanStart < subjectEntry.spanEnd) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level: level, lateralStart: lateralStart, lateralEnd: lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    var stretchNode = cacheable(function (node, startCoord, prevThickness) { return buildEntryKey(node); }, function (node, startCoord, prevThickness) {\n        var nextLevelNodes = node.nextLevelNodes, thickness = node.thickness;\n        var allThickness = thickness + prevThickness;\n        var thicknessFraction = thickness / allThickness;\n        var endCoord;\n        var newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (var _i = 0, nextLevelNodes_1 = nextLevelNodes; _i < nextLevelNodes_1.length; _i++) {\n                var childNode = nextLevelNodes_1[_i];\n                if (endCoord === undefined) {\n                    var res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    var res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        var newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, __assign(__assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map(function (node) { return stretchNode(node, 0, 0)[1]; });\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    var rects = [];\n    var processNode = cacheable(function (node, levelCoord, stackDepth) { return buildEntryKey(node); }, function (node, levelCoord, stackDepth) {\n        var rect = __assign(__assign({}, node), { levelCoord: levelCoord,\n            stackDepth: stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        var stackForward = 0;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    var cache = {};\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var key = keyFunc.apply(void 0, args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc.apply(void 0, args));\n    };\n}\n\nvar DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nvar TimeColEvent = /** @class */ (function (_super) {\n    __extends(TimeColEvent, _super);\n    function TimeColEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeColEvent.prototype.render = function () {\n        var classNames = [\n            'fc-timegrid-event',\n            'fc-v-event',\n        ];\n        if (this.props.isShort) {\n            classNames.push('fc-timegrid-event-short');\n        }\n        return (createElement(StandardEvent, __assign({}, this.props, { defaultTimeFormat: DEFAULT_TIME_FORMAT, extraClassNames: classNames })));\n    };\n    return TimeColEvent;\n}(BaseComponent));\n\nvar TimeColMisc = /** @class */ (function (_super) {\n    __extends(TimeColMisc, _super);\n    function TimeColMisc() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeColMisc.prototype.render = function () {\n        var props = this.props;\n        return (createElement(DayCellContent, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (innerElRef, innerContent) { return (innerContent &&\n            createElement(\"div\", { className: \"fc-timegrid-col-misc\", ref: innerElRef }, innerContent)); }));\n    };\n    return TimeColMisc;\n}(BaseComponent));\n\nvar TimeCol = /** @class */ (function (_super) {\n    __extends(TimeCol, _super);\n    function TimeCol() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.sortEventSegs = memoize(sortEventSegs);\n        _this.computeFgSegPlacements = memoize(computeFgSegPlacements); // only for non-print, non-mirror\n        return _this;\n    }\n    TimeCol.prototype.render = function () {\n        var _this = this;\n        var _a = this, props = _a.props, context = _a.context;\n        var isSelectMirror = context.options.selectMirror;\n        var mirrorSegs = (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        var interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, context.options.eventOrder);\n        return (createElement(DayCellRoot, { elRef: props.elRef, date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (rootElRef, classNames, dataAttrs) { return (createElement(\"td\", __assign({ ref: rootElRef, className: ['fc-timegrid-col'].concat(classNames, props.extraClassNames || []).join(' ') }, dataAttrs, props.extraDataAttrs),\n            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                    _this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                    _this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                    _this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n                createElement(\"div\", { className: \"fc-timegrid-col-events\" }, _this.renderFgSegs(sortedFgSegs, interactionAffectedInstances)),\n                createElement(\"div\", { className: \"fc-timegrid-col-events\" }, _this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror))),\n                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, _this.renderNowIndicator(props.nowIndicatorSegs)),\n                createElement(TimeColMisc, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps })))); }));\n    };\n    TimeCol.prototype.renderFgSegs = function (sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting) {\n        var props = this.props;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        if (props.slatCoords) {\n            return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting);\n        }\n        return null;\n    };\n    TimeCol.prototype.renderPositionedFgSegs = function (segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting) {\n        var _this = this;\n        var _a = this.context.options, eventMaxStack = _a.eventMaxStack, eventShortHeight = _a.eventShortHeight, eventOrderStrict = _a.eventOrderStrict;\n        var _b = this.props, eventSelection = _b.eventSelection, todayRange = _b.todayRange, nowDate = _b.nowDate;\n        var isMirror = isDragging || isResizing || isDateSelecting;\n        var segInputs = this.buildSegInputs(segs);\n        var _c = isMirror ? computeFgSegPlacements(segInputs) : // don't use memoized\n            this.computeFgSegPlacements(segInputs, eventOrderStrict, eventMaxStack), segRects = _c.segRects, hiddenGroups = _c.hiddenGroups;\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segRects.map(function (segRect) {\n                var seg = segs[segRect.segInput.index];\n                var instanceId = seg.eventRange.instance.instanceId;\n                var positionCss = __assign(__assign({}, _this.computeSegTopBottomCss(segRect.segInput)), (isMirror ? { left: 0, right: 0 } : _this.computeSegLeftRightCss(segRect)));\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' + (segRect.stackForward > 0 ? ' fc-timegrid-event-harness-inset' : ''), key: instanceId, style: __assign({ visibility: segIsInvisible[instanceId] ? 'hidden' : '' }, positionCss) },\n                    createElement(TimeColEvent, __assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: (segRect.spanEnd - segRect.spanStart) < eventShortHeight }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    };\n    // will already have eventMinHeight applied because segInputs already had it\n    TimeCol.prototype.renderHiddenGroups = function (hiddenGroups, segs) {\n        var _this = this;\n        var _a = this.props, extraDateSpan = _a.extraDateSpan, dateProfile = _a.dateProfile, todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;\n        return (createElement(Fragment, null, hiddenGroups.map(function (hiddenGroup) {\n            var positionCss = _this.computeSegTopBottomCss(hiddenGroup);\n            var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    };\n    TimeCol.prototype.buildSegInputs = function (segs) {\n        var _a = this.props, date = _a.date, slatCoords = _a.slatCoords;\n        var eventMinHeight = this.context.options.eventMinHeight;\n        var segInputs = [];\n        for (var i = 0; i < segs.length; i += 1) {\n            var seg = segs[i];\n            var spanStart = slatCoords.computeDateTop(seg.start, date);\n            var spanEnd = Math.max(spanStart + (eventMinHeight || 0), // yuck\n            slatCoords.computeDateTop(seg.end, date));\n            segInputs.push({\n                index: i,\n                spanStart: Math.round(spanStart),\n                spanEnd: Math.round(spanEnd),\n                thickness: 1,\n            });\n        }\n        return segInputs;\n    };\n    TimeCol.prototype.renderFillSegs = function (segs, fillType) {\n        var _this = this;\n        var props = this.props;\n        if (!props.slatCoords) {\n            return null;\n        }\n        var segInputs = this.buildSegInputs(segs);\n        var children = segInputs.map(function (segInput) {\n            var seg = segs[segInput.index];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: _this.computeSegTopBottomCss(segInput) }, fillType === 'bg-event' ?\n                createElement(BgEvent, __assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    };\n    TimeCol.prototype.renderNowIndicator = function (segs) {\n        var _a = this.props, slatCoords = _a.slatCoords, date = _a.date;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map(function (seg, i) { return (createElement(NowIndicatorRoot, { isAxis: false, date: date, \n            // key doesn't matter. will only ever be one\n            key: i }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"div\", { ref: rootElRef, className: ['fc-timegrid-now-indicator-line'].concat(classNames).join(' '), style: { top: slatCoords.computeDateTop(seg.start, date) } }, innerContent)); })); });\n    };\n    TimeCol.prototype.computeSegTopBottomCss = function (segLike) {\n        return {\n            top: segLike.spanStart,\n            bottom: -segLike.spanEnd,\n        };\n    };\n    TimeCol.prototype.computeSegLeftRightCss = function (segRect) {\n        var _a = this.context, isRtl = _a.isRtl, options = _a.options;\n        var shouldOverlap = options.slotEventOverlap;\n        var nearCoord = segRect.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        var farCoord = segRect.levelCoord + segRect.thickness; // the right side if LTR. the left side if RTL. floating-point\n        var left; // amount of space from left edge, a fraction of the total width\n        var right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        var props = {\n            zIndex: segRect.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segRect.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    };\n    return TimeCol;\n}(BaseComponent));\nfunction renderPlainFgSegs(sortedFgSegs, _a) {\n    var todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;\n    var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map(function (seg) {\n        var instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, __assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map(function (segEntry) { return allSegs[segEntry.segInput.index]; });\n}\n\nvar TimeColsContent = /** @class */ (function (_super) {\n    __extends(TimeColsContent, _super);\n    function TimeColsContent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.splitFgEventSegs = memoize(splitSegsByCol);\n        _this.splitBgEventSegs = memoize(splitSegsByCol);\n        _this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        _this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        _this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        _this.splitEventDrag = memoize(splitInteractionByCol);\n        _this.splitEventResize = memoize(splitInteractionByCol);\n        _this.rootElRef = createRef();\n        _this.cellElRefs = new RefMap();\n        return _this;\n    }\n    TimeColsContent.prototype.render = function () {\n        var _this = this;\n        var _a = this, props = _a.props, context = _a.context;\n        var nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        var colCnt = props.cells.length;\n        var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", null,\n                    createElement(\"tr\", null,\n                        props.axis && (createElement(\"td\", { className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorRoot, { isAxis: true, date: props.nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement(\"div\", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); })))))),\n                        props.cells.map(function (cell, i) { return (createElement(TimeCol, { key: cell.key, elRef: _this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraHookProps: cell.extraHookProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint })); }))))));\n    };\n    TimeColsContent.prototype.componentDidMount = function () {\n        this.updateCoords();\n    };\n    TimeColsContent.prototype.componentDidUpdate = function () {\n        this.updateCoords();\n    };\n    TimeColsContent.prototype.updateCoords = function () {\n        var props = this.props;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    };\n    return TimeColsContent;\n}(BaseComponent));\nfunction collectCellEls(elMap, cells) {\n    return cells.map(function (cell) { return elMap[cell.key]; });\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nvar TimeCols = /** @class */ (function (_super) {\n    __extends(TimeCols, _super);\n    function TimeCols() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.processSlotOptions = memoize(processSlotOptions);\n        _this.state = {\n            slatCoords: null,\n        };\n        _this.handleRootEl = function (el) {\n            if (el) {\n                _this.context.registerInteractiveComponent(_this, {\n                    el: el,\n                    isHitComboAllowed: _this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                _this.context.unregisterInteractiveComponent(_this);\n            }\n        };\n        _this.handleScrollRequest = function (request) {\n            var onScrollTopRequest = _this.props.onScrollTopRequest;\n            var slatCoords = _this.state.slatCoords;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    var top_1 = slatCoords.computeTimeTop(request.time);\n                    top_1 = Math.ceil(top_1); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top_1) {\n                        top_1 += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top_1);\n                }\n                return true;\n            }\n            return false;\n        };\n        _this.handleColCoords = function (colCoords) {\n            _this.colCoords = colCoords;\n        };\n        _this.handleSlatCoords = function (slatCoords) {\n            _this.setState({ slatCoords: slatCoords });\n            if (_this.props.onSlatCoords) {\n                _this.props.onSlatCoords(slatCoords);\n            }\n        };\n        return _this;\n    }\n    TimeCols.prototype.render = function () {\n        var _a = this, props = _a.props, state = _a.state;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    };\n    TimeCols.prototype.componentDidMount = function () {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    };\n    TimeCols.prototype.componentDidUpdate = function (prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    };\n    TimeCols.prototype.componentWillUnmount = function () {\n        this.scrollResponder.detach();\n    };\n    TimeCols.prototype.queryHit = function (positionLeft, positionTop) {\n        var _a = this.context, dateEnv = _a.dateEnv, options = _a.options;\n        var colCoords = this.colCoords;\n        var dateProfile = this.props.dateProfile;\n        var slatCoords = this.state.slatCoords;\n        var _b = this.processSlotOptions(this.props.slotDuration, options.snapDuration), snapDuration = _b.snapDuration, snapsPerSlot = _b.snapsPerSlot;\n        var colIndex = colCoords.leftToIndex(positionLeft);\n        var slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            var cell = this.props.cells[colIndex];\n            var slatTop = slatCoords.positions.tops[slatIndex];\n            var slatHeight = slatCoords.positions.getHeight(slatIndex);\n            var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            var dayDate = this.props.cells[colIndex].date;\n            var time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            var start = dateEnv.add(dayDate, time);\n            var end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile: dateProfile,\n                dateSpan: __assign({ range: { start: start, end: end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    };\n    return TimeCols;\n}(DateComponent));\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    var snapDuration = snapDurationOverride || slotDuration;\n    var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration: snapDuration, snapsPerSlot: snapsPerSlot };\n}\n\nvar DayTimeColsSlicer = /** @class */ (function (_super) {\n    __extends(DayTimeColsSlicer, _super);\n    function DayTimeColsSlicer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayTimeColsSlicer.prototype.sliceRange = function (range, dayRanges) {\n        var segs = [];\n        for (var col = 0; col < dayRanges.length; col += 1) {\n            var segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col: col,\n                });\n            }\n        }\n        return segs;\n    };\n    return DayTimeColsSlicer;\n}(Slicer));\n\nvar DayTimeCols = /** @class */ (function (_super) {\n    __extends(DayTimeCols, _super);\n    function DayTimeCols() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.buildDayRanges = memoize(buildDayRanges);\n        _this.slicer = new DayTimeColsSlicer();\n        _this.timeColsRef = createRef();\n        return _this;\n    }\n    DayTimeCols.prototype.render = function () {\n        var _this = this;\n        var _a = this, props = _a.props, context = _a.context;\n        var dateProfile = props.dateProfile, dayTableModel = props.dayTableModel;\n        var isNowIndicator = context.options.nowIndicator;\n        var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' }, function (nowDate, todayRange) { return (createElement(TimeCols, __assign({ ref: _this.timeColsRef }, _this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: isNowIndicator && _this.slicer.sliceNowDate(nowDate, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords }))); }));\n    };\n    return DayTimeCols;\n}(DateComponent));\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    var ranges = [];\n    for (var _i = 0, _a = dayTableModel.headerDates; _i < _a.length; _i++) {\n        var date = _a[_i];\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nvar STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    var dayStart = new Date(0);\n    var slatTime = slotMinTime;\n    var slatIterator = createDuration(0);\n    var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    var metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        var date = dateEnv.add(dayStart, slatTime);\n        var isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date: date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled: isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    var i;\n    var labelInterval;\n    var slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nvar DayTimeColsView = /** @class */ (function (_super) {\n    __extends(DayTimeColsView, _super);\n    function DayTimeColsView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.buildTimeColsModel = memoize(buildTimeColsModel);\n        _this.buildSlatMetas = memoize(buildSlatMetas);\n        return _this;\n    }\n    DayTimeColsView.prototype.render = function () {\n        var _this = this;\n        var _a = this.context, options = _a.options, dateEnv = _a.dateEnv, dateProfileGenerator = _a.dateProfileGenerator;\n        var props = this.props;\n        var dateProfile = props.dateProfile;\n        var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        var splitProps = this.allDaySplitter.splitProps(props);\n        var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        var dayMinWidth = options.dayMinWidth;\n        var hasAttachedAxis = !dayMinWidth;\n        var hasDetachedAxis = dayMinWidth;\n        var headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        var allDayContent = (options.allDaySlot !== false) && (function (contentArg) { return (createElement(DayTable, __assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? _this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: _this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, _this.getAllDayMaxEventProps()))); });\n        var timeGridContent = function (contentArg) { return (createElement(DayTimeCols, __assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: _this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: _this.handleScrollTopRequest }))); };\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    };\n    return DayTimeColsView;\n}(TimeColsView));\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nvar OPTION_REFINERS = {\n    allDaySlot: Boolean,\n};\n\nvar main = createPlugin({\n    initialView: 'timeGridWeek',\n    optionRefiners: OPTION_REFINERS,\n    views: {\n        timeGrid: {\n            component: DayTimeColsView,\n            usesMinMaxTime: true,\n            allDaySlot: true,\n            slotDuration: '00:30:00',\n            slotEventOverlap: true, // a bad name. confused with overlap/constraint system\n        },\n        timeGridDay: {\n            type: 'timeGrid',\n            duration: { days: 1 },\n        },\n        timeGridWeek: {\n            type: 'timeGrid',\n            duration: { weeks: 1 },\n        },\n    },\n});\n\nexport default main;\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n"]},"metadata":{},"sourceType":"module"}