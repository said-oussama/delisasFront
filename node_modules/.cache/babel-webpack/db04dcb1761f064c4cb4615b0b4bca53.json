{"ast":null,"code":"import _slicedToArray from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _inherits from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createForOfIteratorHelper from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\n\nimport * as Éµngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\n\nvar MapEventManager = /*#__PURE__*/function () {\n  function MapEventManager(_ngZone) {\n    _classCallCheck(this, MapEventManager);\n\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Clears all currently-registered event listeners. */\n\n\n  _createClass(MapEventManager, [{\n    key: \"_clearListeners\",\n    value: function _clearListeners() {\n      var _iterator = _createForOfIteratorHelper(this._listeners),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var listener = _step.value;\n          listener.remove();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this._listeners = [];\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n\n  }, {\n    key: \"getLazyEmitter\",\n    value: function getLazyEmitter(name) {\n      var _this = this;\n\n      return this._targetStream.pipe(switchMap(function (target) {\n        var observable = new Observable(function (observer) {\n          // If the target hasn't been initialized yet, cache the observer so it can be added later.\n          if (!target) {\n            _this._pending.push({\n              observable: observable,\n              observer: observer\n            });\n\n            return undefined;\n          }\n\n          var listener = target.addListener(name, function (event) {\n            _this._ngZone.run(function () {\n              return observer.next(event);\n            });\n          });\n\n          _this._listeners.push(listener);\n\n          return function () {\n            return listener.remove();\n          };\n        });\n        return observable;\n      }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n\n  }, {\n    key: \"setTarget\",\n    value: function setTarget(target) {\n      var currentTarget = this._targetStream.value;\n\n      if (target === currentTarget) {\n        return;\n      } // Clear the listeners from the pre-existing target.\n\n\n      if (currentTarget) {\n        this._clearListeners();\n\n        this._pending = [];\n      }\n\n      this._targetStream.next(target); // Add the listeners that were bound before the map was initialized.\n\n\n      this._pending.forEach(function (subscriber) {\n        return subscriber.observable.subscribe(subscriber.observer);\n      });\n\n      this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._clearListeners();\n\n      this._pending = [];\n\n      this._targetStream.complete();\n    }\n  }]);\n\n  return MapEventManager;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** default options set to the Googleplex */\n\n\nvar DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\n\nvar DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\n\nvar DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\n\nvar GoogleMap = /*#__PURE__*/function () {\n  function GoogleMap(_elementRef, _ngZone, platformId) {\n    _classCallCheck(this, GoogleMap);\n\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n\n    if (this._isBrowser) {\n      var googleMapsWindow = window;\n\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n    }\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"center\",\n    set: function set(center) {\n      this._center = center;\n    }\n  }, {\n    key: \"zoom\",\n    set: function set(zoom) {\n      this._zoom = zoom;\n    }\n  }, {\n    key: \"options\",\n    set: function set(options) {\n      this._options = options || DEFAULT_OPTIONS;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['height'] || changes['width']) {\n        this._setSize();\n      }\n\n      var googleMap = this.googleMap;\n\n      if (googleMap) {\n        if (changes['options']) {\n          googleMap.setOptions(this._combineOptions());\n        }\n\n        if (changes['center'] && this._center) {\n          googleMap.setCenter(this._center);\n        } // Note that the zoom can be zero.\n\n\n        if (changes['zoom'] && this._zoom != null) {\n          googleMap.setZoom(this._zoom);\n        }\n\n        if (changes['mapTypeId'] && this.mapTypeId) {\n          googleMap.setMapTypeId(this.mapTypeId);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      // It should be a noop during server-side rendering.\n      if (this._isBrowser) {\n        this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n\n        this._setSize(); // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n\n\n        this._ngZone.runOutsideAngular(function () {\n          _this2.googleMap = new google.maps.Map(_this2._mapEl, _this2._combineOptions());\n        });\n\n        this._eventManager.setTarget(this.googleMap);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(bounds, padding) {\n      this._assertInitialized();\n\n      this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n\n  }, {\n    key: \"panBy\",\n    value: function panBy(x, y) {\n      this._assertInitialized();\n\n      this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n\n  }, {\n    key: \"panTo\",\n    value: function panTo(latLng) {\n      this._assertInitialized();\n\n      this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n\n  }, {\n    key: \"panToBounds\",\n    value: function panToBounds(latLngBounds, padding) {\n      this._assertInitialized();\n\n      this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      this._assertInitialized();\n\n      return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      this._assertInitialized();\n\n      return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n\n  }, {\n    key: \"getClickableIcons\",\n    value: function getClickableIcons() {\n      this._assertInitialized();\n\n      return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n\n  }, {\n    key: \"getHeading\",\n    value: function getHeading() {\n      this._assertInitialized();\n\n      return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n\n  }, {\n    key: \"getMapTypeId\",\n    value: function getMapTypeId() {\n      this._assertInitialized();\n\n      return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n\n  }, {\n    key: \"getProjection\",\n    value: function getProjection() {\n      this._assertInitialized();\n\n      return this.googleMap.getProjection();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n\n  }, {\n    key: \"getStreetView\",\n    value: function getStreetView() {\n      this._assertInitialized();\n\n      return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n\n  }, {\n    key: \"getTilt\",\n    value: function getTilt() {\n      this._assertInitialized();\n\n      return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      this._assertInitialized();\n\n      return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n\n  }, {\n    key: \"controls\",\n    get: function get() {\n      this._assertInitialized();\n\n      return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      this._assertInitialized();\n\n      return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n\n  }, {\n    key: \"mapTypes\",\n    get: function get() {\n      this._assertInitialized();\n\n      return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n\n  }, {\n    key: \"overlayMapTypes\",\n    get: function get() {\n      this._assertInitialized();\n\n      return this.googleMap.overlayMapTypes;\n    }\n  }, {\n    key: \"_setSize\",\n    value: function _setSize() {\n      if (this._mapEl) {\n        var styles = this._mapEl.style;\n        styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n        styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n      }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var _a, _b;\n\n      var options = this._options || {};\n      return Object.assign(Object.assign({}, options), {\n        // It's important that we set **some** kind of `center` and `zoom`, otherwise\n        // Google Maps will render a blank rectangle which looks broken.\n        center: this._center || options.center || DEFAULT_OPTIONS.center,\n        zoom: (_b = (_a = this._zoom) !== null && _a !== void 0 ? _a : options.zoom) !== null && _b !== void 0 ? _b : DEFAULT_OPTIONS.zoom,\n        // Passing in an undefined `mapTypeId` seems to break tile loading\n        // so make sure that we have some kind of default (see #22082).\n        mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n      });\n    }\n    /** Asserts that the map has been initialized. */\n\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n    }\n  }]);\n\n  return GoogleMap;\n}();\n\nGoogleMap.Éµfac = function GoogleMap_Factory(t) {\n  return new (t || GoogleMap)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID));\n};\n\nGoogleMap.Éµcmp = /*@__PURE__*/Éµngcc0.ÉµÉµdefineComponent({\n  type: GoogleMap,\n  selectors: [[\"google-map\"]],\n  inputs: {\n    height: \"height\",\n    width: \"width\",\n    center: \"center\",\n    zoom: \"zoom\",\n    options: \"options\",\n    mapTypeId: \"mapTypeId\"\n  },\n  outputs: {\n    boundsChanged: \"boundsChanged\",\n    centerChanged: \"centerChanged\",\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    mapDragstart: \"mapDragstart\",\n    headingChanged: \"headingChanged\",\n    idle: \"idle\",\n    maptypeidChanged: \"maptypeidChanged\",\n    mapMousemove: \"mapMousemove\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    projectionChanged: \"projectionChanged\",\n    mapRightclick: \"mapRightclick\",\n    tilesloaded: \"tilesloaded\",\n    tiltChanged: \"tiltChanged\",\n    zoomChanged: \"zoomChanged\"\n  },\n  exportAs: [\"googleMap\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"map-container\"]],\n  template: function GoogleMap_Template(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµprojectionDef();\n      Éµngcc0.ÉµÉµelement(0, \"div\", 0);\n      Éµngcc0.ÉµÉµprojection(1);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nGoogleMap.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\nGoogleMap.propDecorators = {\n  height: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  mapTypeId: [{\n    type: Input\n  }],\n  center: [{\n    type: Input\n  }],\n  zoom: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  boundsChanged: [{\n    type: Output\n  }],\n  centerChanged: [{\n    type: Output\n  }],\n  mapClick: [{\n    type: Output\n  }],\n  mapDblclick: [{\n    type: Output\n  }],\n  mapDrag: [{\n    type: Output\n  }],\n  mapDragend: [{\n    type: Output\n  }],\n  mapDragstart: [{\n    type: Output\n  }],\n  headingChanged: [{\n    type: Output\n  }],\n  idle: [{\n    type: Output\n  }],\n  maptypeidChanged: [{\n    type: Output\n  }],\n  mapMousemove: [{\n    type: Output\n  }],\n  mapMouseout: [{\n    type: Output\n  }],\n  mapMouseover: [{\n    type: Output\n  }],\n  projectionChanged: [{\n    type: Output\n  }],\n  mapRightclick: [{\n    type: Output\n  }],\n  tilesloaded: [{\n    type: Output\n  }],\n  tiltChanged: [{\n    type: Output\n  }],\n  zoomChanged: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }]\n  });\n})();\n\nvar cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\n\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n\n  return cssUnitsPattern.test(value) ? value : \"\".concat(value, \"px\");\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MapBaseLayer = /*#__PURE__*/function () {\n  function MapBaseLayer(_map, _ngZone) {\n    _classCallCheck(this, MapBaseLayer);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n\n  _createClass(MapBaseLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      if (this._map._isBrowser) {\n        this._ngZone.runOutsideAngular(function () {\n          _this3._initializeObject();\n        });\n\n        this._assertInitialized();\n\n        this._setMap();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._unsetMap();\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n    }\n  }, {\n    key: \"_initializeObject\",\n    value: function _initializeObject() {}\n  }, {\n    key: \"_setMap\",\n    value: function _setMap() {}\n  }, {\n    key: \"_unsetMap\",\n    value: function _unsetMap() {}\n  }]);\n\n  return MapBaseLayer;\n}();\n\nMapBaseLayer.Éµfac = function MapBaseLayer_Factory(t) {\n  return new (t || MapBaseLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapBaseLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapBaseLayer,\n  selectors: [[\"map-base-layer\"]],\n  exportAs: [\"mapBaseLayer\"]\n});\n\nMapBaseLayer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\n\n\nvar MapBicyclingLayer = /*#__PURE__*/function (_MapBaseLayer) {\n  _inherits(MapBicyclingLayer, _MapBaseLayer);\n\n  var _super = _createSuper(MapBicyclingLayer);\n\n  function MapBicyclingLayer() {\n    _classCallCheck(this, MapBicyclingLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapBicyclingLayer, [{\n    key: \"_initializeObject\",\n    value: function _initializeObject() {\n      this.bicyclingLayer = new google.maps.BicyclingLayer();\n    }\n  }, {\n    key: \"_setMap\",\n    value: function _setMap() {\n      this._assertLayerInitialized();\n\n      this.bicyclingLayer.setMap(this._map.googleMap);\n    }\n  }, {\n    key: \"_unsetMap\",\n    value: function _unsetMap() {\n      if (this.bicyclingLayer) {\n        this.bicyclingLayer.setMap(null);\n      }\n    }\n  }, {\n    key: \"_assertLayerInitialized\",\n    value: function _assertLayerInitialized() {\n      if (!this.bicyclingLayer) {\n        throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n      }\n    }\n  }]);\n\n  return MapBicyclingLayer;\n}(MapBaseLayer);\n\nMapBicyclingLayer.Éµfac = /*@__PURE__*/function () {\n  var ÉµMapBicyclingLayer_BaseFactory;\n  return function MapBicyclingLayer_Factory(t) {\n    return (ÉµMapBicyclingLayer_BaseFactory || (ÉµMapBicyclingLayer_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(MapBicyclingLayer)))(t || MapBicyclingLayer);\n  };\n}();\n\nMapBicyclingLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapBicyclingLayer,\n  selectors: [[\"map-bicycling-layer\"]],\n  exportAs: [\"mapBicyclingLayer\"],\n  features: [Éµngcc0.ÉµÉµInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\n\n\nvar MapCircle = /*#__PURE__*/function () {\n  function MapCircle(_map, _ngZone) {\n    _classCallCheck(this, MapCircle);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  _createClass(MapCircle, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"center\",\n    set: function set(center) {\n      this._center.next(center);\n    }\n  }, {\n    key: \"radius\",\n    set: function set(radius) {\n      this._radius.next(radius);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this4 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this4._ngZone.runOutsideAngular(function () {\n            _this4.circle = new google.maps.Circle(options);\n          });\n\n          _this4._assertInitialized();\n\n          _this4.circle.setMap(_this4._map.googleMap);\n\n          _this4._eventManager.setTarget(_this4.circle);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForCenterChanges();\n\n        this._watchForRadiusChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.circle) {\n        this.circle.setMap(null);\n      }\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      this._assertInitialized();\n\n      return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      this._assertInitialized();\n\n      return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      this._assertInitialized();\n\n      return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n\n  }, {\n    key: \"getEditable\",\n    value: function getEditable() {\n      this._assertInitialized();\n\n      return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      this._assertInitialized();\n\n      return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      this._assertInitialized();\n\n      return this.circle.getVisible();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return combineLatest([this._options, this._center, this._radius]).pipe(map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            options = _ref2[0],\n            center = _ref2[1],\n            radius = _ref2[2];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          center: center || options.center,\n          radius: radius !== undefined ? radius : options.radius\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this5 = this;\n\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        _this5._assertInitialized();\n\n        _this5.circle.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_watchForCenterChanges\",\n    value: function _watchForCenterChanges() {\n      var _this6 = this;\n\n      this._center.pipe(takeUntil(this._destroyed)).subscribe(function (center) {\n        if (center) {\n          _this6._assertInitialized();\n\n          _this6.circle.setCenter(center);\n        }\n      });\n    }\n  }, {\n    key: \"_watchForRadiusChanges\",\n    value: function _watchForRadiusChanges() {\n      var _this7 = this;\n\n      this._radius.pipe(takeUntil(this._destroyed)).subscribe(function (radius) {\n        if (radius !== undefined) {\n          _this7._assertInitialized();\n\n          _this7.circle.setRadius(radius);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.circle) {\n          throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapCircle;\n}();\n\nMapCircle.Éµfac = function MapCircle_Factory(t) {\n  return new (t || MapCircle)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapCircle.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapCircle,\n  selectors: [[\"map-circle\"]],\n  inputs: {\n    options: \"options\",\n    center: \"center\",\n    radius: \"radius\"\n  },\n  outputs: {\n    centerChanged: \"centerChanged\",\n    circleClick: \"circleClick\",\n    circleDblclick: \"circleDblclick\",\n    circleDrag: \"circleDrag\",\n    circleDragend: \"circleDragend\",\n    circleDragstart: \"circleDragstart\",\n    circleMousedown: \"circleMousedown\",\n    circleMousemove: \"circleMousemove\",\n    circleMouseout: \"circleMouseout\",\n    circleMouseover: \"circleMouseover\",\n    circleMouseup: \"circleMouseup\",\n    radiusChanged: \"radiusChanged\",\n    circleRightclick: \"circleRightclick\"\n  },\n  exportAs: [\"mapCircle\"]\n});\n\nMapCircle.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapCircle.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  center: [{\n    type: Input\n  }],\n  radius: [{\n    type: Input\n  }],\n  centerChanged: [{\n    type: Output\n  }],\n  circleClick: [{\n    type: Output\n  }],\n  circleDblclick: [{\n    type: Output\n  }],\n  circleDrag: [{\n    type: Output\n  }],\n  circleDragend: [{\n    type: Output\n  }],\n  circleDragstart: [{\n    type: Output\n  }],\n  circleMousedown: [{\n    type: Output\n  }],\n  circleMousemove: [{\n    type: Output\n  }],\n  circleMouseout: [{\n    type: Output\n  }],\n  circleMouseover: [{\n    type: Output\n  }],\n  circleMouseup: [{\n    type: Output\n  }],\n  radiusChanged: [{\n    type: Output\n  }],\n  circleRightclick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\n\n\nvar MapDirectionsRenderer = /*#__PURE__*/function () {\n  function MapDirectionsRenderer(_googleMap, _ngZone) {\n    _classCallCheck(this, MapDirectionsRenderer);\n\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n\n\n  _createClass(MapDirectionsRenderer, [{\n    key: \"directions\",\n    set: function set(directions) {\n      this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n\n  }, {\n    key: \"options\",\n    set: function set(options) {\n      this._options = options;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this8 = this;\n\n      if (this._googleMap._isBrowser) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(function () {\n          _this8.directionsRenderer = new google.maps.DirectionsRenderer(_this8._combineOptions());\n        });\n\n        this._assertInitialized();\n\n        this.directionsRenderer.setMap(this._googleMap.googleMap);\n\n        this._eventManager.setTarget(this.directionsRenderer);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (this.directionsRenderer) {\n        if (changes['options']) {\n          this.directionsRenderer.setOptions(this._combineOptions());\n        }\n\n        if (changes['directions'] && this._directions !== undefined) {\n          this.directionsRenderer.setDirections(this._directions);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      if (this.directionsRenderer) {\n        this.directionsRenderer.setMap(null);\n      }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n\n  }, {\n    key: \"getDirections\",\n    value: function getDirections() {\n      this._assertInitialized();\n\n      return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n\n  }, {\n    key: \"getPanel\",\n    value: function getPanel() {\n      this._assertInitialized();\n\n      return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n\n  }, {\n    key: \"getRouteIndex\",\n    value: function getRouteIndex() {\n      this._assertInitialized();\n\n      return this.directionsRenderer.getRouteIndex();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var options = this._options || {};\n      return Object.assign(Object.assign({}, options), {\n        directions: this._directions || options.directions,\n        map: this._googleMap.googleMap\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.directionsRenderer) {\n          throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapDirectionsRenderer;\n}();\n\nMapDirectionsRenderer.Éµfac = function MapDirectionsRenderer_Factory(t) {\n  return new (t || MapDirectionsRenderer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapDirectionsRenderer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapDirectionsRenderer,\n  selectors: [[\"map-directions-renderer\"]],\n  inputs: {\n    directions: \"directions\",\n    options: \"options\"\n  },\n  outputs: {\n    directionsChanged: \"directionsChanged\"\n  },\n  exportAs: [\"mapDirectionsRenderer\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n\nMapDirectionsRenderer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapDirectionsRenderer.propDecorators = {\n  directions: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  directionsChanged: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    directionsChanged: [{\n      type: Output\n    }],\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\n\n\nvar MapGroundOverlay = /*#__PURE__*/function () {\n  function MapGroundOverlay(_map, _ngZone) {\n    _classCallCheck(this, MapGroundOverlay);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n  }\n  /** URL of the image that will be shown in the overlay. */\n\n\n  _createClass(MapGroundOverlay, [{\n    key: \"url\",\n    set: function set(url) {\n      this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n\n  }, {\n    key: \"bounds\",\n    get: function get() {\n      return this._bounds.value;\n    },\n    set: function set(bounds) {\n      this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n\n  }, {\n    key: \"opacity\",\n    set: function set(opacity) {\n      this._opacity.next(opacity);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this9 = this;\n\n      if (this._map._isBrowser) {\n        // The ground overlay setup is slightly different from the other Google Maps objects in that\n        // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n        // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(function (bounds) {\n          if (_this9.groundOverlay) {\n            _this9.groundOverlay.setMap(null);\n\n            _this9.groundOverlay = undefined;\n          } // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n\n\n          if (bounds) {\n            _this9._ngZone.runOutsideAngular(function () {\n              _this9.groundOverlay = new google.maps.GroundOverlay(_this9._url.getValue(), bounds, {\n                clickable: _this9.clickable,\n                opacity: _this9._opacity.value\n              });\n            });\n\n            _this9._assertInitialized();\n\n            _this9.groundOverlay.setMap(_this9._map.googleMap);\n\n            _this9._eventManager.setTarget(_this9.groundOverlay);\n          }\n        });\n\n        this._watchForOpacityChanges();\n\n        this._watchForUrlChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.groundOverlay) {\n        this.groundOverlay.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      this._assertInitialized();\n\n      return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n\n  }, {\n    key: \"getOpacity\",\n    value: function getOpacity() {\n      this._assertInitialized();\n\n      return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      this._assertInitialized();\n\n      return this.groundOverlay.getUrl();\n    }\n  }, {\n    key: \"_watchForOpacityChanges\",\n    value: function _watchForOpacityChanges() {\n      var _this10 = this;\n\n      this._opacity.pipe(takeUntil(this._destroyed)).subscribe(function (opacity) {\n        if (opacity != null) {\n          _this10._assertInitialized();\n\n          _this10.groundOverlay.setOpacity(opacity);\n        }\n      });\n    }\n  }, {\n    key: \"_watchForUrlChanges\",\n    value: function _watchForUrlChanges() {\n      var _this11 = this;\n\n      this._url.pipe(takeUntil(this._destroyed)).subscribe(function (url) {\n        _this11._assertInitialized();\n\n        var overlay = _this11.groundOverlay;\n        overlay.set('url', url); // Google Maps only redraws the overlay if we re-set the map.\n\n        overlay.setMap(null);\n        overlay.setMap(_this11._map.googleMap);\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.groundOverlay) {\n          throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapGroundOverlay;\n}();\n\nMapGroundOverlay.Éµfac = function MapGroundOverlay_Factory(t) {\n  return new (t || MapGroundOverlay)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapGroundOverlay.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapGroundOverlay,\n  selectors: [[\"map-ground-overlay\"]],\n  inputs: {\n    clickable: \"clickable\",\n    url: \"url\",\n    bounds: \"bounds\",\n    opacity: \"opacity\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapDblclick: \"mapDblclick\"\n  },\n  exportAs: [\"mapGroundOverlay\"]\n});\n\nMapGroundOverlay.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapGroundOverlay.propDecorators = {\n  url: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  clickable: [{\n    type: Input\n  }],\n  opacity: [{\n    type: Input\n  }],\n  mapClick: [{\n    type: Output\n  }],\n  mapDblclick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\n\n\nvar MapInfoWindow = /*#__PURE__*/function () {\n  function MapInfoWindow(_googleMap, _elementRef, _ngZone) {\n    _classCallCheck(this, MapInfoWindow);\n\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n\n  _createClass(MapInfoWindow, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"position\",\n    set: function set(position) {\n      this._position.next(position);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this12 = this;\n\n      if (this._googleMap._isBrowser) {\n        var combinedOptionsChanges = this._combineOptions();\n\n        combinedOptionsChanges.pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this12._ngZone.runOutsideAngular(function () {\n            _this12.infoWindow = new google.maps.InfoWindow(options);\n          });\n\n          _this12._eventManager.setTarget(_this12.infoWindow);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForPositionChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroy.next();\n\n      this._destroy.complete(); // If no info window has been created on the server, we do not try closing it.\n      // On the server, an info window cannot be created and this would cause errors.\n\n\n      if (this.infoWindow) {\n        this.close();\n      }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._assertInitialized();\n\n      this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      this._assertInitialized();\n\n      return this.infoWindow.getContent();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      this._assertInitialized();\n\n      return this.infoWindow.getPosition();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      this._assertInitialized();\n\n      return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(anchor) {\n      this._assertInitialized();\n\n      var anchorObject = anchor ? anchor.getAnchor() : undefined; // Prevent the info window from initializing when trying to reopen on the same anchor.\n      // Note that when the window is opened for the first time, the anchor will always be\n      // undefined. If that's the case, we have to allow it to open in order to handle the\n      // case where the window doesn't have an anchor, but is placed at a particular position.\n\n      if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n        this._elementRef.nativeElement.style.display = '';\n        this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n      }\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var _this13 = this;\n\n      return combineLatest([this._options, this._position]).pipe(map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            options = _ref4[0],\n            position = _ref4[1];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          position: position || options.position,\n          content: _this13._elementRef.nativeElement\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this14 = this;\n\n      this._options.pipe(takeUntil(this._destroy)).subscribe(function (options) {\n        _this14._assertInitialized();\n\n        _this14.infoWindow.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_watchForPositionChanges\",\n    value: function _watchForPositionChanges() {\n      var _this15 = this;\n\n      this._position.pipe(takeUntil(this._destroy)).subscribe(function (position) {\n        if (position) {\n          _this15._assertInitialized();\n\n          _this15.infoWindow.setPosition(position);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.infoWindow) {\n          throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n        }\n      }\n    }\n  }]);\n\n  return MapInfoWindow;\n}();\n\nMapInfoWindow.Éµfac = function MapInfoWindow_Factory(t) {\n  return new (t || MapInfoWindow)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapInfoWindow.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapInfoWindow,\n  selectors: [[\"map-info-window\"]],\n  hostAttrs: [2, \"display\", \"none\"],\n  inputs: {\n    options: \"options\",\n    position: \"position\"\n  },\n  outputs: {\n    closeclick: \"closeclick\",\n    contentChanged: \"contentChanged\",\n    domready: \"domready\",\n    positionChanged: \"positionChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapInfoWindow\"]\n});\n\nMapInfoWindow.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nMapInfoWindow.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  closeclick: [{\n    type: Output\n  }],\n  contentChanged: [{\n    type: Output\n  }],\n  domready: [{\n    type: Output\n  }],\n  positionChanged: [{\n    type: Output\n  }],\n  zindexChanged: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.ElementRef\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\n\n\nvar MapKmlLayer = /*#__PURE__*/function () {\n  function MapKmlLayer(_map, _ngZone) {\n    _classCallCheck(this, MapKmlLayer);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n  }\n\n  _createClass(MapKmlLayer, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"url\",\n    set: function set(url) {\n      this._url.next(url);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this16 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this16._ngZone.runOutsideAngular(function () {\n            return _this16.kmlLayer = new google.maps.KmlLayer(options);\n          });\n\n          _this16._assertInitialized();\n\n          _this16.kmlLayer.setMap(_this16._map.googleMap);\n\n          _this16._eventManager.setTarget(_this16.kmlLayer);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForUrlChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.kmlLayer) {\n        this.kmlLayer.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n\n  }, {\n    key: \"getDefaultViewport\",\n    value: function getDefaultViewport() {\n      this._assertInitialized();\n\n      return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      this._assertInitialized();\n\n      return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      this._assertInitialized();\n\n      return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      this._assertInitialized();\n\n      return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      this._assertInitialized();\n\n      return this.kmlLayer.getZIndex();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return combineLatest([this._options, this._url]).pipe(map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            options = _ref6[0],\n            url = _ref6[1];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          url: url || options.url\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this17 = this;\n\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        if (_this17.kmlLayer) {\n          _this17._assertInitialized();\n\n          _this17.kmlLayer.setOptions(options);\n        }\n      });\n    }\n  }, {\n    key: \"_watchForUrlChanges\",\n    value: function _watchForUrlChanges() {\n      var _this18 = this;\n\n      this._url.pipe(takeUntil(this._destroyed)).subscribe(function (url) {\n        if (url && _this18.kmlLayer) {\n          _this18._assertInitialized();\n\n          _this18.kmlLayer.setUrl(url);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.kmlLayer) {\n          throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapKmlLayer;\n}();\n\nMapKmlLayer.Éµfac = function MapKmlLayer_Factory(t) {\n  return new (t || MapKmlLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapKmlLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapKmlLayer,\n  selectors: [[\"map-kml-layer\"]],\n  inputs: {\n    options: \"options\",\n    url: \"url\"\n  },\n  outputs: {\n    kmlClick: \"kmlClick\",\n    defaultviewportChanged: \"defaultviewportChanged\",\n    statusChanged: \"statusChanged\"\n  },\n  exportAs: [\"mapKmlLayer\"]\n});\n\nMapKmlLayer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapKmlLayer.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  url: [{\n    type: Input\n  }],\n  kmlClick: [{\n    type: Output\n  }],\n  defaultviewportChanged: [{\n    type: Output\n  }],\n  statusChanged: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\n\n\nvar DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\n\nvar MapMarker = /*#__PURE__*/function () {\n  function MapMarker(_googleMap, _ngZone) {\n    _classCallCheck(this, MapMarker);\n\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n  }\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n\n\n  _createClass(MapMarker, [{\n    key: \"title\",\n    set: function set(title) {\n      this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n\n  }, {\n    key: \"position\",\n    set: function set(position) {\n      this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n\n  }, {\n    key: \"label\",\n    set: function set(label) {\n      this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n\n  }, {\n    key: \"clickable\",\n    set: function set(clickable) {\n      this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n\n  }, {\n    key: \"options\",\n    set: function set(options) {\n      this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n\n  }, {\n    key: \"icon\",\n    set: function set(icon) {\n      this._icon = icon;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this19 = this;\n\n      if (this._googleMap._isBrowser) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(function () {\n          _this19.marker = new google.maps.Marker(_this19._combineOptions());\n        });\n\n        this._assertInitialized();\n\n        this.marker.setMap(this._googleMap.googleMap);\n\n        this._eventManager.setTarget(this.marker);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var marker = this.marker,\n          _title = this._title,\n          _position = this._position,\n          _label = this._label,\n          _clickable = this._clickable,\n          _icon = this._icon;\n\n      if (marker) {\n        if (changes['options']) {\n          marker.setOptions(this._combineOptions());\n        }\n\n        if (changes['title'] && _title !== undefined) {\n          marker.setTitle(_title);\n        }\n\n        if (changes['position'] && _position) {\n          marker.setPosition(_position);\n        }\n\n        if (changes['label'] && _label !== undefined) {\n          marker.setLabel(_label);\n        }\n\n        if (changes['clickable'] && _clickable !== undefined) {\n          marker.setClickable(_clickable);\n        }\n\n        if (changes['icon'] && _icon) {\n          marker.setIcon(_icon);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      if (this.marker) {\n        this.marker.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n\n  }, {\n    key: \"getAnimation\",\n    value: function getAnimation() {\n      this._assertInitialized();\n\n      return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n\n  }, {\n    key: \"getClickable\",\n    value: function getClickable() {\n      this._assertInitialized();\n\n      return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n\n  }, {\n    key: \"getCursor\",\n    value: function getCursor() {\n      this._assertInitialized();\n\n      return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      this._assertInitialized();\n\n      return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n\n  }, {\n    key: \"getIcon\",\n    value: function getIcon() {\n      this._assertInitialized();\n\n      return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      this._assertInitialized();\n\n      return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n\n  }, {\n    key: \"getOpacity\",\n    value: function getOpacity() {\n      this._assertInitialized();\n\n      return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      this._assertInitialized();\n\n      return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n\n  }, {\n    key: \"getShape\",\n    value: function getShape() {\n      this._assertInitialized();\n\n      return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      this._assertInitialized();\n\n      return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      this._assertInitialized();\n\n      return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      this._assertInitialized();\n\n      return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n\n  }, {\n    key: \"getAnchor\",\n    value: function getAnchor() {\n      this._assertInitialized();\n\n      return this.marker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var _a;\n\n      var options = this._options || DEFAULT_MARKER_OPTIONS;\n      return Object.assign(Object.assign({}, options), {\n        title: this._title || options.title,\n        position: this._position || options.position,\n        label: this._label || options.label,\n        clickable: (_a = this._clickable) !== null && _a !== void 0 ? _a : options.clickable,\n        map: this._googleMap.googleMap,\n        icon: this._icon || options.icon\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.marker) {\n          throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapMarker;\n}();\n\nMapMarker.Éµfac = function MapMarker_Factory(t) {\n  return new (t || MapMarker)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapMarker.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapMarker,\n  selectors: [[\"map-marker\"]],\n  inputs: {\n    title: \"title\",\n    position: \"position\",\n    label: \"label\",\n    clickable: \"clickable\",\n    options: \"options\",\n    icon: \"icon\"\n  },\n  outputs: {\n    animationChanged: \"animationChanged\",\n    mapClick: \"mapClick\",\n    clickableChanged: \"clickableChanged\",\n    cursorChanged: \"cursorChanged\",\n    mapDblclick: \"mapDblclick\",\n    mapDrag: \"mapDrag\",\n    mapDragend: \"mapDragend\",\n    draggableChanged: \"draggableChanged\",\n    mapDragstart: \"mapDragstart\",\n    flatChanged: \"flatChanged\",\n    iconChanged: \"iconChanged\",\n    mapMousedown: \"mapMousedown\",\n    mapMouseout: \"mapMouseout\",\n    mapMouseover: \"mapMouseover\",\n    mapMouseup: \"mapMouseup\",\n    positionChanged: \"positionChanged\",\n    mapRightclick: \"mapRightclick\",\n    shapeChanged: \"shapeChanged\",\n    titleChanged: \"titleChanged\",\n    visibleChanged: \"visibleChanged\",\n    zindexChanged: \"zindexChanged\"\n  },\n  exportAs: [\"mapMarker\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n\nMapMarker.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapMarker.propDecorators = {\n  title: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  clickable: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  animationChanged: [{\n    type: Output\n  }],\n  mapClick: [{\n    type: Output\n  }],\n  clickableChanged: [{\n    type: Output\n  }],\n  cursorChanged: [{\n    type: Output\n  }],\n  mapDblclick: [{\n    type: Output\n  }],\n  mapDrag: [{\n    type: Output\n  }],\n  mapDragend: [{\n    type: Output\n  }],\n  draggableChanged: [{\n    type: Output\n  }],\n  mapDragstart: [{\n    type: Output\n  }],\n  flatChanged: [{\n    type: Output\n  }],\n  iconChanged: [{\n    type: Output\n  }],\n  mapMousedown: [{\n    type: Output\n  }],\n  mapMouseout: [{\n    type: Output\n  }],\n  mapMouseover: [{\n    type: Output\n  }],\n  mapMouseup: [{\n    type: Output\n  }],\n  positionChanged: [{\n    type: Output\n  }],\n  mapRightclick: [{\n    type: Output\n  }],\n  shapeChanged: [{\n    type: Output\n  }],\n  titleChanged: [{\n    type: Output\n  }],\n  visibleChanged: [{\n    type: Output\n  }],\n  zindexChanged: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Default options for a clusterer. */\n\n\nvar DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\n\nvar MapMarkerClusterer = /*#__PURE__*/function () {\n  function MapMarkerClusterer(_googleMap, _ngZone) {\n    _classCallCheck(this, MapMarkerClusterer);\n\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._destroy = new Subject();\n\n    this.ariaLabelFn = function () {\n      return '';\n    };\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n\n\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    this._canInitialize = this._googleMap._isBrowser;\n  }\n\n  _createClass(MapMarkerClusterer, [{\n    key: \"averageCenter\",\n    set: function set(averageCenter) {\n      this._averageCenter = averageCenter;\n    }\n  }, {\n    key: \"batchSizeIE\",\n    set: function set(batchSizeIE) {\n      this._batchSizeIE = batchSizeIE;\n    }\n  }, {\n    key: \"calculator\",\n    set: function set(calculator) {\n      this._calculator = calculator;\n    }\n  }, {\n    key: \"clusterClass\",\n    set: function set(clusterClass) {\n      this._clusterClass = clusterClass;\n    }\n  }, {\n    key: \"enableRetinaIcons\",\n    set: function set(enableRetinaIcons) {\n      this._enableRetinaIcons = enableRetinaIcons;\n    }\n  }, {\n    key: \"gridSize\",\n    set: function set(gridSize) {\n      this._gridSize = gridSize;\n    }\n  }, {\n    key: \"ignoreHidden\",\n    set: function set(ignoreHidden) {\n      this._ignoreHidden = ignoreHidden;\n    }\n  }, {\n    key: \"imageExtension\",\n    set: function set(imageExtension) {\n      this._imageExtension = imageExtension;\n    }\n  }, {\n    key: \"imagePath\",\n    set: function set(imagePath) {\n      this._imagePath = imagePath;\n    }\n  }, {\n    key: \"imageSizes\",\n    set: function set(imageSizes) {\n      this._imageSizes = imageSizes;\n    }\n  }, {\n    key: \"maxZoom\",\n    set: function set(maxZoom) {\n      this._maxZoom = maxZoom;\n    }\n  }, {\n    key: \"minimumClusterSize\",\n    set: function set(minimumClusterSize) {\n      this._minimumClusterSize = minimumClusterSize;\n    }\n  }, {\n    key: \"styles\",\n    set: function set(styles) {\n      this._styles = styles;\n    }\n  }, {\n    key: \"title\",\n    set: function set(title) {\n      this._title = title;\n    }\n  }, {\n    key: \"zIndex\",\n    set: function set(zIndex) {\n      this._zIndex = zIndex;\n    }\n  }, {\n    key: \"zoomOnClick\",\n    set: function set(zoomOnClick) {\n      this._zoomOnClick = zoomOnClick;\n    }\n  }, {\n    key: \"options\",\n    set: function set(options) {\n      this._options = options;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this20 = this;\n\n      if (this._canInitialize) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(function () {\n          _this20.markerClusterer = new MarkerClusterer(_this20._googleMap.googleMap, [], _this20._combineOptions());\n        });\n\n        this._assertInitialized();\n\n        this._eventManager.setTarget(this.markerClusterer);\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (this._canInitialize) {\n        this._watchForMarkerChanges();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var clusterer = this.markerClusterer,\n          ariaLabelFn = this.ariaLabelFn,\n          _averageCenter = this._averageCenter,\n          _batchSizeIE = this._batchSizeIE,\n          _calculator = this._calculator,\n          _styles = this._styles,\n          _clusterClass = this._clusterClass,\n          _enableRetinaIcons = this._enableRetinaIcons,\n          _gridSize = this._gridSize,\n          _ignoreHidden = this._ignoreHidden,\n          _imageExtension = this._imageExtension,\n          _imagePath = this._imagePath,\n          _imageSizes = this._imageSizes,\n          _maxZoom = this._maxZoom,\n          _minimumClusterSize = this._minimumClusterSize,\n          _title = this._title,\n          _zIndex = this._zIndex,\n          _zoomOnClick = this._zoomOnClick;\n\n      if (clusterer) {\n        if (changes['options']) {\n          clusterer.setOptions(this._combineOptions());\n        }\n\n        if (changes['ariaLabelFn']) {\n          clusterer.ariaLabelFn = ariaLabelFn;\n        }\n\n        if (changes['averageCenter'] && _averageCenter !== undefined) {\n          clusterer.setAverageCenter(_averageCenter);\n        }\n\n        if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n          clusterer.setBatchSizeIE(_batchSizeIE);\n        }\n\n        if (changes['calculator'] && !!_calculator) {\n          clusterer.setCalculator(_calculator);\n        }\n\n        if (changes['clusterClass'] && _clusterClass !== undefined) {\n          clusterer.setClusterClass(_clusterClass);\n        }\n\n        if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n          clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n        }\n\n        if (changes['gridSize'] && _gridSize !== undefined) {\n          clusterer.setGridSize(_gridSize);\n        }\n\n        if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n          clusterer.setIgnoreHidden(_ignoreHidden);\n        }\n\n        if (changes['imageExtension'] && _imageExtension !== undefined) {\n          clusterer.setImageExtension(_imageExtension);\n        }\n\n        if (changes['imagePath'] && _imagePath !== undefined) {\n          clusterer.setImagePath(_imagePath);\n        }\n\n        if (changes['imageSizes'] && _imageSizes) {\n          clusterer.setImageSizes(_imageSizes);\n        }\n\n        if (changes['maxZoom'] && _maxZoom !== undefined) {\n          clusterer.setMaxZoom(_maxZoom);\n        }\n\n        if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n          clusterer.setMinimumClusterSize(_minimumClusterSize);\n        }\n\n        if (changes['styles'] && _styles) {\n          clusterer.setStyles(_styles);\n        }\n\n        if (changes['title'] && _title !== undefined) {\n          clusterer.setTitle(_title);\n        }\n\n        if (changes['zIndex'] && _zIndex !== undefined) {\n          clusterer.setZIndex(_zIndex);\n        }\n\n        if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n          clusterer.setZoomOnClick(_zoomOnClick);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroy.next();\n\n      this._destroy.complete();\n\n      this._eventManager.destroy();\n\n      if (this.markerClusterer) {\n        this.markerClusterer.setMap(null);\n      }\n    }\n  }, {\n    key: \"fitMapToMarkers\",\n    value: function fitMapToMarkers(padding) {\n      this._assertInitialized();\n\n      this.markerClusterer.fitMapToMarkers(padding);\n    }\n  }, {\n    key: \"getAverageCenter\",\n    value: function getAverageCenter() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getAverageCenter();\n    }\n  }, {\n    key: \"getBatchSizeIE\",\n    value: function getBatchSizeIE() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getBatchSizeIE();\n    }\n  }, {\n    key: \"getCalculator\",\n    value: function getCalculator() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getCalculator();\n    }\n  }, {\n    key: \"getClusterClass\",\n    value: function getClusterClass() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getClusterClass();\n    }\n  }, {\n    key: \"getClusters\",\n    value: function getClusters() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getClusters();\n    }\n  }, {\n    key: \"getEnableRetinaIcons\",\n    value: function getEnableRetinaIcons() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getEnableRetinaIcons();\n    }\n  }, {\n    key: \"getGridSize\",\n    value: function getGridSize() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getGridSize();\n    }\n  }, {\n    key: \"getIgnoreHidden\",\n    value: function getIgnoreHidden() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getIgnoreHidden();\n    }\n  }, {\n    key: \"getImageExtension\",\n    value: function getImageExtension() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getImageExtension();\n    }\n  }, {\n    key: \"getImagePath\",\n    value: function getImagePath() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getImagePath();\n    }\n  }, {\n    key: \"getImageSizes\",\n    value: function getImageSizes() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getImageSizes();\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getMaxZoom();\n    }\n  }, {\n    key: \"getMinimumClusterSize\",\n    value: function getMinimumClusterSize() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getMinimumClusterSize();\n    }\n  }, {\n    key: \"getStyles\",\n    value: function getStyles() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getStyles();\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getTitle();\n    }\n  }, {\n    key: \"getTotalClusters\",\n    value: function getTotalClusters() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getTotalClusters();\n    }\n  }, {\n    key: \"getTotalMarkers\",\n    value: function getTotalMarkers() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getTotalMarkers();\n    }\n  }, {\n    key: \"getZIndex\",\n    value: function getZIndex() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getZIndex();\n    }\n  }, {\n    key: \"getZoomOnClick\",\n    value: function getZoomOnClick() {\n      this._assertInitialized();\n\n      return this.markerClusterer.getZoomOnClick();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n      var options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n      return Object.assign(Object.assign({}, options), {\n        ariaLabelFn: (_a = this.ariaLabelFn) !== null && _a !== void 0 ? _a : options.ariaLabelFn,\n        averageCenter: (_b = this._averageCenter) !== null && _b !== void 0 ? _b : options.averageCenter,\n        batchSize: (_c = this.batchSize) !== null && _c !== void 0 ? _c : options.batchSize,\n        batchSizeIE: (_d = this._batchSizeIE) !== null && _d !== void 0 ? _d : options.batchSizeIE,\n        calculator: (_e = this._calculator) !== null && _e !== void 0 ? _e : options.calculator,\n        clusterClass: (_f = this._clusterClass) !== null && _f !== void 0 ? _f : options.clusterClass,\n        enableRetinaIcons: (_g = this._enableRetinaIcons) !== null && _g !== void 0 ? _g : options.enableRetinaIcons,\n        gridSize: (_h = this._gridSize) !== null && _h !== void 0 ? _h : options.gridSize,\n        ignoreHidden: (_j = this._ignoreHidden) !== null && _j !== void 0 ? _j : options.ignoreHidden,\n        imageExtension: (_k = this._imageExtension) !== null && _k !== void 0 ? _k : options.imageExtension,\n        imagePath: (_l = this._imagePath) !== null && _l !== void 0 ? _l : options.imagePath,\n        imageSizes: (_m = this._imageSizes) !== null && _m !== void 0 ? _m : options.imageSizes,\n        maxZoom: (_o = this._maxZoom) !== null && _o !== void 0 ? _o : options.maxZoom,\n        minimumClusterSize: (_p = this._minimumClusterSize) !== null && _p !== void 0 ? _p : options.minimumClusterSize,\n        styles: (_q = this._styles) !== null && _q !== void 0 ? _q : options.styles,\n        title: (_r = this._title) !== null && _r !== void 0 ? _r : options.title,\n        zIndex: (_s = this._zIndex) !== null && _s !== void 0 ? _s : options.zIndex,\n        zoomOnClick: (_t = this._zoomOnClick) !== null && _t !== void 0 ? _t : options.zoomOnClick\n      });\n    }\n  }, {\n    key: \"_watchForMarkerChanges\",\n    value: function _watchForMarkerChanges() {\n      var _this21 = this;\n\n      this._assertInitialized();\n\n      var initialMarkers = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this._getInternalMarkers(this._markers.toArray())),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var marker = _step2.value;\n\n          this._currentMarkers.add(marker);\n\n          initialMarkers.push(marker);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.markerClusterer.addMarkers(initialMarkers);\n\n      this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(function (markerComponents) {\n        _this21._assertInitialized();\n\n        var newMarkers = new Set(_this21._getInternalMarkers(markerComponents));\n        var markersToAdd = [];\n        var markersToRemove = [];\n\n        for (var _i = 0, _Array$from = Array.from(newMarkers); _i < _Array$from.length; _i++) {\n          var marker = _Array$from[_i];\n\n          if (!_this21._currentMarkers.has(marker)) {\n            _this21._currentMarkers.add(marker);\n\n            markersToAdd.push(marker);\n          }\n        }\n\n        for (var _i2 = 0, _Array$from2 = Array.from(_this21._currentMarkers); _i2 < _Array$from2.length; _i2++) {\n          var _marker = _Array$from2[_i2];\n\n          if (!newMarkers.has(_marker)) {\n            markersToRemove.push(_marker);\n          }\n        }\n\n        _this21.markerClusterer.addMarkers(markersToAdd, true);\n\n        _this21.markerClusterer.removeMarkers(markersToRemove, true);\n\n        _this21.markerClusterer.repaint();\n\n        for (var _i3 = 0, _markersToRemove = markersToRemove; _i3 < _markersToRemove.length; _i3++) {\n          var _marker2 = _markersToRemove[_i3];\n\n          _this21._currentMarkers.delete(_marker2);\n        }\n      });\n    }\n  }, {\n    key: \"_getInternalMarkers\",\n    value: function _getInternalMarkers(markers) {\n      return markers.filter(function (markerComponent) {\n        return !!markerComponent.marker;\n      }).map(function (markerComponent) {\n        return markerComponent.marker;\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.markerClusterer) {\n          throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapMarkerClusterer;\n}();\n\nMapMarkerClusterer.Éµfac = function MapMarkerClusterer_Factory(t) {\n  return new (t || MapMarkerClusterer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapMarkerClusterer.Éµcmp = /*@__PURE__*/Éµngcc0.ÉµÉµdefineComponent({\n  type: MapMarkerClusterer,\n  selectors: [[\"map-marker-clusterer\"]],\n  contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµcontentQuery(dirIndex, MapMarker, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx._markers = _t);\n    }\n  },\n  inputs: {\n    ariaLabelFn: \"ariaLabelFn\",\n    averageCenter: \"averageCenter\",\n    batchSizeIE: \"batchSizeIE\",\n    calculator: \"calculator\",\n    clusterClass: \"clusterClass\",\n    enableRetinaIcons: \"enableRetinaIcons\",\n    gridSize: \"gridSize\",\n    ignoreHidden: \"ignoreHidden\",\n    imageExtension: \"imageExtension\",\n    imagePath: \"imagePath\",\n    imageSizes: \"imageSizes\",\n    maxZoom: \"maxZoom\",\n    minimumClusterSize: \"minimumClusterSize\",\n    styles: \"styles\",\n    title: \"title\",\n    zIndex: \"zIndex\",\n    zoomOnClick: \"zoomOnClick\",\n    options: \"options\",\n    batchSize: \"batchSize\"\n  },\n  outputs: {\n    clusteringbegin: \"clusteringbegin\",\n    clusteringend: \"clusteringend\",\n    clusterClick: \"clusterClick\"\n  },\n  exportAs: [\"mapMarkerClusterer\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MapMarkerClusterer_Template(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµprojectionDef();\n      Éµngcc0.ÉµÉµprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMapMarkerClusterer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapMarkerClusterer.propDecorators = {\n  ariaLabelFn: [{\n    type: Input\n  }],\n  averageCenter: [{\n    type: Input\n  }],\n  batchSize: [{\n    type: Input\n  }],\n  batchSizeIE: [{\n    type: Input\n  }],\n  calculator: [{\n    type: Input\n  }],\n  clusterClass: [{\n    type: Input\n  }],\n  enableRetinaIcons: [{\n    type: Input\n  }],\n  gridSize: [{\n    type: Input\n  }],\n  ignoreHidden: [{\n    type: Input\n  }],\n  imageExtension: [{\n    type: Input\n  }],\n  imagePath: [{\n    type: Input\n  }],\n  imageSizes: [{\n    type: Input\n  }],\n  maxZoom: [{\n    type: Input\n  }],\n  minimumClusterSize: [{\n    type: Input\n  }],\n  styles: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  zIndex: [{\n    type: Input\n  }],\n  zoomOnClick: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  clusteringbegin: [{\n    type: Output\n  }],\n  clusteringend: [{\n    type: Output\n  }],\n  clusterClick: [{\n    type: Output\n  }],\n  _markers: [{\n    type: ContentChildren,\n    args: [MapMarker, {\n      descendants: true\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\n\n\nvar MapPolygon = /*#__PURE__*/function () {\n  function MapPolygon(_map, _ngZone) {\n    _classCallCheck(this, MapPolygon);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  _createClass(MapPolygon, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"paths\",\n    set: function set(paths) {\n      this._paths.next(paths);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this22 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this22._ngZone.runOutsideAngular(function () {\n            _this22.polygon = new google.maps.Polygon(options);\n          });\n\n          _this22._assertInitialized();\n\n          _this22.polygon.setMap(_this22._map.googleMap);\n\n          _this22._eventManager.setTarget(_this22.polygon);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForPathChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.polygon) {\n        this.polygon.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      this._assertInitialized();\n\n      return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n\n  }, {\n    key: \"getEditable\",\n    value: function getEditable() {\n      this._assertInitialized();\n\n      return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      this._assertInitialized();\n\n      return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n\n  }, {\n    key: \"getPaths\",\n    value: function getPaths() {\n      this._assertInitialized();\n\n      return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      this._assertInitialized();\n\n      return this.polygon.getVisible();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return combineLatest([this._options, this._paths]).pipe(map(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            options = _ref8[0],\n            paths = _ref8[1];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          paths: paths || options.paths\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this23 = this;\n\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        _this23._assertInitialized();\n\n        _this23.polygon.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_watchForPathChanges\",\n    value: function _watchForPathChanges() {\n      var _this24 = this;\n\n      this._paths.pipe(takeUntil(this._destroyed)).subscribe(function (paths) {\n        if (paths) {\n          _this24._assertInitialized();\n\n          _this24.polygon.setPaths(paths);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.polygon) {\n          throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapPolygon;\n}();\n\nMapPolygon.Éµfac = function MapPolygon_Factory(t) {\n  return new (t || MapPolygon)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapPolygon.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapPolygon,\n  selectors: [[\"map-polygon\"]],\n  inputs: {\n    options: \"options\",\n    paths: \"paths\"\n  },\n  outputs: {\n    polygonClick: \"polygonClick\",\n    polygonDblclick: \"polygonDblclick\",\n    polygonDrag: \"polygonDrag\",\n    polygonDragend: \"polygonDragend\",\n    polygonDragstart: \"polygonDragstart\",\n    polygonMousedown: \"polygonMousedown\",\n    polygonMousemove: \"polygonMousemove\",\n    polygonMouseout: \"polygonMouseout\",\n    polygonMouseover: \"polygonMouseover\",\n    polygonMouseup: \"polygonMouseup\",\n    polygonRightclick: \"polygonRightclick\"\n  },\n  exportAs: [\"mapPolygon\"]\n});\n\nMapPolygon.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapPolygon.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  paths: [{\n    type: Input\n  }],\n  polygonClick: [{\n    type: Output\n  }],\n  polygonDblclick: [{\n    type: Output\n  }],\n  polygonDrag: [{\n    type: Output\n  }],\n  polygonDragend: [{\n    type: Output\n  }],\n  polygonDragstart: [{\n    type: Output\n  }],\n  polygonMousedown: [{\n    type: Output\n  }],\n  polygonMousemove: [{\n    type: Output\n  }],\n  polygonMouseout: [{\n    type: Output\n  }],\n  polygonMouseover: [{\n    type: Output\n  }],\n  polygonMouseup: [{\n    type: Output\n  }],\n  polygonRightclick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\n\n\nvar MapPolyline = /*#__PURE__*/function () {\n  function MapPolyline(_map, _ngZone) {\n    _classCallCheck(this, MapPolyline);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  _createClass(MapPolyline, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"path\",\n    set: function set(path) {\n      this._path.next(path);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this25 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this25._ngZone.runOutsideAngular(function () {\n            return _this25.polyline = new google.maps.Polyline(options);\n          });\n\n          _this25._assertInitialized();\n\n          _this25.polyline.setMap(_this25._map.googleMap);\n\n          _this25._eventManager.setTarget(_this25.polyline);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForPathChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.polyline) {\n        this.polyline.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      this._assertInitialized();\n\n      return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n\n  }, {\n    key: \"getEditable\",\n    value: function getEditable() {\n      this._assertInitialized();\n\n      return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      this._assertInitialized();\n\n      return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      this._assertInitialized();\n\n      return this.polyline.getVisible();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return combineLatest([this._options, this._path]).pipe(map(function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n            options = _ref10[0],\n            path = _ref10[1];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          path: path || options.path\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this26 = this;\n\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        _this26._assertInitialized();\n\n        _this26.polyline.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_watchForPathChanges\",\n    value: function _watchForPathChanges() {\n      var _this27 = this;\n\n      this._path.pipe(takeUntil(this._destroyed)).subscribe(function (path) {\n        if (path) {\n          _this27._assertInitialized();\n\n          _this27.polyline.setPath(path);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.polyline) {\n          throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapPolyline;\n}();\n\nMapPolyline.Éµfac = function MapPolyline_Factory(t) {\n  return new (t || MapPolyline)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapPolyline.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapPolyline,\n  selectors: [[\"map-polyline\"]],\n  inputs: {\n    options: \"options\",\n    path: \"path\"\n  },\n  outputs: {\n    polylineClick: \"polylineClick\",\n    polylineDblclick: \"polylineDblclick\",\n    polylineDrag: \"polylineDrag\",\n    polylineDragend: \"polylineDragend\",\n    polylineDragstart: \"polylineDragstart\",\n    polylineMousedown: \"polylineMousedown\",\n    polylineMousemove: \"polylineMousemove\",\n    polylineMouseout: \"polylineMouseout\",\n    polylineMouseover: \"polylineMouseover\",\n    polylineMouseup: \"polylineMouseup\",\n    polylineRightclick: \"polylineRightclick\"\n  },\n  exportAs: [\"mapPolyline\"]\n});\n\nMapPolyline.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapPolyline.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  path: [{\n    type: Input\n  }],\n  polylineClick: [{\n    type: Output\n  }],\n  polylineDblclick: [{\n    type: Output\n  }],\n  polylineDrag: [{\n    type: Output\n  }],\n  polylineDragend: [{\n    type: Output\n  }],\n  polylineDragstart: [{\n    type: Output\n  }],\n  polylineMousedown: [{\n    type: Output\n  }],\n  polylineMousemove: [{\n    type: Output\n  }],\n  polylineMouseout: [{\n    type: Output\n  }],\n  polylineMouseover: [{\n    type: Output\n  }],\n  polylineMouseup: [{\n    type: Output\n  }],\n  polylineRightclick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\n\n\nvar MapRectangle = /*#__PURE__*/function () {\n  function MapRectangle(_map, _ngZone) {\n    _classCallCheck(this, MapRectangle);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(this._ngZone);\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n  }\n\n  _createClass(MapRectangle, [{\n    key: \"options\",\n    set: function set(options) {\n      this._options.next(options || {});\n    }\n  }, {\n    key: \"bounds\",\n    set: function set(bounds) {\n      this._bounds.next(bounds);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this28 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          _this28._ngZone.runOutsideAngular(function () {\n            _this28.rectangle = new google.maps.Rectangle(options);\n          });\n\n          _this28._assertInitialized();\n\n          _this28.rectangle.setMap(_this28._map.googleMap);\n\n          _this28._eventManager.setTarget(_this28.rectangle);\n        });\n\n        this._watchForOptionsChanges();\n\n        this._watchForBoundsChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventManager.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.rectangle) {\n        this.rectangle.setMap(null);\n      }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      this._assertInitialized();\n\n      return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n\n  }, {\n    key: \"getDraggable\",\n    value: function getDraggable() {\n      this._assertInitialized();\n\n      return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n\n  }, {\n    key: \"getEditable\",\n    value: function getEditable() {\n      this._assertInitialized();\n\n      return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      this._assertInitialized();\n\n      return this.rectangle.getVisible();\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return combineLatest([this._options, this._bounds]).pipe(map(function (_ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n            options = _ref12[0],\n            bounds = _ref12[1];\n\n        var combinedOptions = Object.assign(Object.assign({}, options), {\n          bounds: bounds || options.bounds\n        });\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForOptionsChanges\",\n    value: function _watchForOptionsChanges() {\n      var _this29 = this;\n\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        _this29._assertInitialized();\n\n        _this29.rectangle.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_watchForBoundsChanges\",\n    value: function _watchForBoundsChanges() {\n      var _this30 = this;\n\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(function (bounds) {\n        if (bounds) {\n          _this30._assertInitialized();\n\n          _this30.rectangle.setBounds(bounds);\n        }\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._map.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.rectangle) {\n          throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapRectangle;\n}();\n\nMapRectangle.Éµfac = function MapRectangle_Factory(t) {\n  return new (t || MapRectangle)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapRectangle.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapRectangle,\n  selectors: [[\"map-rectangle\"]],\n  inputs: {\n    options: \"options\",\n    bounds: \"bounds\"\n  },\n  outputs: {\n    boundsChanged: \"boundsChanged\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblclick: \"rectangleDblclick\",\n    rectangleDrag: \"rectangleDrag\",\n    rectangleDragend: \"rectangleDragend\",\n    rectangleDragstart: \"rectangleDragstart\",\n    rectangleMousedown: \"rectangleMousedown\",\n    rectangleMousemove: \"rectangleMousemove\",\n    rectangleMouseout: \"rectangleMouseout\",\n    rectangleMouseover: \"rectangleMouseover\",\n    rectangleMouseup: \"rectangleMouseup\",\n    rectangleRightclick: \"rectangleRightclick\"\n  },\n  exportAs: [\"mapRectangle\"]\n});\n\nMapRectangle.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapRectangle.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  bounds: [{\n    type: Input\n  }],\n  boundsChanged: [{\n    type: Output\n  }],\n  rectangleClick: [{\n    type: Output\n  }],\n  rectangleDblclick: [{\n    type: Output\n  }],\n  rectangleDrag: [{\n    type: Output\n  }],\n  rectangleDragend: [{\n    type: Output\n  }],\n  rectangleDragstart: [{\n    type: Output\n  }],\n  rectangleMousedown: [{\n    type: Output\n  }],\n  rectangleMousemove: [{\n    type: Output\n  }],\n  rectangleMouseout: [{\n    type: Output\n  }],\n  rectangleMouseover: [{\n    type: Output\n  }],\n  rectangleMouseup: [{\n    type: Output\n  }],\n  rectangleRightclick: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\n\n\nvar MapTrafficLayer = /*#__PURE__*/function () {\n  function MapTrafficLayer(_map, _ngZone) {\n    _classCallCheck(this, MapTrafficLayer);\n\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n  }\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n\n\n  _createClass(MapTrafficLayer, [{\n    key: \"autoRefresh\",\n    set: function set(autoRefresh) {\n      this._autoRefresh.next(autoRefresh);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this31 = this;\n\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(function (options) {\n          // Create the object outside the zone so its events don't trigger change detection.\n          _this31._ngZone.runOutsideAngular(function () {\n            _this31.trafficLayer = new google.maps.TrafficLayer(options);\n          });\n\n          _this31._assertInitialized();\n\n          _this31.trafficLayer.setMap(_this31._map.googleMap);\n        });\n\n        this._watchForAutoRefreshChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      if (this.trafficLayer) {\n        this.trafficLayer.setMap(null);\n      }\n    }\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      return this._autoRefresh.pipe(map(function (autoRefresh) {\n        var combinedOptions = {\n          autoRefresh: autoRefresh\n        };\n        return combinedOptions;\n      }));\n    }\n  }, {\n    key: \"_watchForAutoRefreshChanges\",\n    value: function _watchForAutoRefreshChanges() {\n      var _this32 = this;\n\n      this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(function (options) {\n        _this32._assertInitialized();\n\n        _this32.trafficLayer.setOptions(options);\n      });\n    }\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n\n      if (!this.trafficLayer) {\n        throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n      }\n    }\n  }]);\n\n  return MapTrafficLayer;\n}();\n\nMapTrafficLayer.Éµfac = function MapTrafficLayer_Factory(t) {\n  return new (t || MapTrafficLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapTrafficLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapTrafficLayer,\n  selectors: [[\"map-traffic-layer\"]],\n  inputs: {\n    autoRefresh: \"autoRefresh\"\n  },\n  exportAs: [\"mapTrafficLayer\"]\n});\n\nMapTrafficLayer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapTrafficLayer.propDecorators = {\n  autoRefresh: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    autoRefresh: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\n\n\nvar MapTransitLayer = /*#__PURE__*/function (_MapBaseLayer2) {\n  _inherits(MapTransitLayer, _MapBaseLayer2);\n\n  var _super2 = _createSuper(MapTransitLayer);\n\n  function MapTransitLayer() {\n    _classCallCheck(this, MapTransitLayer);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(MapTransitLayer, [{\n    key: \"_initializeObject\",\n    value: function _initializeObject() {\n      this.transitLayer = new google.maps.TransitLayer();\n    }\n  }, {\n    key: \"_setMap\",\n    value: function _setMap() {\n      this._assertLayerInitialized();\n\n      this.transitLayer.setMap(this._map.googleMap);\n    }\n  }, {\n    key: \"_unsetMap\",\n    value: function _unsetMap() {\n      if (this.transitLayer) {\n        this.transitLayer.setMap(null);\n      }\n    }\n  }, {\n    key: \"_assertLayerInitialized\",\n    value: function _assertLayerInitialized() {\n      if (!this.transitLayer) {\n        throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n      }\n    }\n  }]);\n\n  return MapTransitLayer;\n}(MapBaseLayer);\n\nMapTransitLayer.Éµfac = /*@__PURE__*/function () {\n  var ÉµMapTransitLayer_BaseFactory;\n  return function MapTransitLayer_Factory(t) {\n    return (ÉµMapTransitLayer_BaseFactory || (ÉµMapTransitLayer_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(MapTransitLayer)))(t || MapTransitLayer);\n  };\n}();\n\nMapTransitLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapTransitLayer,\n  selectors: [[\"map-transit-layer\"]],\n  exportAs: [\"mapTransitLayer\"],\n  features: [Éµngcc0.ÉµÉµInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\n\n\nvar MapHeatmapLayer = /*#__PURE__*/function () {\n  function MapHeatmapLayer(_googleMap, _ngZone) {\n    _classCallCheck(this, MapHeatmapLayer);\n\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n  }\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n\n\n  _createClass(MapHeatmapLayer, [{\n    key: \"data\",\n    set: function set(data) {\n      this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n\n  }, {\n    key: \"options\",\n    set: function set(options) {\n      this._options = options;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this33 = this;\n\n      var _a, _b;\n\n      if (this._googleMap._isBrowser) {\n        if (!((_b = (_a = window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.visualization) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n        } // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n\n\n        this._ngZone.runOutsideAngular(function () {\n          _this33.heatmap = new google.maps.visualization.HeatmapLayer(_this33._combineOptions());\n        });\n\n        this._assertInitialized();\n\n        this.heatmap.setMap(this._googleMap.googleMap);\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _data = this._data,\n          heatmap = this.heatmap;\n\n      if (heatmap) {\n        if (changes['options']) {\n          heatmap.setOptions(this._combineOptions());\n        }\n\n        if (changes['data'] && _data !== undefined) {\n          heatmap.setData(this._normalizeData(_data));\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.heatmap) {\n        this.heatmap.setMap(null);\n      }\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      this._assertInitialized();\n\n      return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n\n  }, {\n    key: \"_combineOptions\",\n    value: function _combineOptions() {\n      var options = this._options || {};\n      return Object.assign(Object.assign({}, options), {\n        data: this._normalizeData(this._data || options.data || []),\n        map: this._googleMap.googleMap\n      });\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n\n  }, {\n    key: \"_normalizeData\",\n    value: function _normalizeData(data) {\n      var result = [];\n      data.forEach(function (item) {\n        result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n      });\n      return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n\n  }, {\n    key: \"_assertInitialized\",\n    value: function _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n\n        if (!this.heatmap) {\n          throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n        }\n      }\n    }\n  }]);\n\n  return MapHeatmapLayer;\n}();\n\nMapHeatmapLayer.Éµfac = function MapHeatmapLayer_Factory(t) {\n  return new (t || MapHeatmapLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone));\n};\n\nMapHeatmapLayer.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: MapHeatmapLayer,\n  selectors: [[\"map-heatmap-layer\"]],\n  inputs: {\n    data: \"data\",\n    options: \"options\"\n  },\n  exportAs: [\"mapHeatmapLayer\"],\n  features: [Éµngcc0.ÉµÉµNgOnChangesFeature]\n});\n\nMapHeatmapLayer.ctorParameters = function () {\n  return [{\n    type: GoogleMap\n  }, {\n    type: NgZone\n  }];\n};\n\nMapHeatmapLayer.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer'\n    }]\n  }], function () {\n    return [{\n      type: GoogleMap\n    }, {\n      type: Éµngcc0.NgZone\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\n\n\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer];\n\nvar GoogleMapsModule = /*#__PURE__*/_createClass(function GoogleMapsModule() {\n  _classCallCheck(this, GoogleMapsModule);\n});\n\nGoogleMapsModule.Éµfac = function GoogleMapsModule_Factory(t) {\n  return new (t || GoogleMapsModule)();\n};\n\nGoogleMapsModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: GoogleMapsModule\n});\nGoogleMapsModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(GoogleMapsModule, {\n    declarations: [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer],\n    exports: [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\n\n\nvar MapDirectionsService = /*#__PURE__*/function () {\n  function MapDirectionsService(_ngZone) {\n    _classCallCheck(this, MapDirectionsService);\n\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n\n\n  _createClass(MapDirectionsService, [{\n    key: \"route\",\n    value: function route(request) {\n      var _this34 = this;\n\n      return new Observable(function (observer) {\n        // Initialize the `DirectionsService` lazily since the Google Maps API may\n        // not have been loaded when the provider is instantiated.\n        if (!_this34._directionsService) {\n          _this34._directionsService = new google.maps.DirectionsService();\n        }\n\n        var callback = function callback(result, status) {\n          _this34._ngZone.run(function () {\n            observer.next({\n              result: result,\n              status: status\n            });\n            observer.complete();\n          });\n        };\n\n        _this34._directionsService.route(request, callback);\n      });\n    }\n  }]);\n\n  return MapDirectionsService;\n}();\n\nMapDirectionsService.Éµfac = function MapDirectionsService_Factory(t) {\n  return new (t || MapDirectionsService)(Éµngcc0.ÉµÉµinject(Éµngcc0.NgZone));\n};\n\nMapDirectionsService.Éµprov = i0.ÉµÉµdefineInjectable({\n  factory: function MapDirectionsService_Factory() {\n    return new MapDirectionsService(i0.ÉµÉµinject(i0.NgZone));\n  },\n  token: MapDirectionsService,\n  providedIn: \"root\"\n});\n\nMapDirectionsService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\n\n\nvar MapGeocoder = /*#__PURE__*/function () {\n  function MapGeocoder(_ngZone) {\n    _classCallCheck(this, MapGeocoder);\n\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n\n\n  _createClass(MapGeocoder, [{\n    key: \"geocode\",\n    value: function geocode(request) {\n      var _this35 = this;\n\n      return new Observable(function (observer) {\n        // Initialize the `Geocoder` lazily since the Google Maps API may\n        // not have been loaded when the provider is instantiated.\n        if (!_this35._geocoder) {\n          _this35._geocoder = new google.maps.Geocoder();\n        }\n\n        _this35._geocoder.geocode(request, function (results, status) {\n          _this35._ngZone.run(function () {\n            observer.next({\n              results: results,\n              status: status\n            });\n            observer.complete();\n          });\n        });\n      });\n    }\n  }]);\n\n  return MapGeocoder;\n}();\n\nMapGeocoder.Éµfac = function MapGeocoder_Factory(t) {\n  return new (t || MapGeocoder)(Éµngcc0.ÉµÉµinject(Éµngcc0.NgZone));\n};\n\nMapGeocoder.Éµprov = i0.ÉµÉµdefineInjectable({\n  factory: function MapGeocoder_Factory() {\n    return new MapGeocoder(i0.ÉµÉµinject(i0.NgZone));\n  },\n  token: MapGeocoder,\n  providedIn: \"root\"\n});\n\nMapGeocoder.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@angular/google-maps/__ivy_ngcc__/fesm2015/google-maps.js"],"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","Inject","PLATFORM_ID","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","Éµngcc0","_c0","MapEventManager","_ngZone","_pending","_listeners","_targetStream","undefined","listener","remove","name","pipe","target","observable","observer","push","addListener","event","run","next","currentTarget","value","_clearListeners","forEach","subscriber","subscribe","complete","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_elementRef","platformId","_eventManager","height","width","_options","boundsChanged","getLazyEmitter","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","window","google","ngDevMode","Error","_center","_zoom","options","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","_mapEl","nativeElement","querySelector","runOutsideAngular","maps","Map","setTarget","destroy","bounds","padding","_assertInitialized","fitBounds","x","y","panBy","latLng","panTo","latLngBounds","panToBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","styles","style","coerceCssPixelValue","_a","_b","Object","assign","Éµfac","GoogleMap_Factory","t","ÉµÉµdirectiveInject","Éµcmp","ÉµÉµdefineComponent","type","selectors","inputs","outputs","exportAs","features","ÉµÉµNgOnChangesFeature","ngContentSelectors","decls","vars","consts","template","GoogleMap_Template","rf","ctx","ÉµÉµprojectionDef","ÉµÉµelement","ÉµÉµprojection","encapsulation","changeDetection","ctorParameters","decorators","args","propDecorators","ÉµsetClassMetadata","selector","OnPush","None","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","MapBaseLayer_Factory","Éµdir","ÉµÉµdefineDirective","MapBicyclingLayer","bicyclingLayer","BicyclingLayer","_assertLayerInitialized","setMap","ÉµMapBicyclingLayer_BaseFactory","MapBicyclingLayer_Factory","ÉµÉµgetInheritedFactory","ÉµÉµInheritDefinitionFeature","MapCircle","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","radius","circle","Circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapCircle_Factory","MapDirectionsRenderer","_googleMap","directionsChanged","directions","_directions","directionsRenderer","DirectionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapDirectionsRenderer_Factory","MapGroundOverlay","_opacity","_url","_bounds","clickable","url","opacity","groundOverlay","GroundOverlay","getValue","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapGroundOverlay_Factory","MapInfoWindow","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","position","combinedOptionsChanges","infoWindow","InfoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","anchor","anchorObject","getAnchor","get","display","open","content","setPosition","MapInfoWindow_Factory","hostAttrs","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayer","KmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","MapKmlLayer_Factory","DEFAULT_MARKER_OPTIONS","MapMarker","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","title","_title","label","_label","_clickable","icon","_icon","marker","Marker","setTitle","setLabel","setClickable","setIcon","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","MapMarker_Factory","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","_canInitialize","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","markerClusterer","MarkerClusterer","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","batchSize","initialMarkers","_getInternalMarkers","_markers","toArray","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markers","filter","markerComponent","MapMarkerClusterer_Factory","contentQueries","MapMarkerClusterer_ContentQueries","dirIndex","ÉµÉµcontentQuery","ÉµÉµqueryRefresh","ÉµÉµloadQuery","MapMarkerClusterer_Template","descendants","MapPolygon","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","paths","polygon","Polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolygon_Factory","MapPolyline","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","path","polyline","Polyline","setPath","MapPolyline_Factory","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangle","Rectangle","_watchForBoundsChanges","setBounds","MapRectangle_Factory","MapTrafficLayer","_autoRefresh","autoRefresh","trafficLayer","TrafficLayer","_watchForAutoRefreshChanges","MapTrafficLayer_Factory","MapTransitLayer","transitLayer","TransitLayer","ÉµMapTransitLayer_BaseFactory","MapTransitLayer_Factory","MapHeatmapLayer","_data","visualization","heatmap","HeatmapLayer","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","MapHeatmapLayer_Factory","COMPONENTS","GoogleMapsModule","GoogleMapsModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope","MapDirectionsService","request","_directionsService","DirectionsService","callback","status","route","MapDirectionsService_Factory","ÉµÉµinject","Éµprov","ÉµÉµdefineInjectable","factory","token","providedIn","MapGeocoder","_geocoder","Geocoder","geocode","results","MapGeocoder_Factory"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nimport * as Éµngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nclass MapEventManager {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager\n            .getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n        }\n    }\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.googleMap = new google.maps.Map(this._mapEl, this._combineOptions());\n            });\n            this._eventManager.setTarget(this.googleMap);\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : (coerceCssPixelValue(this.height) || DEFAULT_HEIGHT);\n            styles.width = this.width === null ? '' : (coerceCssPixelValue(this.width) || DEFAULT_WIDTH);\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        var _a, _b;\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { \n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center, zoom: (_b = (_a = this._zoom) !== null && _a !== void 0 ? _a : options.zoom) !== null && _b !== void 0 ? _b : DEFAULT_OPTIONS.zoom, \n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId });\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n}\nGoogleMap.Éµfac = function GoogleMap_Factory(t) { return new (t || GoogleMap)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(PLATFORM_ID)); };\nGoogleMap.Éµcmp = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineComponent({ type: GoogleMap, selectors: [[\"google-map\"]], inputs: { height: \"height\", width: \"width\", center: \"center\", zoom: \"zoom\", options: \"options\", mapTypeId: \"mapTypeId\" }, outputs: { boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"map-container\"]], template: function GoogleMap_Template(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµprojectionDef();\n        Éµngcc0.ÉµÉµelement(0, \"div\", 0);\n        Éµngcc0.ÉµÉµprojection(1);\n    } }, encapsulation: 2, changeDetection: 0 });\nGoogleMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nGoogleMap.propDecorators = {\n    height: [{ type: Input }],\n    width: [{ type: Input }],\n    mapTypeId: [{ type: Input }],\n    center: [{ type: Input }],\n    zoom: [{ type: Input }],\n    options: [{ type: Input }],\n    boundsChanged: [{ type: Output }],\n    centerChanged: [{ type: Output }],\n    mapClick: [{ type: Output }],\n    mapDblclick: [{ type: Output }],\n    mapDrag: [{ type: Output }],\n    mapDragend: [{ type: Output }],\n    mapDragstart: [{ type: Output }],\n    headingChanged: [{ type: Output }],\n    idle: [{ type: Output }],\n    maptypeidChanged: [{ type: Output }],\n    mapMousemove: [{ type: Output }],\n    mapMouseout: [{ type: Output }],\n    mapMouseover: [{ type: Output }],\n    projectionChanged: [{ type: Output }],\n    mapRightclick: [{ type: Output }],\n    tilesloaded: [{ type: Output }],\n    tiltChanged: [{ type: Output }],\n    zoomChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(GoogleMap, [{\n        type: Component,\n        args: [{\n                selector: 'google-map',\n                exportAs: 'googleMap',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: '<div class=\"map-container\"></div><ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { height: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], boundsChanged: [{\n            type: Output\n        }], centerChanged: [{\n            type: Output\n        }], mapClick: [{\n            type: Output\n        }], mapDblclick: [{\n            type: Output\n        }], mapDrag: [{\n            type: Output\n        }], mapDragend: [{\n            type: Output\n        }], mapDragstart: [{\n            type: Output\n        }], headingChanged: [{\n            type: Output\n        }], idle: [{\n            type: Output\n        }], maptypeidChanged: [{\n            type: Output\n        }], mapMousemove: [{\n            type: Output\n        }], mapMouseout: [{\n            type: Output\n        }], mapMouseover: [{\n            type: Output\n        }], projectionChanged: [{\n            type: Output\n        }], mapRightclick: [{\n            type: Output\n        }], tilesloaded: [{\n            type: Output\n        }], tiltChanged: [{\n            type: Output\n        }], zoomChanged: [{\n            type: Output\n        }], center: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], mapTypeId: [{\n            type: Input\n        }] }); })();\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n}\nMapBaseLayer.Éµfac = function MapBaseLayer_Factory(t) { return new (t || MapBaseLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapBaseLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapBaseLayer, selectors: [[\"map-base-layer\"]], exportAs: [\"mapBaseLayer\"] });\nMapBaseLayer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapBaseLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-base-layer',\n                exportAs: 'mapBaseLayer'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.bicyclingLayer = new google.maps.BicyclingLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.bicyclingLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.bicyclingLayer) {\n            this.bicyclingLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapBicyclingLayer.Éµfac = /*@__PURE__*/ function () { let ÉµMapBicyclingLayer_BaseFactory; return function MapBicyclingLayer_Factory(t) { return (ÉµMapBicyclingLayer_BaseFactory || (ÉµMapBicyclingLayer_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(MapBicyclingLayer)))(t || MapBicyclingLayer); }; }();\nMapBicyclingLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapBicyclingLayer, selectors: [[\"map-bicycling-layer\"]], exportAs: [\"mapBicyclingLayer\"], features: [Éµngcc0.ÉµÉµInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapBicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-bicycling-layer',\n                exportAs: 'mapBicyclingLayer'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.circle = new google.maps.Circle(options);\n                });\n                this._assertInitialized();\n                this.circle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.circle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.circle) {\n            this.circle.setMap(null);\n        }\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius])\n            .pipe(map(([options, center, radius]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { center: center || options.center, radius: radius !== undefined ? radius : options.radius });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapCircle.Éµfac = function MapCircle_Factory(t) { return new (t || MapCircle)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapCircle.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapCircle, selectors: [[\"map-circle\"]], inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\" }, exportAs: [\"mapCircle\"] });\nMapCircle.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapCircle.propDecorators = {\n    options: [{ type: Input }],\n    center: [{ type: Input }],\n    radius: [{ type: Input }],\n    centerChanged: [{ type: Output }],\n    circleClick: [{ type: Output }],\n    circleDblclick: [{ type: Output }],\n    circleDrag: [{ type: Output }],\n    circleDragend: [{ type: Output }],\n    circleDragstart: [{ type: Output }],\n    circleMousedown: [{ type: Output }],\n    circleMousemove: [{ type: Output }],\n    circleMouseout: [{ type: Output }],\n    circleMouseover: [{ type: Output }],\n    circleMouseup: [{ type: Output }],\n    radiusChanged: [{ type: Output }],\n    circleRightclick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapCircle, [{\n        type: Directive,\n        args: [{\n                selector: 'map-circle',\n                exportAs: 'mapCircle'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { centerChanged: [{\n            type: Output\n        }], circleClick: [{\n            type: Output\n        }], circleDblclick: [{\n            type: Output\n        }], circleDrag: [{\n            type: Output\n        }], circleDragend: [{\n            type: Output\n        }], circleDragstart: [{\n            type: Output\n        }], circleMousedown: [{\n            type: Output\n        }], circleMousemove: [{\n            type: Output\n        }], circleMouseout: [{\n            type: Output\n        }], circleMouseover: [{\n            type: Output\n        }], circleMouseup: [{\n            type: Output\n        }], radiusChanged: [{\n            type: Output\n        }], circleRightclick: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], center: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.directionsRenderer = new google.maps.DirectionsRenderer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.directionsRenderer.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.directionsRenderer);\n        }\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.directionsRenderer) {\n            this.directionsRenderer.setMap(null);\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { directions: this._directions || options.directions, map: this._googleMap.googleMap });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n}\nMapDirectionsRenderer.Éµfac = function MapDirectionsRenderer_Factory(t) { return new (t || MapDirectionsRenderer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapDirectionsRenderer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapDirectionsRenderer, selectors: [[\"map-directions-renderer\"]], inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\" }, exportAs: [\"mapDirectionsRenderer\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\nMapDirectionsRenderer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapDirectionsRenderer.propDecorators = {\n    directions: [{ type: Input }],\n    options: [{ type: Input }],\n    directionsChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapDirectionsRenderer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-directions-renderer',\n                exportAs: 'mapDirectionsRenderer'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { directionsChanged: [{\n            type: Output\n        }], directions: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    }\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                if (bounds) {\n                    this._ngZone.runOutsideAngular(() => {\n                        this.groundOverlay = new google.maps.GroundOverlay(this._url.getValue(), bounds, {\n                            clickable: this.clickable,\n                            opacity: this._opacity.value,\n                        });\n                    });\n                    this._assertInitialized();\n                    this.groundOverlay.setMap(this._map.googleMap);\n                    this._eventManager.setTarget(this.groundOverlay);\n                }\n            });\n            this._watchForOpacityChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.groundOverlay) {\n            this.groundOverlay.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this._assertInitialized();\n                this.groundOverlay.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            this._assertInitialized();\n            const overlay = this.groundOverlay;\n            overlay.set('url', url);\n            // Google Maps only redraws the overlay if we re-set the map.\n            overlay.setMap(null);\n            overlay.setMap(this._map.googleMap);\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapGroundOverlay.Éµfac = function MapGroundOverlay_Factory(t) { return new (t || MapGroundOverlay)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapGroundOverlay.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapGroundOverlay, selectors: [[\"map-ground-overlay\"]], inputs: { clickable: \"clickable\", url: \"url\", bounds: \"bounds\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\" }, exportAs: [\"mapGroundOverlay\"] });\nMapGroundOverlay.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapGroundOverlay.propDecorators = {\n    url: [{ type: Input }],\n    bounds: [{ type: Input }],\n    clickable: [{ type: Input }],\n    opacity: [{ type: Input }],\n    mapClick: [{ type: Output }],\n    mapDblclick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapGroundOverlay, [{\n        type: Directive,\n        args: [{\n                selector: 'map-ground-overlay',\n                exportAs: 'mapGroundOverlay'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { clickable: [{\n            type: Input\n        }], mapClick: [{\n            type: Output\n        }], mapDblclick: [{\n            type: Output\n        }], url: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], opacity: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            const combinedOptionsChanges = this._combineOptions();\n            combinedOptionsChanges.pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.infoWindow = new google.maps.InfoWindow(options);\n                });\n                this._eventManager.setTarget(this.infoWindow);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor) {\n        this._assertInitialized();\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            this.infoWindow.open(this._googleMap.googleMap, anchorObject);\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { position: position || options.position, content: this._elementRef.nativeElement });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n}\nMapInfoWindow.Éµfac = function MapInfoWindow_Factory(t) { return new (t || MapInfoWindow)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapInfoWindow.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapInfoWindow, selectors: [[\"map-info-window\"]], hostAttrs: [2, \"display\", \"none\"], inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\" }, exportAs: [\"mapInfoWindow\"] });\nMapInfoWindow.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: ElementRef },\n    { type: NgZone }\n];\nMapInfoWindow.propDecorators = {\n    options: [{ type: Input }],\n    position: [{ type: Input }],\n    closeclick: [{ type: Output }],\n    contentChanged: [{ type: Output }],\n    domready: [{ type: Output }],\n    positionChanged: [{ type: Output }],\n    zindexChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapInfoWindow, [{\n        type: Directive,\n        args: [{\n                selector: 'map-info-window',\n                exportAs: 'mapInfoWindow',\n                host: { 'style': 'display: none' }\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.ElementRef }, { type: Éµngcc0.NgZone }]; }, { closeclick: [{\n            type: Output\n        }], contentChanged: [{\n            type: Output\n        }], domready: [{\n            type: Output\n        }], positionChanged: [{\n            type: Output\n        }], zindexChanged: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => this.kmlLayer = new google.maps.KmlLayer(options));\n                this._assertInitialized();\n                this.kmlLayer.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.kmlLayer);\n            });\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.kmlLayer) {\n            this.kmlLayer.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { url: url || options.url });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapKmlLayer.Éµfac = function MapKmlLayer_Factory(t) { return new (t || MapKmlLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapKmlLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapKmlLayer, selectors: [[\"map-kml-layer\"]], inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\" }, exportAs: [\"mapKmlLayer\"] });\nMapKmlLayer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapKmlLayer.propDecorators = {\n    options: [{ type: Input }],\n    url: [{ type: Input }],\n    kmlClick: [{ type: Output }],\n    defaultviewportChanged: [{ type: Output }],\n    statusChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapKmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-kml-layer',\n                exportAs: 'mapKmlLayer'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { kmlClick: [{\n            type: Output\n        }], defaultviewportChanged: [{\n            type: Output\n        }], statusChanged: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], url: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    }\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.marker = new google.maps.Marker(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.marker.setMap(this._googleMap.googleMap);\n            this._eventManager.setTarget(this.marker);\n        }\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        if (this.marker) {\n            this.marker.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        var _a;\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return Object.assign(Object.assign({}, options), { title: this._title || options.title, position: this._position || options.position, label: this._label || options.label, clickable: (_a = this._clickable) !== null && _a !== void 0 ? _a : options.clickable, map: this._googleMap.googleMap, icon: this._icon || options.icon });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarker.Éµfac = function MapMarker_Factory(t) { return new (t || MapMarker)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapMarker.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapMarker, selectors: [[\"map-marker\"]], inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\" }, exportAs: [\"mapMarker\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\nMapMarker.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapMarker.propDecorators = {\n    title: [{ type: Input }],\n    position: [{ type: Input }],\n    label: [{ type: Input }],\n    clickable: [{ type: Input }],\n    options: [{ type: Input }],\n    icon: [{ type: Input }],\n    animationChanged: [{ type: Output }],\n    mapClick: [{ type: Output }],\n    clickableChanged: [{ type: Output }],\n    cursorChanged: [{ type: Output }],\n    mapDblclick: [{ type: Output }],\n    mapDrag: [{ type: Output }],\n    mapDragend: [{ type: Output }],\n    draggableChanged: [{ type: Output }],\n    mapDragstart: [{ type: Output }],\n    flatChanged: [{ type: Output }],\n    iconChanged: [{ type: Output }],\n    mapMousedown: [{ type: Output }],\n    mapMouseout: [{ type: Output }],\n    mapMouseover: [{ type: Output }],\n    mapMouseup: [{ type: Output }],\n    positionChanged: [{ type: Output }],\n    mapRightclick: [{ type: Output }],\n    shapeChanged: [{ type: Output }],\n    titleChanged: [{ type: Output }],\n    visibleChanged: [{ type: Output }],\n    zindexChanged: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapMarker, [{\n        type: Directive,\n        args: [{\n                selector: 'map-marker',\n                exportAs: 'mapMarker'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { animationChanged: [{\n            type: Output\n        }], mapClick: [{\n            type: Output\n        }], clickableChanged: [{\n            type: Output\n        }], cursorChanged: [{\n            type: Output\n        }], mapDblclick: [{\n            type: Output\n        }], mapDrag: [{\n            type: Output\n        }], mapDragend: [{\n            type: Output\n        }], draggableChanged: [{\n            type: Output\n        }], mapDragstart: [{\n            type: Output\n        }], flatChanged: [{\n            type: Output\n        }], iconChanged: [{\n            type: Output\n        }], mapMousedown: [{\n            type: Output\n        }], mapMouseout: [{\n            type: Output\n        }], mapMouseover: [{\n            type: Output\n        }], mapMouseup: [{\n            type: Output\n        }], positionChanged: [{\n            type: Output\n        }], mapRightclick: [{\n            type: Output\n        }], shapeChanged: [{\n            type: Output\n        }], titleChanged: [{\n            type: Output\n        }], visibleChanged: [{\n            type: Output\n        }], zindexChanged: [{\n            type: Output\n        }], title: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], clickable: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], icon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        this._canInitialize = this._googleMap._isBrowser;\n    }\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.markerClusterer = new MarkerClusterer(this._googleMap.googleMap, [], this._combineOptions());\n            });\n            this._assertInitialized();\n            this._eventManager.setTarget(this.markerClusterer);\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            this._watchForMarkerChanges();\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        if (this.markerClusterer) {\n            this.markerClusterer.setMap(null);\n        }\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return Object.assign(Object.assign({}, options), { ariaLabelFn: (_a = this.ariaLabelFn) !== null && _a !== void 0 ? _a : options.ariaLabelFn, averageCenter: (_b = this._averageCenter) !== null && _b !== void 0 ? _b : options.averageCenter, batchSize: (_c = this.batchSize) !== null && _c !== void 0 ? _c : options.batchSize, batchSizeIE: (_d = this._batchSizeIE) !== null && _d !== void 0 ? _d : options.batchSizeIE, calculator: (_e = this._calculator) !== null && _e !== void 0 ? _e : options.calculator, clusterClass: (_f = this._clusterClass) !== null && _f !== void 0 ? _f : options.clusterClass, enableRetinaIcons: (_g = this._enableRetinaIcons) !== null && _g !== void 0 ? _g : options.enableRetinaIcons, gridSize: (_h = this._gridSize) !== null && _h !== void 0 ? _h : options.gridSize, ignoreHidden: (_j = this._ignoreHidden) !== null && _j !== void 0 ? _j : options.ignoreHidden, imageExtension: (_k = this._imageExtension) !== null && _k !== void 0 ? _k : options.imageExtension, imagePath: (_l = this._imagePath) !== null && _l !== void 0 ? _l : options.imagePath, imageSizes: (_m = this._imageSizes) !== null && _m !== void 0 ? _m : options.imageSizes, maxZoom: (_o = this._maxZoom) !== null && _o !== void 0 ? _o : options.maxZoom, minimumClusterSize: (_p = this._minimumClusterSize) !== null && _p !== void 0 ? _p : options.minimumClusterSize, styles: (_q = this._styles) !== null && _q !== void 0 ? _q : options.styles, title: (_r = this._title) !== null && _r !== void 0 ? _r : options.title, zIndex: (_s = this._zIndex) !== null && _s !== void 0 ? _s : options.zIndex, zoomOnClick: (_t = this._zoomOnClick) !== null && _t !== void 0 ? _t : options.zoomOnClick });\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        const initialMarkers = [];\n        for (const marker of this._getInternalMarkers(this._markers.toArray())) {\n            this._currentMarkers.add(marker);\n            initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n        this._markers.changes.pipe(takeUntil(this._destroy)).subscribe((markerComponents) => {\n            this._assertInitialized();\n            const newMarkers = new Set(this._getInternalMarkers(markerComponents));\n            const markersToAdd = [];\n            const markersToRemove = [];\n            for (const marker of Array.from(newMarkers)) {\n                if (!this._currentMarkers.has(marker)) {\n                    this._currentMarkers.add(marker);\n                    markersToAdd.push(marker);\n                }\n            }\n            for (const marker of Array.from(this._currentMarkers)) {\n                if (!newMarkers.has(marker)) {\n                    markersToRemove.push(marker);\n                }\n            }\n            this.markerClusterer.addMarkers(markersToAdd, true);\n            this.markerClusterer.removeMarkers(markersToRemove, true);\n            this.markerClusterer.repaint();\n            for (const marker of markersToRemove) {\n                this._currentMarkers.delete(marker);\n            }\n        });\n    }\n    _getInternalMarkers(markers) {\n        return markers.filter(markerComponent => !!markerComponent.marker)\n            .map(markerComponent => markerComponent.marker);\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapMarkerClusterer.Éµfac = function MapMarkerClusterer_Factory(t) { return new (t || MapMarkerClusterer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapMarkerClusterer.Éµcmp = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineComponent({ type: MapMarkerClusterer, selectors: [[\"map-marker-clusterer\"]], contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        Éµngcc0.ÉµÉµcontentQuery(dirIndex, MapMarker, 5);\n    } if (rf & 2) {\n        let _t;\n        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx._markers = _t);\n    } }, inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\", batchSize: \"batchSize\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\" }, exportAs: [\"mapMarkerClusterer\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MapMarkerClusterer_Template(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµprojectionDef();\n        Éµngcc0.ÉµÉµprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMapMarkerClusterer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapMarkerClusterer.propDecorators = {\n    ariaLabelFn: [{ type: Input }],\n    averageCenter: [{ type: Input }],\n    batchSize: [{ type: Input }],\n    batchSizeIE: [{ type: Input }],\n    calculator: [{ type: Input }],\n    clusterClass: [{ type: Input }],\n    enableRetinaIcons: [{ type: Input }],\n    gridSize: [{ type: Input }],\n    ignoreHidden: [{ type: Input }],\n    imageExtension: [{ type: Input }],\n    imagePath: [{ type: Input }],\n    imageSizes: [{ type: Input }],\n    maxZoom: [{ type: Input }],\n    minimumClusterSize: [{ type: Input }],\n    styles: [{ type: Input }],\n    title: [{ type: Input }],\n    zIndex: [{ type: Input }],\n    zoomOnClick: [{ type: Input }],\n    options: [{ type: Input }],\n    clusteringbegin: [{ type: Output }],\n    clusteringend: [{ type: Output }],\n    clusterClick: [{ type: Output }],\n    _markers: [{ type: ContentChildren, args: [MapMarker, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapMarkerClusterer, [{\n        type: Component,\n        args: [{\n                selector: 'map-marker-clusterer',\n                exportAs: 'mapMarkerClusterer',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { ariaLabelFn: [{\n            type: Input\n        }], clusteringbegin: [{\n            type: Output\n        }], clusteringend: [{\n            type: Output\n        }], clusterClick: [{\n            type: Output\n        }], averageCenter: [{\n            type: Input\n        }], batchSizeIE: [{\n            type: Input\n        }], calculator: [{\n            type: Input\n        }], clusterClass: [{\n            type: Input\n        }], enableRetinaIcons: [{\n            type: Input\n        }], gridSize: [{\n            type: Input\n        }], ignoreHidden: [{\n            type: Input\n        }], imageExtension: [{\n            type: Input\n        }], imagePath: [{\n            type: Input\n        }], imageSizes: [{\n            type: Input\n        }], maxZoom: [{\n            type: Input\n        }], minimumClusterSize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], zoomOnClick: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }], batchSize: [{\n            type: Input\n        }], _markers: [{\n            type: ContentChildren,\n            args: [MapMarker, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.polygon = new google.maps.Polygon(options);\n                });\n                this._assertInitialized();\n                this.polygon.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polygon);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polygon) {\n            this.polygon.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { paths: paths || options.paths });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolygon.Éµfac = function MapPolygon_Factory(t) { return new (t || MapPolygon)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapPolygon.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapPolygon, selectors: [[\"map-polygon\"]], inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\" }, exportAs: [\"mapPolygon\"] });\nMapPolygon.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapPolygon.propDecorators = {\n    options: [{ type: Input }],\n    paths: [{ type: Input }],\n    polygonClick: [{ type: Output }],\n    polygonDblclick: [{ type: Output }],\n    polygonDrag: [{ type: Output }],\n    polygonDragend: [{ type: Output }],\n    polygonDragstart: [{ type: Output }],\n    polygonMousedown: [{ type: Output }],\n    polygonMousemove: [{ type: Output }],\n    polygonMouseout: [{ type: Output }],\n    polygonMouseover: [{ type: Output }],\n    polygonMouseup: [{ type: Output }],\n    polygonRightclick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapPolygon, [{\n        type: Directive,\n        args: [{\n                selector: 'map-polygon',\n                exportAs: 'mapPolygon'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { polygonClick: [{\n            type: Output\n        }], polygonDblclick: [{\n            type: Output\n        }], polygonDrag: [{\n            type: Output\n        }], polygonDragend: [{\n            type: Output\n        }], polygonDragstart: [{\n            type: Output\n        }], polygonMousedown: [{\n            type: Output\n        }], polygonMousemove: [{\n            type: Output\n        }], polygonMouseout: [{\n            type: Output\n        }], polygonMouseover: [{\n            type: Output\n        }], polygonMouseup: [{\n            type: Output\n        }], polygonRightclick: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], paths: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => this.polyline = new google.maps.Polyline(options));\n                this._assertInitialized();\n                this.polyline.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.polyline);\n            });\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.polyline) {\n            this.polyline.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { path: path || options.path });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapPolyline.Éµfac = function MapPolyline_Factory(t) { return new (t || MapPolyline)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapPolyline.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapPolyline, selectors: [[\"map-polyline\"]], inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\" }, exportAs: [\"mapPolyline\"] });\nMapPolyline.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapPolyline.propDecorators = {\n    options: [{ type: Input }],\n    path: [{ type: Input }],\n    polylineClick: [{ type: Output }],\n    polylineDblclick: [{ type: Output }],\n    polylineDrag: [{ type: Output }],\n    polylineDragend: [{ type: Output }],\n    polylineDragstart: [{ type: Output }],\n    polylineMousedown: [{ type: Output }],\n    polylineMousemove: [{ type: Output }],\n    polylineMouseout: [{ type: Output }],\n    polylineMouseover: [{ type: Output }],\n    polylineMouseup: [{ type: Output }],\n    polylineRightclick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapPolyline, [{\n        type: Directive,\n        args: [{\n                selector: 'map-polyline',\n                exportAs: 'mapPolyline'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { polylineClick: [{\n            type: Output\n        }], polylineDblclick: [{\n            type: Output\n        }], polylineDrag: [{\n            type: Output\n        }], polylineDragend: [{\n            type: Output\n        }], polylineDragstart: [{\n            type: Output\n        }], polylineMousedown: [{\n            type: Output\n        }], polylineMousemove: [{\n            type: Output\n        }], polylineMouseout: [{\n            type: Output\n        }], polylineMouseover: [{\n            type: Output\n        }], polylineMouseup: [{\n            type: Output\n        }], polylineRightclick: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(this._ngZone);\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    }\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                // We'll bring it back in inside the `MapEventManager` only for the events that the\n                // user has subscribed to.\n                this._ngZone.runOutsideAngular(() => {\n                    this.rectangle = new google.maps.Rectangle(options);\n                });\n                this._assertInitialized();\n                this.rectangle.setMap(this._map.googleMap);\n                this._eventManager.setTarget(this.rectangle);\n            });\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.rectangle) {\n            this.rectangle.setMap(null);\n        }\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = Object.assign(Object.assign({}, options), { bounds: bounds || options.bounds });\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._map.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapRectangle.Éµfac = function MapRectangle_Factory(t) { return new (t || MapRectangle)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapRectangle.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapRectangle, selectors: [[\"map-rectangle\"]], inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\" }, exportAs: [\"mapRectangle\"] });\nMapRectangle.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapRectangle.propDecorators = {\n    options: [{ type: Input }],\n    bounds: [{ type: Input }],\n    boundsChanged: [{ type: Output }],\n    rectangleClick: [{ type: Output }],\n    rectangleDblclick: [{ type: Output }],\n    rectangleDrag: [{ type: Output }],\n    rectangleDragend: [{ type: Output }],\n    rectangleDragstart: [{ type: Output }],\n    rectangleMousedown: [{ type: Output }],\n    rectangleMousemove: [{ type: Output }],\n    rectangleMouseout: [{ type: Output }],\n    rectangleMouseover: [{ type: Output }],\n    rectangleMouseup: [{ type: Output }],\n    rectangleRightclick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapRectangle, [{\n        type: Directive,\n        args: [{\n                selector: 'map-rectangle',\n                exportAs: 'mapRectangle'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { boundsChanged: [{\n            type: Output\n        }], rectangleClick: [{\n            type: Output\n        }], rectangleDblclick: [{\n            type: Output\n        }], rectangleDrag: [{\n            type: Output\n        }], rectangleDragend: [{\n            type: Output\n        }], rectangleDragstart: [{\n            type: Output\n        }], rectangleMousedown: [{\n            type: Output\n        }], rectangleMousemove: [{\n            type: Output\n        }], rectangleMouseout: [{\n            type: Output\n        }], rectangleMouseover: [{\n            type: Output\n        }], rectangleMouseup: [{\n            type: Output\n        }], rectangleRightclick: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n    }\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions().pipe(take(1)).subscribe(options => {\n                // Create the object outside the zone so its events don't trigger change detection.\n                this._ngZone.runOutsideAngular(() => {\n                    this.trafficLayer = new google.maps.TrafficLayer(options);\n                });\n                this._assertInitialized();\n                this.trafficLayer.setMap(this._map.googleMap);\n            });\n            this._watchForAutoRefreshChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        if (this.trafficLayer) {\n            this.trafficLayer.setMap(null);\n        }\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTrafficLayer.Éµfac = function MapTrafficLayer_Factory(t) { return new (t || MapTrafficLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapTrafficLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapTrafficLayer, selectors: [[\"map-traffic-layer\"]], inputs: { autoRefresh: \"autoRefresh\" }, exportAs: [\"mapTrafficLayer\"] });\nMapTrafficLayer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapTrafficLayer.propDecorators = {\n    autoRefresh: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapTrafficLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-traffic-layer',\n                exportAs: 'mapTrafficLayer'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { autoRefresh: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer extends MapBaseLayer {\n    _initializeObject() {\n        this.transitLayer = new google.maps.TransitLayer();\n    }\n    _setMap() {\n        this._assertLayerInitialized();\n        this.transitLayer.setMap(this._map.googleMap);\n    }\n    _unsetMap() {\n        if (this.transitLayer) {\n            this.transitLayer.setMap(null);\n        }\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n}\nMapTransitLayer.Éµfac = /*@__PURE__*/ function () { let ÉµMapTransitLayer_BaseFactory; return function MapTransitLayer_Factory(t) { return (ÉµMapTransitLayer_BaseFactory || (ÉµMapTransitLayer_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(MapTransitLayer)))(t || MapTransitLayer); }; }();\nMapTransitLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapTransitLayer, selectors: [[\"map-transit-layer\"]], exportAs: [\"mapTransitLayer\"], features: [Éµngcc0.ÉµÉµInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapTransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-transit-layer',\n                exportAs: 'mapTransitLayer'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    ngOnInit() {\n        var _a, _b;\n        if (this._googleMap._isBrowser) {\n            if (!((_b = (_a = window.google) === null || _a === void 0 ? void 0 : _a.maps) === null || _b === void 0 ? void 0 : _b.visualization) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this._ngZone.runOutsideAngular(() => {\n                this.heatmap = new google.maps.visualization.HeatmapLayer(this._combineOptions());\n            });\n            this._assertInitialized();\n            this.heatmap.setMap(this._googleMap.googleMap);\n        }\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.heatmap) {\n            this.heatmap.setMap(null);\n        }\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return Object.assign(Object.assign({}, options), { data: this._normalizeData(this._data || options.data || []), map: this._googleMap.googleMap });\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._googleMap.googleMap) {\n                throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                    'Please wait for the API to load before trying to interact with it.');\n            }\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n}\nMapHeatmapLayer.Éµfac = function MapHeatmapLayer_Factory(t) { return new (t || MapHeatmapLayer)(Éµngcc0.ÉµÉµdirectiveInject(GoogleMap), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };\nMapHeatmapLayer.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: MapHeatmapLayer, selectors: [[\"map-heatmap-layer\"]], inputs: { data: \"data\", options: \"options\" }, exportAs: [\"mapHeatmapLayer\"], features: [Éµngcc0.ÉµÉµNgOnChangesFeature] });\nMapHeatmapLayer.ctorParameters = () => [\n    { type: GoogleMap },\n    { type: NgZone }\n];\nMapHeatmapLayer.propDecorators = {\n    data: [{ type: Input }],\n    options: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapHeatmapLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'map-heatmap-layer',\n                exportAs: 'mapHeatmapLayer'\n            }]\n    }], function () { return [{ type: GoogleMap }, { type: Éµngcc0.NgZone }]; }, { data: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] }); })();\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n    MapHeatmapLayer,\n];\nclass GoogleMapsModule {\n}\nGoogleMapsModule.Éµfac = function GoogleMapsModule_Factory(t) { return new (t || GoogleMapsModule)(); };\nGoogleMapsModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: GoogleMapsModule });\nGoogleMapsModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(GoogleMapsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: COMPONENTS,\n                exports: COMPONENTS\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(GoogleMapsModule, { declarations: [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer], exports: [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapHeatmapLayer] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            // Initialize the `DirectionsService` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._directionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            const callback = (result, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ result, status });\n                    observer.complete();\n                });\n            };\n            this._directionsService.route(request, callback);\n        });\n    }\n}\nMapDirectionsService.Éµfac = function MapDirectionsService_Factory(t) { return new (t || MapDirectionsService)(Éµngcc0.ÉµÉµinject(Éµngcc0.NgZone)); };\nMapDirectionsService.Éµprov = i0.ÉµÉµdefineInjectable({ factory: function MapDirectionsService_Factory() { return new MapDirectionsService(i0.ÉµÉµinject(i0.NgZone)); }, token: MapDirectionsService, providedIn: \"root\" });\nMapDirectionsService.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapDirectionsService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Éµngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            // Initialize the `Geocoder` lazily since the Google Maps API may\n            // not have been loaded when the provider is instantiated.\n            if (!this._geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            this._geocoder.geocode(request, (results, status) => {\n                this._ngZone.run(() => {\n                    observer.next({ results, status });\n                    observer.complete();\n                });\n            });\n        });\n    }\n}\nMapGeocoder.Éµfac = function MapGeocoder_Factory(t) { return new (t || MapGeocoder)(Éµngcc0.ÉµÉµinject(Éµngcc0.NgZone)); };\nMapGeocoder.Éµprov = i0.ÉµÉµdefineInjectable({ factory: function MapGeocoder_Factory() { return new MapGeocoder(i0.ÉµÉµinject(i0.NgZone)); }, token: MapGeocoder, providedIn: \"root\" });\nMapGeocoder.ctorParameters = () => [\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(MapGeocoder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Éµngcc0.NgZone }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n\n"]},"metadata":{},"sourceType":"module"}