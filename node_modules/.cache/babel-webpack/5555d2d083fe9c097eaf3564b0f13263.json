{"ast":null,"code":"////// For apps with both Http and HttpClient ////\nimport * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { NgModule } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\n\nvar InMemoryWebApiModule =\n/** @class */\nfunction () {\n  function InMemoryWebApiModule() {}\n\n  InMemoryWebApiModule_1 = InMemoryWebApiModule;\n  /**\r\n  *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n  *  to in-memory data store that implements `InMemoryDbService`.\r\n  *  with class that implements InMemoryDbService and creates an in-memory database.\r\n  *\r\n  *  Usually imported in the root application module.\r\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n  *\r\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n  * @param {InMemoryBackendConfigArgs} [options]\r\n  *\r\n  * @example\r\n  * InMemoryWebApiModule.forRoot(dbCreator);\r\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n  */\n\n  InMemoryWebApiModule.forRoot = function (dbCreator, options) {\n    return {\n      ngModule: InMemoryWebApiModule_1,\n      providers: [{\n        provide: InMemoryDbService,\n        useClass: dbCreator\n      }, {\n        provide: InMemoryBackendConfig,\n        useValue: options\n      }, {\n        provide: HttpBackend,\n        useFactory: httpClientInMemBackendServiceFactory,\n        deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]\n      }]\n    };\n  };\n  /**\r\n   *\r\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n   * Same as `forRoot`.\r\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n   */\n\n\n  InMemoryWebApiModule.forFeature = function (dbCreator, options) {\n    return InMemoryWebApiModule_1.forRoot(dbCreator, options);\n  };\n\n  var InMemoryWebApiModule_1;\n\n  InMemoryWebApiModule.ɵfac = function InMemoryWebApiModule_Factory(t) {\n    return new (t || InMemoryWebApiModule)();\n  };\n\n  InMemoryWebApiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InMemoryWebApiModule\n  });\n  InMemoryWebApiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InMemoryWebApiModule, [{\n      type: NgModule,\n      args: [{}]\n    }], function () {\n      return [];\n    }, null);\n  })();\n\n  return InMemoryWebApiModule;\n}();\n\nexport { InMemoryWebApiModule };","map":{"version":3,"sources":["C:/Users/user/Desktop/fgs/front/fgs/node_modules/angular-in-memory-web-api/__ivy_ngcc__/in-memory-web-api.module.js"],"names":["ɵngcc0","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","NgModule","HttpBackend","XhrFactory","InMemoryBackendConfig","InMemoryDbService","httpClientInMemBackendServiceFactory","InMemoryWebApiModule","InMemoryWebApiModule_1","forRoot","dbCreator","options","ngModule","providers","provide","useClass","useValue","useFactory","deps","forFeature","ɵfac","InMemoryWebApiModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args"],"mappings":"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","sourcesContent":["////// For apps with both Http and HttpClient ////\r\nimport * as ɵngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\r\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\r\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\r\nvar InMemoryWebApiModule = /** @class */ (function () {\r\n    function InMemoryWebApiModule() {\r\n    }\r\n    InMemoryWebApiModule_1 = InMemoryWebApiModule;\r\n    /**\r\n    *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n    *  to in-memory data store that implements `InMemoryDbService`.\r\n    *  with class that implements InMemoryDbService and creates an in-memory database.\r\n    *\r\n    *  Usually imported in the root application module.\r\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n    *\r\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n    * @param {InMemoryBackendConfigArgs} [options]\r\n    *\r\n    * @example\r\n    * InMemoryWebApiModule.forRoot(dbCreator);\r\n    * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n    */\r\n    InMemoryWebApiModule.forRoot = function (dbCreator, options) {\r\n        return {\r\n            ngModule: InMemoryWebApiModule_1,\r\n            providers: [\r\n                { provide: InMemoryDbService, useClass: dbCreator },\r\n                { provide: InMemoryBackendConfig, useValue: options },\r\n                { provide: HttpBackend,\r\n                    useFactory: httpClientInMemBackendServiceFactory,\r\n                    deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory] }\r\n            ]\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n     * Same as `forRoot`.\r\n     * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n     */\r\n    InMemoryWebApiModule.forFeature = function (dbCreator, options) {\r\n        return InMemoryWebApiModule_1.forRoot(dbCreator, options);\r\n    };\r\n    var InMemoryWebApiModule_1;\nInMemoryWebApiModule.ɵfac = function InMemoryWebApiModule_Factory(t) { return new (t || InMemoryWebApiModule)(); };\nInMemoryWebApiModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: InMemoryWebApiModule });\nInMemoryWebApiModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InMemoryWebApiModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return []; }, null); })();\r\n    return InMemoryWebApiModule;\r\n}());\r\nexport { InMemoryWebApiModule };\r\n\n"]},"metadata":{},"sourceType":"module"}