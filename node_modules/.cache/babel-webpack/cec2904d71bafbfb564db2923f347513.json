{"ast":null,"code":"import _get from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\n\nvar RepeatWhenOperator = /*#__PURE__*/function () {\n  function RepeatWhenOperator(notifier) {\n    _classCallCheck(this, RepeatWhenOperator);\n\n    this.notifier = notifier;\n  }\n\n  _createClass(RepeatWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n  }]);\n\n  return RepeatWhenOperator;\n}();\n\nvar RepeatWhenSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(RepeatWhenSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(RepeatWhenSubscriber);\n\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this;\n\n    _classCallCheck(this, RepeatWhenSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n\n  _createClass(RepeatWhenSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.sourceIsBeingSubscribedTo = true;\n      this.source.subscribe(this);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      if (this.sourceIsBeingSubscribedTo === false) {\n        return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.sourceIsBeingSubscribedTo = false;\n\n      if (!this.isStopped) {\n        if (!this.retries) {\n          this.subscribeToRetries();\n        }\n\n        if (!this.retriesSubscription || this.retriesSubscription.closed) {\n          return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n        }\n\n        this._unsubscribeAndRecycle();\n\n        this.notifications.next();\n      }\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var notifications = this.notifications,\n          retriesSubscription = this.retriesSubscription;\n\n      if (notifications) {\n        notifications.unsubscribe();\n        this.notifications = null;\n      }\n\n      if (retriesSubscription) {\n        retriesSubscription.unsubscribe();\n        this.retriesSubscription = null;\n      }\n\n      this.retries = null;\n    }\n  }, {\n    key: \"_unsubscribeAndRecycle\",\n    value: function _unsubscribeAndRecycle() {\n      var _unsubscribe = this._unsubscribe;\n      this._unsubscribe = null;\n\n      _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"_unsubscribeAndRecycle\", this).call(this);\n\n      this._unsubscribe = _unsubscribe;\n      return this;\n    }\n  }, {\n    key: \"subscribeToRetries\",\n    value: function subscribeToRetries() {\n      this.notifications = new Subject();\n      var retries;\n\n      try {\n        var notifier = this.notifier;\n        retries = notifier(this.notifications);\n      } catch (e) {\n        return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n      }\n\n      this.retries = retries;\n      this.retriesSubscription = subscribeToResult(this, retries);\n    }\n  }]);\n\n  return RepeatWhenSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/pfe/fgs/front/fgs/node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js"],"names":["Subject","OuterSubscriber","subscribeToResult","repeatWhen","notifier","source","lift","RepeatWhenOperator","subscriber","subscribe","RepeatWhenSubscriber","destination","sourceIsBeingSubscribedTo","outerValue","innerValue","outerIndex","innerIndex","innerSub","isStopped","retries","subscribeToRetries","retriesSubscription","closed","_unsubscribeAndRecycle","notifications","next","unsubscribe","_unsubscribe","e"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACjC,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,kBAAJ,CAAuBH,QAAvB,CAAZ,CAAZ;AAAA,GAAP;AACH;;IACKG,kB;AACF,8BAAYH,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;;;WACD,cAAKI,UAAL,EAAiBH,MAAjB,EAAyB;AACrB,aAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,oBAAJ,CAAyBF,UAAzB,EAAqC,KAAKJ,QAA1C,EAAoDC,MAApD,CAAjB,CAAP;AACH;;;;;;IAECK,oB;;;;;AACF,gCAAYC,WAAZ,EAAyBP,QAAzB,EAAmCC,MAAnC,EAA2C;AAAA;;AAAA;;AACvC,8BAAMM,WAAN;AACA,UAAKP,QAAL,GAAgBA,QAAhB;AACA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKO,yBAAL,GAAiC,IAAjC;AAJuC;AAK1C;;;;WACD,oBAAWC,UAAX,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,UAA/C,EAA2DC,QAA3D,EAAqE;AACjE,WAAKL,yBAAL,GAAiC,IAAjC;AACA,WAAKP,MAAL,CAAYI,SAAZ,CAAsB,IAAtB;AACH;;;WACD,wBAAeQ,QAAf,EAAyB;AACrB,UAAI,KAAKL,yBAAL,KAAmC,KAAvC,EAA8C;AAC1C;AACH;AACJ;;;WACD,oBAAW;AACP,WAAKA,yBAAL,GAAiC,KAAjC;;AACA,UAAI,CAAC,KAAKM,SAAV,EAAqB;AACjB,YAAI,CAAC,KAAKC,OAAV,EAAmB;AACf,eAAKC,kBAAL;AACH;;AACD,YAAI,CAAC,KAAKC,mBAAN,IAA6B,KAAKA,mBAAL,CAAyBC,MAA1D,EAAkE;AAC9D;AACH;;AACD,aAAKC,sBAAL;;AACA,aAAKC,aAAL,CAAmBC,IAAnB;AACH;AACJ;;;WACD,wBAAe;AACX,UAAQD,aAAR,GAA+C,IAA/C,CAAQA,aAAR;AAAA,UAAuBH,mBAAvB,GAA+C,IAA/C,CAAuBA,mBAAvB;;AACA,UAAIG,aAAJ,EAAmB;AACfA,QAAAA,aAAa,CAACE,WAAd;AACA,aAAKF,aAAL,GAAqB,IAArB;AACH;;AACD,UAAIH,mBAAJ,EAAyB;AACrBA,QAAAA,mBAAmB,CAACK,WAApB;AACA,aAAKL,mBAAL,GAA2B,IAA3B;AACH;;AACD,WAAKF,OAAL,GAAe,IAAf;AACH;;;WACD,kCAAyB;AACrB,UAAQQ,YAAR,GAAyB,IAAzB,CAAQA,YAAR;AACA,WAAKA,YAAL,GAAoB,IAApB;;AACA;;AACA,WAAKA,YAAL,GAAoBA,YAApB;AACA,aAAO,IAAP;AACH;;;WACD,8BAAqB;AACjB,WAAKH,aAAL,GAAqB,IAAIxB,OAAJ,EAArB;AACA,UAAImB,OAAJ;;AACA,UAAI;AACA,YAAQf,QAAR,GAAqB,IAArB,CAAQA,QAAR;AACAe,QAAAA,OAAO,GAAGf,QAAQ,CAAC,KAAKoB,aAAN,CAAlB;AACH,OAHD,CAIA,OAAOI,CAAP,EAAU;AACN;AACH;;AACD,WAAKT,OAAL,GAAeA,OAAf;AACA,WAAKE,mBAAL,GAA2BnB,iBAAiB,CAAC,IAAD,EAAOiB,OAAP,CAA5C;AACH;;;;EA5D8BlB,e","sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete(innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}