{"ast":null,"code":"import _get from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\n\nvar SwitchMapOperator = /*#__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    _classCallCheck(this, SwitchMapOperator);\n\n    this.project = project;\n  }\n\n  _createClass(SwitchMapOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n  }]);\n\n  return SwitchMapOperator;\n}();\n\nvar SwitchMapSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(SwitchMapSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(SwitchMapSubscriber);\n\n  function SwitchMapSubscriber(destination, project) {\n    var _this;\n\n    _classCallCheck(this, SwitchMapSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(SwitchMapSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var result;\n      var index = this.index++;\n\n      try {\n        result = this.project(value, index);\n      } catch (error) {\n        this.destination.error(error);\n        return;\n      }\n\n      this._innerSub(result, value, index);\n    }\n  }, {\n    key: \"_innerSub\",\n    value: function _innerSub(result, value, index) {\n      var innerSubscription = this.innerSubscription;\n\n      if (innerSubscription) {\n        innerSubscription.unsubscribe();\n      }\n\n      var innerSubscriber = new InnerSubscriber(this, value, index);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n\n      if (this.innerSubscription !== innerSubscriber) {\n        destination.add(this.innerSubscription);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var innerSubscription = this.innerSubscription;\n\n      if (!innerSubscription || innerSubscription.closed) {\n        _get(_getPrototypeOf(SwitchMapSubscriber.prototype), \"_complete\", this).call(this);\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.innerSubscription = null;\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      var destination = this.destination;\n      destination.remove(innerSub);\n      this.innerSubscription = null;\n\n      if (this.isStopped) {\n        _get(_getPrototypeOf(SwitchMapSubscriber.prototype), \"_complete\", this).call(this);\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.destination.next(innerValue);\n    }\n  }]);\n\n  return SwitchMapSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["C:/Users/user/Desktop/fgs/front/fgs/node_modules/rxjs/_esm2015/internal/operators/switchMap.js"],"names":["OuterSubscriber","InnerSubscriber","subscribeToResult","map","from","switchMap","project","resultSelector","source","pipe","a","i","b","ii","lift","SwitchMapOperator","subscriber","subscribe","SwitchMapSubscriber","destination","index","value","result","error","_innerSub","innerSubscription","unsubscribe","innerSubscriber","add","undefined","closed","innerSub","remove","isStopped","outerValue","innerValue","outerIndex","innerIndex","next"],"mappings":"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","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new SwitchMapOperator(project));\n}\nclass SwitchMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n}\nclass SwitchMapSubscriber extends OuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    }\n    _innerSub(result, value, index) {\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        const innerSubscriber = new InnerSubscriber(this, value, index);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed) {\n            super._complete();\n        }\n        this.unsubscribe();\n    }\n    _unsubscribe() {\n        this.innerSubscription = null;\n    }\n    notifyComplete(innerSub) {\n        const destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            super._complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}