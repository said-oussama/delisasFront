{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(map); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var prop = map[key];\n    var type = void 0;\n\n    if (_typeof(prop) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}","map":{"version":3,"sources":["C:/Users/NESRINE/Desktop/f/fgs/node_modules/read-excel-file/modules/read/schema/convertMapToSchema.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","convertMapToSchema","map","schema","_i","_Object$keys","Object","keys","length","key","prop","type"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,eAAe,SAASK,kBAAT,CAA4BC,GAA5B,EAAiC;AAC9C,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAhC,EAAkDE,EAAE,GAAGC,YAAY,CAACG,MAApE,EAA4EJ,EAAE,EAA9E,EAAkF;AAChF,QAAIK,GAAG,GAAGJ,YAAY,CAACD,EAAD,CAAtB;AACA,QAAIM,IAAI,GAAGR,GAAG,CAACO,GAAD,CAAd;AACA,QAAIE,IAAI,GAAG,KAAK,CAAhB;;AAEA,QAAIhB,OAAO,CAACe,IAAD,CAAP,KAAkB,QAAtB,EAAgC;AAC9BA,MAAAA,IAAI,GAAGJ,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACO,GAAD,CAAf,EAAsB,CAAtB,CAAP;AACAE,MAAAA,IAAI,GAAGV,kBAAkB,CAACC,GAAG,CAACO,GAAD,CAAH,CAASC,IAAT,CAAD,CAAzB;AACD;;AAEDP,IAAAA,MAAM,CAACM,GAAD,CAAN,GAAc;AACZC,MAAAA,IAAI,EAAEA;AADM,KAAd;;AAIA,QAAIC,IAAJ,EAAU;AACRR,MAAAA,MAAM,CAACM,GAAD,CAAN,CAAYE,IAAZ,GAAmBA,IAAnB;AACD;AACF;;AAED,SAAOR,MAAP;AACD","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(map); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var prop = map[key];\n    var type = void 0;\n\n    if (_typeof(prop) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}\n"]},"metadata":{},"sourceType":"module"}