{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/user/Desktop/fgs/front/fgs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, NgZone, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subject, BehaviorSubject, Observable, merge, asapScheduler, of, fromEvent } from 'rxjs';\nimport { filter, debounceTime, map, switchMap, takeUntil, take, tap } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: core/browser-provider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n * @param {?} _document\n * @param {?} platformId\n * @return {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction removeStyles(_document, platformId) {\n  return (\n    /**\n    * @return {?}\n    */\n    function () {\n      if (isPlatformBrowser(platformId)) {\n        /** @type {?} */\n        var elements = Array.from(_document.querySelectorAll(\"[class*=\".concat(CLASS_NAME, \"]\"))); // RegExp constructor should only be used if passing a variable to the constructor.\n        // When using static regular expression it is more performant to use reg exp literal.\n        // This is also needed to provide Safari 9 compatibility, please see\n        // https://stackoverflow.com/questions/37919802 for more discussion.\n\n        /** @type {?} */\n\n        var classRegex = /\\bflex-layout-.+?\\b/g;\n        elements.forEach(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        function (el) {\n          el.classList.contains(\"\".concat(CLASS_NAME, \"ssr\")) && el.parentNode ? el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n        });\n      }\n    }\n  );\n}\n/**\n *  Provider to remove SSR styles on the browser\n * @type {?}\n */\n\n\nvar BROWSER_PROVIDER = {\n  provide:\n  /** @type {?} */\n  APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n/** @type {?} */\n\nvar CLASS_NAME = 'flex-layout-';\n/**\n * @fileoverview added by tsickle\n * Generated from: core/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n\nvar CoreModule = /*#__PURE__*/_createClass(function CoreModule() {\n  _classCallCheck(this, CoreModule);\n});\n\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)();\n};\n\nCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [BROWSER_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [BROWSER_PROVIDER]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-change.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\n\n\nvar MediaChange = /*#__PURE__*/function () {\n  /**\n   * @param {?=} matches whether the mediaQuery is currently activated\n   * @param {?=} mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param {?=} mqAlias e.g. gt-sm, md, gt-lg\n   * @param {?=} suffix e.g. GtSM, Md, GtLg\n   * @param {?=} priority the priority of activation for the given breakpoint\n   */\n  function MediaChange() {\n    var matches = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var mediaQuery = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n    var mqAlias = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var suffix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    var priority = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n    _classCallCheck(this, MediaChange);\n\n    this.matches = matches;\n    this.mediaQuery = mediaQuery;\n    this.mqAlias = mqAlias;\n    this.suffix = suffix;\n    this.priority = priority;\n    this.property = '';\n  }\n  /**\n   * Create an exact copy of the MediaChange\n   * @return {?}\n   */\n\n\n  _createClass(MediaChange, [{\n    key: \"clone\",\n    value: function clone() {\n      return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n  }]);\n\n  return MediaChange;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/stylesheet-map.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n\n\nvar StylesheetMap = /*#__PURE__*/function () {\n  function StylesheetMap() {\n    _classCallCheck(this, StylesheetMap);\n\n    this.stylesheet = new Map();\n  }\n  /**\n   * Add an individual style to an HTML element\n   * @param {?} element\n   * @param {?} style\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(StylesheetMap, [{\n    key: \"addStyleToElement\",\n    value: function addStyleToElement(element, style, value) {\n      /** @type {?} */\n      var stylesheet = this.stylesheet.get(element);\n\n      if (stylesheet) {\n        stylesheet.set(style, value);\n      } else {\n        this.stylesheet.set(element, new Map([[style, value]]));\n      }\n    }\n    /**\n     * Clear the virtual stylesheet\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearStyles\",\n    value: function clearStyles() {\n      this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     * @param {?} el\n     * @param {?} styleName\n     * @return {?}\n     */\n\n  }, {\n    key: \"getStyleForElement\",\n    value: function getStyleForElement(el, styleName) {\n      /** @type {?} */\n      var styles = this.stylesheet.get(el);\n      /** @type {?} */\n\n      var value = '';\n\n      if (styles) {\n        /** @type {?} */\n        var style = styles.get(styleName);\n\n        if (typeof style === 'number' || typeof style === 'string') {\n          value = style + '';\n        }\n      }\n\n      return value;\n    }\n  }]);\n\n  return StylesheetMap;\n}();\n\nStylesheetMap.ɵfac = function StylesheetMap_Factory(t) {\n  return new (t || StylesheetMap)();\n};\n/** @nocollapse */\n\n\nStylesheetMap.ɵprov = ɵɵdefineInjectable({\n  factory: function StylesheetMap_Factory() {\n    return new StylesheetMap();\n  },\n  token: StylesheetMap,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StylesheetMap, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/library-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar DEFAULT_CONFIG = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: []\n};\n/** @type {?} */\n\nvar LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  function factory() {\n    return DEFAULT_CONFIG;\n  }\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/server-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n * @type {?}\n */\n\nvar SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  function factory() {\n    return false;\n  }\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/breakpoint-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  function factory() {\n    return null;\n  }\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/add-alias.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\n\nfunction mergeAlias(dest, source) {\n  dest = dest ? dest.clone() : new MediaChange();\n\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix =\n    /** @type {?} */\n    source.suffix;\n    dest.priority =\n    /** @type {?} */\n    source.priority;\n  }\n\n  return dest;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\n\n\nvar INLINE = 'inline';\n/** @type {?} */\n\nvar LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\n\nfunction buildLayoutCSS(value) {\n  var _validateValue = validateValue(value),\n      _validateValue2 = _slicedToArray(_validateValue, 3),\n      direction = _validateValue2[0],\n      wrap = _validateValue2[1],\n      isInline = _validateValue2[2];\n\n  return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateValue(value) {\n  value = value ? value.toLowerCase() : '';\n\n  var _value$split = value.split(' '),\n      _value$split2 = _slicedToArray(_value$split, 3),\n      direction = _value$split2[0],\n      wrap = _value$split2[1],\n      inline = _value$split2[2]; // First value must be the `flex-direction`\n\n\n  if (!LAYOUT_VALUES.find(\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n  function (x) {\n    return x === direction;\n  })) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n\n  return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\n\n\nfunction buildCSS(direction) {\n  var wrap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var inline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/base2.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nvar BaseDirective2 = /*#__PURE__*/function () {\n  /**\n   * @protected\n   * @param {?} elementRef\n   * @param {?} styleBuilder\n   * @param {?} styler\n   * @param {?} marshal\n   */\n  function BaseDirective2(elementRef, styleBuilder, styler, marshal) {\n    _classCallCheck(this, BaseDirective2);\n\n    this.elementRef = elementRef;\n    this.styleBuilder = styleBuilder;\n    this.styler = styler;\n    this.marshal = marshal;\n    this.DIRECTIVE_KEY = '';\n    this.inputs = [];\n    /**\n     * The most recently used styles for the builder\n     */\n\n    this.mru = {};\n    this.destroySubject = new Subject();\n    /**\n     * Cache map for style computation\n     */\n\n    this.styleCache = new Map();\n  }\n  /**\n   * Access to host element's parent DOM node\n   * @protected\n   * @return {?}\n   */\n\n\n  _createClass(BaseDirective2, [{\n    key: \"parentElement\",\n    get: function get() {\n      return this.elementRef.nativeElement.parentElement;\n    }\n    /**\n     * Access to the HTMLElement for the directive\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"nativeElement\",\n    get: function get() {\n      return this.elementRef.nativeElement;\n    }\n    /**\n     * Access to the activated value for the directive\n     * @return {?}\n     */\n\n  }, {\n    key: \"activatedValue\",\n    get: function get() {\n      return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /**\n     * For \\@Input changes\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this = this;\n\n      Object.keys(changes).forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        if (_this.inputs.indexOf(key) !== -1) {\n          /** @type {?} */\n          var bp = key.split('.').slice(1).join('.');\n          /** @type {?} */\n\n          var val = changes[key].currentValue;\n\n          _this.setValue(val, bp);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroySubject.next();\n      this.destroySubject.complete();\n      this.marshal.releaseElement(this.nativeElement);\n    }\n    /**\n     * Register with central marshaller service\n     * @protected\n     * @param {?=} extraTriggers\n     * @return {?}\n     */\n\n  }, {\n    key: \"init\",\n    value: function init() {\n      var extraTriggers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /**\n     * Add styles to the element using predefined style builder\n     * @protected\n     * @param {?} input\n     * @param {?=} parent\n     * @return {?}\n     */\n\n  }, {\n    key: \"addStyles\",\n    value: function addStyles(input, parent) {\n      /** @type {?} */\n      var builder = this.styleBuilder;\n      /** @type {?} */\n\n      var useCache = builder.shouldCache;\n      /** @type {?} */\n\n      var genStyles = this.styleCache.get(input);\n\n      if (!genStyles || !useCache) {\n        genStyles = builder.buildStyles(input, parent);\n\n        if (useCache) {\n          this.styleCache.set(input, genStyles);\n        }\n      }\n\n      this.mru = Object.assign({}, genStyles);\n      this.applyStyleToElement(genStyles);\n      builder.sideEffect(input, genStyles, parent);\n    }\n    /**\n     * Remove generated styles from an element using predefined style builder\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearStyles\",\n    value: function clearStyles() {\n      var _this2 = this;\n\n      Object.keys(this.mru).forEach(\n      /**\n      * @param {?} k\n      * @return {?}\n      */\n      function (k) {\n        _this2.mru[k] = '';\n      });\n      this.applyStyleToElement(this.mru);\n      this.mru = {};\n    }\n    /**\n     * Force trigger style updates on DOM element\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"triggerUpdate\",\n    value: function triggerUpdate() {\n      this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @protected\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFlexFlowDirection\",\n    value: function getFlexFlowDirection(target) {\n      var addIfMissing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (target) {\n        var _this$styler$getFlowD = this.styler.getFlowDirection(target),\n            _this$styler$getFlowD2 = _slicedToArray(_this$styler$getFlowD, 2),\n            value = _this$styler$getFlowD2[0],\n            hasInlineValue = _this$styler$getFlowD2[1];\n\n        if (!hasInlineValue && addIfMissing) {\n          /** @type {?} */\n          var style = buildLayoutCSS(value);\n          /** @type {?} */\n\n          var elements = [target];\n          this.styler.applyStyleToElements(style, elements);\n        }\n\n        return value.trim();\n      }\n\n      return 'row';\n    }\n    /**\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasWrap\",\n    value: function hasWrap(target) {\n      return this.styler.hasWrap(target);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @protected\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyStyleToElement\",\n    value: function applyStyleToElement(style, value) {\n      var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nativeElement;\n      this.styler.applyStyleToElement(element, style, value);\n    }\n    /**\n     * @protected\n     * @param {?} val\n     * @param {?} bp\n     * @return {?}\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(val, bp) {\n      this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    /**\n     * @protected\n     * @param {?} input\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateWithValue\",\n    value: function updateWithValue(input) {\n      if (this.currentValue !== input) {\n        this.addStyles(input);\n        this.currentValue = input;\n      }\n    }\n  }]);\n\n  return BaseDirective2;\n}();\n\nBaseDirective2.ɵfac = function BaseDirective2_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nBaseDirective2.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseDirective2,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n * @type {?}\n */\n\nvar DEFAULT_BREAKPOINTS = [{\n  alias: 'xs',\n  mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n  priority: 1000\n}, {\n  alias: 'sm',\n  mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n  priority: 900\n}, {\n  alias: 'md',\n  mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n  priority: 800\n}, {\n  alias: 'lg',\n  mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n  priority: 700\n}, {\n  alias: 'xl',\n  mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n  priority: 600\n}, {\n  alias: 'lt-sm',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 599.98px)',\n  priority: 950\n}, {\n  alias: 'lt-md',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 959.98px)',\n  priority: 850\n}, {\n  alias: 'lt-lg',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 1279.98px)',\n  priority: 750\n}, {\n  alias: 'lt-xl',\n  overlapping: true,\n  priority: 650,\n  mediaQuery: 'screen and (max-width: 1919.98px)'\n}, {\n  alias: 'gt-xs',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 600px)',\n  priority: -950\n}, {\n  alias: 'gt-sm',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 960px)',\n  priority: -850\n}, {\n  alias: 'gt-md',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 1280px)',\n  priority: -750\n}, {\n  alias: 'gt-lg',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 1920px)',\n  priority: -650\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/orientation-break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/* tslint:disable */\n\n/** @type {?} */\n\nvar HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\n/** @type {?} */\n\nvar HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\n/** @type {?} */\n\nvar TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\n/** @type {?} */\n\nvar TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\n/** @type {?} */\n\nvar WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\n/** @type {?} */\n\nvar WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\n/** @type {?} */\n\nvar ScreenTypes = {\n  'HANDSET': \"\".concat(HANDSET_PORTRAIT, \", \").concat(HANDSET_LANDSCAPE),\n  'TABLET': \"\".concat(TABLET_PORTRAIT, \" , \").concat(TABLET_LANDSCAPE),\n  'WEB': \"\".concat(WEB_PORTRAIT, \", \").concat(WEB_LANDSCAPE, \" \"),\n  'HANDSET_PORTRAIT': \"\".concat(HANDSET_PORTRAIT),\n  'TABLET_PORTRAIT': \"\".concat(TABLET_PORTRAIT, \" \"),\n  'WEB_PORTRAIT': \"\".concat(WEB_PORTRAIT),\n  'HANDSET_LANDSCAPE': \"\".concat(HANDSET_LANDSCAPE),\n  'TABLET_LANDSCAPE': \"\".concat(TABLET_LANDSCAPE),\n  'WEB_LANDSCAPE': \"\".concat(WEB_LANDSCAPE)\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n * @type {?}\n */\n\nvar ORIENTATION_BREAKPOINTS = [{\n  'alias': 'handset',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET\n}, {\n  'alias': 'handset.landscape',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE\n}, {\n  'alias': 'handset.portrait',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET_PORTRAIT\n}, {\n  'alias': 'tablet',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET\n}, {\n  'alias': 'tablet.landscape',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET_LANDSCAPE\n}, {\n  'alias': 'tablet.portrait',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET_PORTRAIT\n}, {\n  'alias': 'web',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB,\n  overlapping: true\n}, {\n  'alias': 'web.landscape',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB_LANDSCAPE,\n  overlapping: true\n}, {\n  'alias': 'web.portrait',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB_PORTRAIT,\n  overlapping: true\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\n\nfunction extendObject(dest) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    if (source != null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/breakpoint-tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar ALIAS_DELIMITERS = /(\\.|-|_)/g;\n/**\n * @param {?} part\n * @return {?}\n */\n\nfunction firstUpperCase(part) {\n  /** @type {?} */\n  var first = part.length > 0 ? part.charAt(0) : '';\n  /** @type {?} */\n\n  var remainder = part.length > 1 ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param {?} name Text to UpperCamelCase\n * @return {?}\n */\n\n\nfunction camelCase(name) {\n  return name.replace(ALIAS_DELIMITERS, '|').split('|').map(firstUpperCase).join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n * @param {?} list\n * @return {?}\n */\n\n\nfunction validateSuffixes(list) {\n  list.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  function (bp) {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n * @param {?} defaults\n * @param {?=} custom\n * @return {?}\n */\n\n\nfunction mergeByAlias(defaults) {\n  var custom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  /** @type {?} */\n  var dict = {};\n  defaults.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  function (bp) {\n    dict[bp.alias] = bp;\n  }); // Merge custom breakpoints\n\n  custom.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  function (bp) {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n  return validateSuffixes(Object.keys(dict).map(\n  /**\n  * @param {?} k\n  * @return {?}\n  */\n  function (k) {\n    return dict[k];\n  }));\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-points-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n * @type {?}\n */\n\n\nvar BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  function factory() {\n    /** @type {?} */\n    var breakpoints = inject(BREAKPOINT);\n    /** @type {?} */\n\n    var layoutConfig = inject(LAYOUT_CONFIG);\n    /** @type {?} */\n\n    var bpFlattenArray = [].concat.apply([], (breakpoints || []).map(\n    /**\n    * @param {?} v\n    * @return {?}\n    */\n    function (v) {\n      return Array.isArray(v) ? v : [v];\n    }));\n    /** @type {?} */\n\n    var builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS).concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n    return mergeByAlias(builtIns, bpFlattenArray);\n  }\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * HOF to sort the breakpoints by descending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\nfunction sortDescendingPriority(a, b) {\n  /** @type {?} */\n  var priorityA = a ? a.priority || 0 : 0;\n  /** @type {?} */\n\n  var priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n/**\n * HOF to sort the breakpoints by ascending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction sortAscendingPriority(a, b) {\n  /** @type {?} */\n  var pA = a.priority || 0;\n  /** @type {?} */\n\n  var pB = b.priority || 0;\n  return pA - pB;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n\n\nvar BreakPointRegistry = /*#__PURE__*/function () {\n  /**\n   * @param {?} list\n   */\n  function BreakPointRegistry(list) {\n    _classCallCheck(this, BreakPointRegistry);\n\n    /**\n     * Memoized BreakPoint Lookups\n     */\n    this.findByMap = new Map();\n    this.items = _toConsumableArray(list).sort(sortAscendingPriority);\n  }\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   * @param {?} alias\n   * @return {?}\n   */\n\n\n  _createClass(BreakPointRegistry, [{\n    key: \"findByAlias\",\n    value: function findByAlias(alias) {\n      return !alias ? null : this.findWithPredicate(alias,\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      function (bp) {\n        return bp.alias == alias;\n      });\n    }\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"findByQuery\",\n    value: function findByQuery(query) {\n      return this.findWithPredicate(query,\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      function (bp) {\n        return bp.mediaQuery == query;\n      });\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     * @return {?}\n     */\n\n  }, {\n    key: \"overlappings\",\n    get: function get() {\n      return this.items.filter(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      function (it) {\n        return it.overlapping == true;\n      });\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     * @return {?}\n     */\n\n  }, {\n    key: \"aliases\",\n    get: function get() {\n      return this.items.map(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      function (it) {\n        return it.alias;\n      });\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     * @return {?}\n     */\n\n  }, {\n    key: \"suffixes\",\n    get: function get() {\n      return this.items.map(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      function (it) {\n        return !!it.suffix ? it.suffix : '';\n      });\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     * @private\n     * @param {?} key\n     * @param {?} searchFn\n     * @return {?}\n     */\n\n  }, {\n    key: \"findWithPredicate\",\n    value: function findWithPredicate(key, searchFn) {\n      /** @type {?} */\n      var response = this.findByMap.get(key);\n\n      if (!response) {\n        response = this.items.find(searchFn) || null;\n        this.findByMap.set(key, response);\n      }\n\n      return response || null;\n    }\n  }]);\n\n  return BreakPointRegistry;\n}();\n\nBreakPointRegistry.ɵfac = function BreakPointRegistry_Factory(t) {\n  return new (t || BreakPointRegistry)(ɵngcc0.ɵɵinject(BREAKPOINTS));\n};\n/** @nocollapse */\n\n\nBreakPointRegistry.ɵprov = ɵɵdefineInjectable({\n  factory: function BreakPointRegistry_Factory() {\n    return new BreakPointRegistry(ɵɵinject(BREAKPOINTS));\n  },\n  token: BreakPointRegistry,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nBreakPointRegistry.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [BREAKPOINTS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakPointRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [BREAKPOINTS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n\n\nvar MatchMedia = /*#__PURE__*/function () {\n  /**\n   * @param {?} _zone\n   * @param {?} _platformId\n   * @param {?} _document\n   */\n  function MatchMedia(_zone, _platformId, _document) {\n    _classCallCheck(this, MatchMedia);\n\n    this._zone = _zone;\n    this._platformId = _platformId;\n    this._document = _document;\n    /**\n     * Initialize source with 'all' so all non-responsive APIs trigger style updates\n     */\n\n    this.source = new BehaviorSubject(new MediaChange(true));\n    this.registry = new Map();\n    this.pendingRemoveListenerFns = [];\n    this._observable$ = this.source.asObservable();\n  }\n  /**\n   * Publish list of all current activations\n   * @return {?}\n   */\n\n\n  _createClass(MatchMedia, [{\n    key: \"activations\",\n    get: function get() {\n      /** @type {?} */\n      var results = [];\n      this.registry.forEach(\n      /**\n      * @param {?} mql\n      * @param {?} key\n      * @return {?}\n      */\n      function (mql, key) {\n        if (mql.matches) {\n          results.push(key);\n        }\n      });\n      return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive(mediaQuery) {\n      /** @type {?} */\n      var mql = this.registry.get(mediaQuery);\n      return !!mql ? mql.matches : this.registerQuery(mediaQuery).some(\n      /**\n      * @param {?} m\n      * @return {?}\n      */\n      function (m) {\n        return m.matches;\n      });\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     * @param {?=} mqList\n     * @param {?=} filterOthers\n     * @return {?}\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(mqList) {\n      var _this3 = this;\n\n      var filterOthers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (mqList && mqList.length) {\n        /** @type {?} */\n        var matchMedia$ = this._observable$.pipe(filter(\n        /**\n        * @param {?} change\n        * @return {?}\n        */\n        function (change) {\n          return !filterOthers ? true : mqList.indexOf(change.mediaQuery) > -1;\n        }));\n        /** @type {?} */\n\n\n        var registration$ = new Observable(\n        /**\n        * @param {?} observer\n        * @return {?}\n        */\n        function (observer) {\n          // tslint:disable-line:max-line-length\n\n          /** @type {?} */\n          var matches = _this3.registerQuery(mqList);\n\n          if (matches.length) {\n            /** @type {?} */\n            var lastChange =\n            /** @type {?} */\n            matches.pop();\n            matches.forEach(\n            /**\n            * @param {?} e\n            * @return {?}\n            */\n            function (e) {\n              observer.next(e);\n            });\n\n            _this3.source.next(lastChange); // last match is cached\n\n          }\n\n          observer.complete();\n        });\n        return merge(registration$, matchMedia$);\n      }\n\n      return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerQuery\",\n    value: function registerQuery(mediaQuery) {\n      var _this4 = this;\n\n      /** @type {?} */\n      var list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n      /** @type {?} */\n\n      var matches = [];\n      buildQueryCss(list, this._document);\n      list.forEach(\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      function (query) {\n        /** @type {?} */\n        var onMQLEvent =\n        /**\n        * @param {?} e\n        * @return {?}\n        */\n        function onMQLEvent(e) {\n          _this4._zone.run(\n          /**\n          * @return {?}\n          */\n          function () {\n            return _this4.source.next(new MediaChange(e.matches, query));\n          });\n        };\n        /** @type {?} */\n\n\n        var mql = _this4.registry.get(query);\n\n        if (!mql) {\n          mql = _this4.buildMQL(query);\n          mql.addListener(onMQLEvent);\n\n          _this4.pendingRemoveListenerFns.push(\n          /**\n          * @return {?}\n          */\n          function () {\n            return (\n              /** @type {?} */\n              mql.removeListener(onMQLEvent)\n            );\n          });\n\n          _this4.registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          matches.push(new MediaChange(true, query));\n        }\n      });\n      return matches;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      /** @type {?} */\n      var fn;\n\n      while (fn = this.pendingRemoveListenerFns.pop()) {\n        fn();\n      }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"buildMQL\",\n    value: function buildMQL(query) {\n      return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n  }]);\n\n  return MatchMedia;\n}();\n\nMatchMedia.ɵfac = function MatchMedia_Factory(t) {\n  return new (t || MatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nMatchMedia.ɵprov = ɵɵdefineInjectable({\n  factory: function MatchMedia_Factory() {\n    return new MatchMedia(ɵɵinject(NgZone), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT));\n  },\n  token: MatchMedia,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMatchMedia.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatchMedia, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n * @type {?}\n */\n\n\nvar ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param {?} mediaQueries\n * @param {?} _document\n * @return {?}\n */\n\nfunction buildQueryCss(mediaQueries, _document) {\n  /** @type {?} */\n  var list = mediaQueries.filter(\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  function (it) {\n    return !ALL_STYLES[it];\n  });\n\n  if (list.length > 0) {\n    /** @type {?} */\n    var query = list.join(', ');\n\n    try {\n      /** @type {?} */\n      var styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n\n      if (!\n      /** @type {?} */\n      styleEl.styleSheet) {\n        /** @type {?} */\n        var cssText = \"\\n/*\\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\\n  see http://bit.ly/2sd4HMP\\n*/\\n@media \".concat(query, \" {.fx-query-test{ }}\\n\");\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      /** @type {?} */\n      _document.head.appendChild(styleEl); // Store in private global registry\n\n\n      list.forEach(\n      /**\n      * @param {?} mq\n      * @return {?}\n      */\n      function (mq) {\n        return ALL_STYLES[mq] = styleEl;\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n/**\n * @param {?} query\n * @param {?} isBrowser\n * @return {?}\n */\n\n\nfunction constructMql(query, isBrowser) {\n  /** @type {?} */\n  var canListen = isBrowser && !!\n  /** @type {?} */\n  window.matchMedia('all').addListener;\n  return canListen ?\n  /** @type {?} */\n  window.matchMedia(query) :\n  /** @type {?} */\n  {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener:\n    /**\n    * @return {?}\n    */\n    function addListener() {},\n    removeListener:\n    /**\n    * @return {?}\n    */\n    function removeListener() {},\n    onchange: null,\n\n    /**\n     * @return {?}\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * @return {?}\n     */\n    removeEventListener: function removeEventListener() {},\n\n    /**\n     * @return {?}\n     */\n    dispatchEvent: function dispatchEvent() {\n      return false;\n    }\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/mock/mock-match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n\n\nvar MockMatchMedia = /*#__PURE__*/function (_MatchMedia) {\n  _inherits(MockMatchMedia, _MatchMedia);\n\n  var _super = _createSuper(MockMatchMedia);\n\n  // Allow fallback to overlapping mediaQueries\n\n  /**\n   * @param {?} _zone\n   * @param {?} _platformId\n   * @param {?} _document\n   * @param {?} _breakpoints\n   */\n  function MockMatchMedia(_zone, _platformId, _document, _breakpoints) {\n    var _this5;\n\n    _classCallCheck(this, MockMatchMedia);\n\n    _this5 = _super.call(this, _zone, _platformId, _document);\n    _this5._breakpoints = _breakpoints;\n    _this5.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n    // Used for testing BreakPoint registrations\n\n    _this5.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n\n    return _this5;\n  }\n  /**\n   * Easy method to clear all listeners for all mediaQueries\n   * @return {?}\n   */\n\n\n  _createClass(MockMatchMedia, [{\n    key: \"clearAll\",\n    value: function clearAll() {\n      this.registry.forEach(\n      /**\n      * @param {?} mql\n      * @return {?}\n      */\n      function (mql) {\n        /** @type {?} */\n        mql.destroy();\n      });\n      this.registry.clear();\n      this.useOverlaps = false;\n    }\n    /**\n     * Feature to support manual, simulated activation of a mediaQuery.\n     * @param {?} mediaQuery\n     * @param {?=} useOverlaps\n     * @return {?}\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(mediaQuery) {\n      var useOverlaps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      useOverlaps = useOverlaps || this.useOverlaps;\n      mediaQuery = this._validateQuery(mediaQuery);\n\n      if (useOverlaps || !this.isActive(mediaQuery)) {\n        this._deactivateAll();\n\n        this._registerMediaQuery(mediaQuery);\n\n        this._activateWithOverlaps(mediaQuery, useOverlaps);\n      }\n\n      return this.hasActivated;\n    }\n    /**\n     * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n     * @param {?} queryOrAlias\n     * @return {?}\n     */\n\n  }, {\n    key: \"_validateQuery\",\n    value: function _validateQuery(queryOrAlias) {\n      /** @type {?} */\n      var bp = this._breakpoints.findByAlias(queryOrAlias);\n\n      return bp && bp.mediaQuery || queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     * @private\n     * @param {?} mediaQuery\n     * @param {?} useOverlaps\n     * @return {?}\n     */\n\n  }, {\n    key: \"_activateWithOverlaps\",\n    value: function _activateWithOverlaps(mediaQuery, useOverlaps) {\n      if (useOverlaps) {\n        /** @type {?} */\n        var bp = this._breakpoints.findByQuery(mediaQuery);\n        /** @type {?} */\n\n\n        var alias = bp ? bp.alias : 'unknown'; // Simulate activation of overlapping lt-<XXX> ranges\n\n        switch (alias) {\n          case 'lg':\n            this._activateByAlias(['lt-xl']);\n\n            break;\n\n          case 'md':\n            this._activateByAlias(['lt-xl', 'lt-lg']);\n\n            break;\n\n          case 'sm':\n            this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n\n            break;\n\n          case 'xs':\n            this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n\n            break;\n        } // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n\n\n        switch (alias) {\n          case 'xl':\n            this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n\n            break;\n\n          case 'lg':\n            this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n\n            break;\n\n          case 'md':\n            this._activateByAlias(['gt-sm', 'gt-xs']);\n\n            break;\n\n          case 'sm':\n            this._activateByAlias(['gt-xs']);\n\n            break;\n        }\n      } // Activate last since the responsiveActivation is watching *this* mediaQuery\n\n\n      return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     * @private\n     * @param {?} aliases\n     * @return {?}\n     */\n\n  }, {\n    key: \"_activateByAlias\",\n    value: function _activateByAlias(aliases) {\n      var _this6 = this;\n\n      /** @type {?} */\n      var activate =\n      /**\n      * @param {?} alias\n      * @return {?}\n      */\n      function activate(alias) {\n        /** @type {?} */\n        var bp = _this6._breakpoints.findByAlias(alias);\n\n        _this6._activateByQuery(bp ? bp.mediaQuery : alias);\n      };\n\n      aliases.forEach(activate);\n    }\n    /**\n     *\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n\n  }, {\n    key: \"_activateByQuery\",\n    value: function _activateByQuery(mediaQuery) {\n      if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n        this._registerMediaQuery(mediaQuery);\n      }\n      /** @type {?} */\n\n\n      var mql =\n      /** @type {?} */\n      this.registry.get(mediaQuery);\n\n      if (mql && !this.isActive(mediaQuery)) {\n        this.registry.set(mediaQuery, mql.activate());\n      }\n\n      return this.hasActivated;\n    }\n    /**\n     * Deactivate all current MQLs and reset the buffer\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @return {THIS}\n     */\n\n  }, {\n    key: \"_deactivateAll\",\n    value: function _deactivateAll() {\n      /** @type {?} */\n      this.registry.forEach(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      function (it) {\n        /** @type {?} */\n        it.deactivate();\n      });\n      return (\n        /** @type {?} */\n        this\n      );\n    }\n    /**\n     * Insure the mediaQuery is registered with MatchMedia\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n\n  }, {\n    key: \"_registerMediaQuery\",\n    value: function _registerMediaQuery(mediaQuery) {\n      if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n        this.registerQuery(mediaQuery);\n      }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"buildMQL\",\n    value: function buildMQL(query) {\n      return new MockMediaQueryList(query);\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasActivated\",\n    get: function get() {\n      return this.activations.length > 0;\n    }\n  }]);\n\n  return MockMatchMedia;\n}(MatchMedia);\n\nMockMatchMedia.ɵfac = function MockMatchMedia_Factory(t) {\n  return new (t || MockMatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(BreakPointRegistry));\n};\n\nMockMatchMedia.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MockMatchMedia,\n  factory: MockMatchMedia.ɵfac\n});\n/** @nocollapse */\n\nMockMatchMedia.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: BreakPointRegistry\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MockMatchMedia, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: BreakPointRegistry\n    }];\n  }, null);\n})();\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\n\n\nvar MockMediaQueryList = /*#__PURE__*/function () {\n  /**\n   * @param {?} _mediaQuery\n   */\n  function MockMediaQueryList(_mediaQuery) {\n    _classCallCheck(this, MockMediaQueryList);\n\n    this._mediaQuery = _mediaQuery;\n    this._isActive = false;\n    this._listeners = [];\n    this.onchange = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MockMediaQueryList, [{\n    key: \"matches\",\n    get: function get() {\n      return this._isActive;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"media\",\n    get: function get() {\n      return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.deactivate();\n      this._listeners = [];\n    }\n    /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _this7 = this;\n\n      if (!this._isActive) {\n        this._isActive = true;\n\n        this._listeners.forEach(\n        /**\n        * @param {?} callback\n        * @return {?}\n        */\n        function (callback) {\n          /** @type {?} */\n          var cb =\n          /** @type {?} */\n          callback;\n          cb.call(_this7,\n          /** @type {?} */\n          {\n            matches: _this7.matches,\n            media: _this7.media\n          });\n        });\n      }\n\n      return this;\n    }\n    /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this8 = this;\n\n      if (this._isActive) {\n        this._isActive = false;\n\n        this._listeners.forEach(\n        /**\n        * @param {?} callback\n        * @return {?}\n        */\n        function (callback) {\n          /** @type {?} */\n          var cb =\n          /** @type {?} */\n          callback;\n          cb.call(_this8,\n          /** @type {?} */\n          {\n            matches: _this8.matches,\n            media: _this8.media\n          });\n        });\n      }\n\n      return this;\n    }\n    /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      if (this._listeners.indexOf(listener) === -1) {\n        this._listeners.push(listener);\n      }\n\n      if (this._isActive) {\n        /** @type {?} */\n        var cb =\n        /** @type {?} */\n        listener;\n        cb.call(this,\n        /** @type {?} */\n        {\n          matches: this.matches,\n          media: this.media\n        });\n      }\n    }\n    /**\n     * Don't need to remove listeners in the testing environment\n     * @param {?} _\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(_) {}\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(_, __, ___) {}\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(_, __, ___) {}\n    /**\n     * @param {?} _\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(_) {\n      return false;\n    }\n  }]);\n\n  return MockMediaQueryList;\n}();\n/**\n * Pre-configured provider for MockMatchMedia\n * @type {?}\n */\n\n\nvar MockMatchMediaProvider = {\n  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/print-hook.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar PRINT = 'print';\n/** @type {?} */\n\nvar BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n\nvar PrintHook = /*#__PURE__*/function () {\n  /**\n   * @param {?} breakpoints\n   * @param {?} layoutConfig\n   * @param {?} _document\n   */\n  function PrintHook(breakpoints, layoutConfig, _document) {\n    _classCallCheck(this, PrintHook);\n\n    this.breakpoints = breakpoints;\n    this.layoutConfig = layoutConfig;\n    this._document = _document; // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n    //  and `afterprint` event listeners.\n\n    this.registeredBeforeAfterPrintHooks = false; // isPrintingBeforeAfterEvent is used to track if we are printing from within\n    // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n    // form `interceptEvents` so that printing is not stopped while the dialog\n    // is still open. This is an extension of the `isPrinting` property on\n    // browsers which support `beforeprint` and `afterprint` events.\n\n    this.isPrintingBeforeAfterEvent = false;\n    this.beforePrintEventListeners = [];\n    this.afterPrintEventListeners = [];\n    /**\n     * Is this service currently in Print-mode ?\n     */\n\n    this.isPrinting = false;\n    this.queue = new PrintQueue();\n    this.deactivations = [];\n  }\n  /**\n   * Add 'print' mediaQuery: to listen for matchMedia activations\n   * @param {?} queries\n   * @return {?}\n   */\n\n\n  _createClass(PrintHook, [{\n    key: \"withPrintQuery\",\n    value: function withPrintQuery(queries) {\n      return [].concat(_toConsumableArray(queries), [PRINT]);\n    }\n    /**\n     * Is the MediaChange event for any 'print' \\@media\n     * @param {?} e\n     * @return {?}\n     */\n\n  }, {\n    key: \"isPrintEvent\",\n    value: function isPrintEvent(e) {\n      return e.mediaQuery.startsWith(PRINT);\n    }\n    /**\n     * What is the desired mqAlias to use while printing?\n     * @return {?}\n     */\n\n  }, {\n    key: \"printAlias\",\n    get: function get() {\n      return this.layoutConfig.printWithBreakpoints || [];\n    }\n    /**\n     * Lookup breakpoints associated with print aliases.\n     * @return {?}\n     */\n\n  }, {\n    key: \"printBreakPoints\",\n    get: function get() {\n      var _this9 = this;\n\n      return (\n        /** @type {?} */\n        this.printAlias.map(\n        /**\n        * @param {?} alias\n        * @return {?}\n        */\n        function (alias) {\n          return _this9.breakpoints.findByAlias(alias);\n        }).filter(\n        /**\n        * @param {?} bp\n        * @return {?}\n        */\n        function (bp) {\n          return bp !== null;\n        })\n      );\n    }\n    /**\n     * Lookup breakpoint associated with mediaQuery\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"getEventBreakpoints\",\n    value: function getEventBreakpoints(_ref) {\n      var mediaQuery = _ref.mediaQuery;\n\n      /** @type {?} */\n      var bp = this.breakpoints.findByQuery(mediaQuery);\n      /** @type {?} */\n\n      var list = bp ? [].concat(_toConsumableArray(this.printBreakPoints), [bp]) : this.printBreakPoints;\n      return list.sort(sortDescendingPriority);\n    }\n    /**\n     * Update event with printAlias mediaQuery information\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateEvent\",\n    value: function updateEvent(event) {\n      /** @type {?} */\n      var bp = this.breakpoints.findByQuery(event.mediaQuery);\n\n      if (this.isPrintEvent(event)) {\n        // Reset from 'print' to first (highest priority) print breakpoint\n        bp = this.getEventBreakpoints(event)[0];\n        event.mediaQuery = bp ? bp.mediaQuery : '';\n      }\n\n      return mergeAlias(event, bp);\n    } // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n\n    /**\n     * @private\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerBeforeAfterPrintHooks\",\n    value: function registerBeforeAfterPrintHooks(target) {\n      var _this10 = this;\n\n      // `defaultView` may be null when rendering on the server or in other contexts.\n      if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n        return;\n      }\n\n      this.registeredBeforeAfterPrintHooks = true;\n      /** @type {?} */\n\n      var beforePrintListener =\n      /**\n      * @return {?}\n      */\n      function beforePrintListener() {\n        // If we aren't already printing, start printing and update the styles as\n        // if there was a regular print `MediaChange`(from matchMedia).\n        if (!_this10.isPrinting) {\n          _this10.isPrintingBeforeAfterEvent = true;\n\n          _this10.startPrinting(target, _this10.getEventBreakpoints(new MediaChange(true, PRINT)));\n\n          target.updateStyles();\n        }\n      };\n      /** @type {?} */\n\n\n      var afterPrintListener =\n      /**\n      * @return {?}\n      */\n      function afterPrintListener() {\n        // If we aren't already printing, start printing and update the styles as\n        // if there was a regular print `MediaChange`(from matchMedia).\n        _this10.isPrintingBeforeAfterEvent = false;\n\n        if (_this10.isPrinting) {\n          _this10.stopPrinting(target);\n\n          target.updateStyles();\n        }\n      }; // Could we have teardown logic to remove if there are no print listeners being used?\n\n\n      this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n\n      this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n\n      this.beforePrintEventListeners.push(beforePrintListener);\n      this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS filter operator with partial application\n     * @param {?} target\n     * @return {?} pipeable filter predicate\n     */\n\n  }, {\n    key: \"interceptEvents\",\n    value: function interceptEvents(target) {\n      var _this11 = this;\n\n      this.registerBeforeAfterPrintHooks(target);\n      return (\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        function (event) {\n          if (_this11.isPrintEvent(event)) {\n            if (event.matches && !_this11.isPrinting) {\n              _this11.startPrinting(target, _this11.getEventBreakpoints(event));\n\n              target.updateStyles();\n            } else if (!event.matches && _this11.isPrinting && !_this11.isPrintingBeforeAfterEvent) {\n              _this11.stopPrinting(target);\n\n              target.updateStyles();\n            }\n          } else {\n            _this11.collectActivations(event);\n          }\n        }\n      );\n    }\n    /**\n     * Stop mediaChange event propagation in event streams\n     * @return {?}\n     */\n\n  }, {\n    key: \"blockPropagation\",\n    value: function blockPropagation() {\n      var _this12 = this;\n\n      return (\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        function (event) {\n          return !(_this12.isPrinting || _this12.isPrintEvent(event));\n        }\n      );\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     * @protected\n     * @param {?} target\n     * @param {?} bpList\n     * @return {?}\n     */\n\n  }, {\n    key: \"startPrinting\",\n    value: function startPrinting(target, bpList) {\n      this.isPrinting = true;\n      target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /**\n     * For any print de-activations, reset the entire print queue\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"stopPrinting\",\n    value: function stopPrinting(target) {\n      target.activatedBreakpoints = this.deactivations;\n      this.deactivations = [];\n      this.queue.clear();\n      this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"collectActivations\",\n    value: function collectActivations(event) {\n      if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n        if (!event.matches) {\n          /** @type {?} */\n          var bp = this.breakpoints.findByQuery(event.mediaQuery);\n\n          if (bp) {\n            // Deactivating a breakpoint\n            this.deactivations.push(bp);\n            this.deactivations.sort(sortDescendingPriority);\n          }\n        } else if (!this.isPrintingBeforeAfterEvent) {\n          // Only clear deactivations if we aren't printing from a `beforeprint` event.\n          // Otherwise this will clear before `stopPrinting()` is called to restore\n          // the pre-Print Activations.\n          this.deactivations = [];\n        }\n      }\n    }\n    /**\n     * Teardown logic for the service.\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _this13 = this;\n\n      if (this._document.defaultView) {\n        this.beforePrintEventListeners.forEach(\n        /**\n        * @param {?} l\n        * @return {?}\n        */\n        function (l) {\n          return _this13._document.defaultView.removeEventListener('beforeprint', l);\n        });\n        this.afterPrintEventListeners.forEach(\n        /**\n        * @param {?} l\n        * @return {?}\n        */\n        function (l) {\n          return _this13._document.defaultView.removeEventListener('afterprint', l);\n        });\n      }\n    }\n  }]);\n\n  return PrintHook;\n}();\n\nPrintHook.ɵfac = function PrintHook_Factory(t) {\n  return new (t || PrintHook)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nPrintHook.ɵprov = ɵɵdefineInjectable({\n  factory: function PrintHook_Factory() {\n    return new PrintHook(ɵɵinject(BreakPointRegistry), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(DOCUMENT));\n  },\n  token: PrintHook,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nPrintHook.ctorParameters = function () {\n  return [{\n    type: BreakPointRegistry\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LAYOUT_CONFIG]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrintHook, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})(); // ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\n\n\nvar PrintQueue = /*#__PURE__*/function () {\n  function PrintQueue() {\n    _classCallCheck(this, PrintQueue);\n\n    /**\n     * Sorted queue with prioritized print breakpoints\n     */\n    this.printBreakpoints = [];\n  }\n  /**\n   * @param {?} bpList\n   * @return {?}\n   */\n\n\n  _createClass(PrintQueue, [{\n    key: \"addPrintBreakpoints\",\n    value: function addPrintBreakpoints(bpList) {\n      var _this14 = this;\n\n      bpList.push(BREAKPOINT_PRINT);\n      bpList.sort(sortDescendingPriority);\n      bpList.forEach(\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      function (bp) {\n        return _this14.addBreakpoint(bp);\n      });\n      return this.printBreakpoints;\n    }\n    /**\n     * Add Print breakpoint to queue\n     * @param {?} bp\n     * @return {?}\n     */\n\n  }, {\n    key: \"addBreakpoint\",\n    value: function addBreakpoint(bp) {\n      if (!!bp) {\n        /** @type {?} */\n        var bpInList = this.printBreakpoints.find(\n        /**\n        * @param {?} it\n        * @return {?}\n        */\n        function (it) {\n          return it.mediaQuery === bp.mediaQuery;\n        });\n\n        if (bpInList === undefined) {\n          // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n          // register as highest priority in the queue\n          this.printBreakpoints = isPrintBreakPoint(bp) ? [bp].concat(_toConsumableArray(this.printBreakpoints)) : [].concat(_toConsumableArray(this.printBreakpoints), [bp]);\n        }\n      }\n    }\n    /**\n     * Restore original activated breakpoints and clear internal caches\n     * @return {?}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.printBreakpoints = [];\n    }\n  }]);\n\n  return PrintQueue;\n}(); // ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/**\n * Only support intercept queueing if the Breakpoint is a print \\@media query\n * @param {?} bp\n * @return {?}\n */\n\n\nfunction isPrintBreakPoint(bp) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/array.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\n\n\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/media-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n * \\@usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '\\@angular/flex-layout';\n *\n * \\@Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n\n\nvar MediaObserver = /*#__PURE__*/function () {\n  /**\n   * @param {?} breakpoints\n   * @param {?} matchMedia\n   * @param {?} hook\n   */\n  function MediaObserver(breakpoints, matchMedia, hook) {\n    _classCallCheck(this, MediaObserver);\n\n    this.breakpoints = breakpoints;\n    this.matchMedia = matchMedia;\n    this.hook = hook;\n    /**\n     * Filter MediaChange notifications for overlapping breakpoints\n     */\n\n    this.filterOverlaps = false;\n    this.destroyed$ = new Subject();\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(filter(\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    function (changes) {\n      return changes.length > 0;\n    }), map(\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    function (changes) {\n      return changes[0];\n    }));\n  }\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   * @return {?}\n   */\n\n\n  _createClass(MediaObserver, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyed$.next();\n      this.destroyed$.complete();\n    } // ************************************************\n    // Public Methods\n    // ************************************************\n\n    /**\n     * Observe changes to current activation 'list'\n     * @return {?}\n     */\n\n  }, {\n    key: \"asObservable\",\n    value: function asObservable() {\n      return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param {?} value One or more media queries (or aliases) to check.\n     * @return {?} Whether any of the media queries match.\n     */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive(value) {\n      var _this15 = this;\n\n      /** @type {?} */\n      var aliases = splitQueries(coerceArray(value));\n      return aliases.some(\n      /**\n      * @param {?} alias\n      * @return {?}\n      */\n      function (alias) {\n        /** @type {?} */\n        var query = toMediaQuery(alias, _this15.breakpoints);\n        return query !== null && _this15.matchMedia.isActive(query);\n      });\n    } // ************************************************\n    // Internal Methods\n    // ************************************************\n\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"watchActivations\",\n    value: function watchActivations() {\n      /** @type {?} */\n      var queries = this.breakpoints.items.map(\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      function (bp) {\n        return bp.mediaQuery;\n      });\n      return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     * @private\n     * @param {?} mqList\n     * @return {?}\n     */\n\n  }, {\n    key: \"buildObservable\",\n    value: function buildObservable(mqList) {\n      var _this16 = this;\n\n      /** @type {?} */\n      var hasChanges =\n      /**\n      * @param {?} changes\n      * @return {?}\n      */\n      function hasChanges(changes) {\n        /** @type {?} */\n        var isValidQuery =\n        /**\n        * @param {?} change\n        * @return {?}\n        */\n        function isValidQuery(change) {\n          return change.mediaQuery.length > 0;\n        };\n\n        return changes.filter(isValidQuery).length > 0;\n      };\n      /** @type {?} */\n\n\n      var excludeOverlaps =\n      /**\n      * @param {?} changes\n      * @return {?}\n      */\n      function excludeOverlaps(changes) {\n        return !_this16.filterOverlaps ? changes : changes.filter(\n        /**\n        * @param {?} change\n        * @return {?}\n        */\n        function (change) {\n          /** @type {?} */\n          var bp = _this16.breakpoints.findByQuery(change.mediaQuery);\n\n          return !bp ? true : !bp.overlapping;\n        });\n      };\n      /**\n       */\n\n\n      return this.matchMedia.observe(this.hook.withPrintQuery(mqList)).pipe(filter(\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      function (change) {\n        return change.matches;\n      }), debounceTime(0, asapScheduler), switchMap(\n      /**\n      * @param {?} _\n      * @return {?}\n      */\n      function (_) {\n        return of(_this16.findAllActivations());\n      }), map(excludeOverlaps), filter(hasChanges), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"findAllActivations\",\n    value: function findAllActivations() {\n      var _this17 = this;\n\n      /** @type {?} */\n      var mergeMQAlias =\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      function mergeMQAlias(change) {\n        /** @type {?} */\n        var bp = _this17.breakpoints.findByQuery(change.mediaQuery);\n\n        return mergeAlias(change, bp);\n      };\n      /** @type {?} */\n\n\n      var replaceWithPrintAlias =\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      function replaceWithPrintAlias(change) {\n        return _this17.hook.isPrintEvent(change) ? _this17.hook.updateEvent(change) : change;\n      };\n\n      return this.matchMedia.activations.map(\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      function (query) {\n        return new MediaChange(true, query);\n      }).map(replaceWithPrintAlias).map(mergeMQAlias).sort(sortDescendingPriority);\n    }\n  }]);\n\n  return MediaObserver;\n}();\n\nMediaObserver.ɵfac = function MediaObserver_Factory(t) {\n  return new (t || MediaObserver)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(PrintHook));\n};\n/** @nocollapse */\n\n\nMediaObserver.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaObserver_Factory() {\n    return new MediaObserver(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(PrintHook));\n  },\n  token: MediaObserver,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaObserver.ctorParameters = function () {\n  return [{\n    type: BreakPointRegistry\n  }, {\n    type: MatchMedia\n  }, {\n    type: PrintHook\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: MatchMedia\n    }, {\n      type: PrintHook\n    }];\n  }, null);\n})();\n/**\n * Find associated breakpoint (if any)\n * @param {?} query\n * @param {?} locator\n * @return {?}\n */\n\n\nfunction toMediaQuery(query, locator) {\n  /** @type {?} */\n  var bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(\n  /**\n  * @param {?} query\n  * @return {?}\n  */\n  function (query) {\n    return query.split(',');\n  }).reduce(\n  /**\n  * @param {?} a1\n  * @param {?} a2\n  * @return {?}\n  */\n  function (a1, a2) {\n    return a1.concat(a2);\n  }).map(\n  /**\n  * @param {?} query\n  * @return {?}\n  */\n  function (query) {\n    return query.trim();\n  });\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/media-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class\n */\n\n\nvar MediaTrigger = /*#__PURE__*/function () {\n  /**\n   * @param {?} breakpoints\n   * @param {?} matchMedia\n   * @param {?} layoutConfig\n   * @param {?} _platformId\n   * @param {?} _document\n   */\n  function MediaTrigger(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n    _classCallCheck(this, MediaTrigger);\n\n    this.breakpoints = breakpoints;\n    this.matchMedia = matchMedia;\n    this.layoutConfig = layoutConfig;\n    this._platformId = _platformId;\n    this._document = _document;\n    this.hasCachedRegistryMatches = false;\n    this.originalActivations = [];\n    this.originalRegistry = new Map();\n  }\n  /**\n   * Manually activate range of breakpoints\n   * @param {?} list array of mediaQuery or alias strings\n   * @return {?}\n   */\n\n\n  _createClass(MediaTrigger, [{\n    key: \"activate\",\n    value: function activate(list) {\n      list = list.map(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      function (it) {\n        return it.trim();\n      }); // trim queries\n\n      this.saveActivations();\n      this.deactivateAll();\n      this.setActivations(list);\n      this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     * @return {?}\n     */\n\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      if (this.hasCachedRegistryMatches) {\n        /** @type {?} */\n        var extractQuery =\n        /**\n        * @param {?} change\n        * @return {?}\n        */\n        function extractQuery(change) {\n          return change.mediaQuery;\n        };\n        /** @type {?} */\n\n\n        var list = this.originalActivations.map(extractQuery);\n\n        try {\n          this.deactivateAll();\n          this.restoreRegistryMatches();\n          this.setActivations(list);\n        } finally {\n          this.originalActivations = [];\n\n          if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n          }\n        }\n      }\n    } // ************************************************\n    // Internal Methods\n    // ************************************************\n\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"prepareAutoRestore\",\n    value: function prepareAutoRestore() {\n      /** @type {?} */\n      var isBrowser = isPlatformBrowser(this._platformId) && this._document;\n      /** @type {?} */\n\n\n      var enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n      if (enableAutoRestore) {\n        /** @type {?} */\n        var resize$ = fromEvent(window, 'resize').pipe(take(1));\n        this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n      }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"deactivateAll\",\n    value: function deactivateAll() {\n      /** @type {?} */\n      var list = this.currentActivations;\n      this.forceRegistryMatches(list, false);\n      this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"saveActivations\",\n    value: function saveActivations() {\n      var _this18 = this;\n\n      if (!this.hasCachedRegistryMatches) {\n        /** @type {?} */\n        var toMediaChange =\n        /**\n        * @param {?} query\n        * @return {?}\n        */\n        function toMediaChange(query) {\n          return new MediaChange(true, query);\n        };\n        /** @type {?} */\n\n\n        var mergeMQAlias =\n        /**\n        * @param {?} change\n        * @return {?}\n        */\n        function mergeMQAlias(change) {\n          /** @type {?} */\n          var bp = _this18.breakpoints.findByQuery(change.mediaQuery);\n\n          return mergeAlias(change, bp);\n        };\n\n        this.originalActivations = this.currentActivations.map(toMediaChange).map(mergeMQAlias).sort(sortDescendingPriority);\n        this.cacheRegistryMatches();\n      }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     * @private\n     * @param {?} list\n     * @return {?}\n     */\n\n  }, {\n    key: \"setActivations\",\n    value: function setActivations(list) {\n      if (!!this.originalRegistry) {\n        this.forceRegistryMatches(list, true);\n      }\n\n      this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     * @private\n     * @param {?} queries\n     * @param {?=} matches\n     * @return {?}\n     */\n\n  }, {\n    key: \"simulateMediaChanges\",\n    value: function simulateMediaChanges(queries) {\n      var _this19 = this;\n\n      var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      /** @type {?} */\n      var toMediaQuery =\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      function toMediaQuery(query) {\n        /** @type {?} */\n        var locator = _this19.breakpoints;\n        /** @type {?} */\n\n        var bp = locator.findByAlias(query) || locator.findByQuery(query);\n        return bp ? bp.mediaQuery : query;\n      };\n      /** @type {?} */\n\n\n      var emitChangeEvent =\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      function emitChangeEvent(query) {\n        return _this19.emitChangeEvent(matches, query);\n      };\n\n      queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     * @private\n     * @param {?} queries\n     * @param {?} matches\n     * @return {?}\n     */\n\n  }, {\n    key: \"forceRegistryMatches\",\n    value: function forceRegistryMatches(queries, matches) {\n      /** @type {?} */\n      var registry = new Map();\n      queries.forEach(\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      function (query) {\n        registry.set(query,\n        /** @type {?} */\n        {\n          matches: matches\n        });\n      });\n      this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"cacheRegistryMatches\",\n    value: function cacheRegistryMatches() {\n      /** @type {?} */\n      var target = this.originalRegistry;\n      target.clear();\n      this.matchMedia.registry.forEach(\n      /**\n      * @param {?} value\n      * @param {?} key\n      * @return {?}\n      */\n      function (value, key) {\n        target.set(key, value);\n      });\n      this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"restoreRegistryMatches\",\n    value: function restoreRegistryMatches() {\n      /** @type {?} */\n      var target = this.matchMedia.registry;\n      target.clear();\n      this.originalRegistry.forEach(\n      /**\n      * @param {?} value\n      * @param {?} key\n      * @return {?}\n      */\n      function (value, key) {\n        target.set(key, value);\n      });\n      this.originalRegistry.clear();\n      this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     * @private\n     * @param {?} matches\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"emitChangeEvent\",\n    value: function emitChangeEvent(matches, query) {\n      this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"currentActivations\",\n    get: function get() {\n      return this.matchMedia.activations;\n    }\n  }]);\n\n  return MediaTrigger;\n}();\n\nMediaTrigger.ɵfac = function MediaTrigger_Factory(t) {\n  return new (t || MediaTrigger)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nMediaTrigger.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaTrigger_Factory() {\n    return new MediaTrigger(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT));\n  },\n  token: MediaTrigger,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaTrigger.ctorParameters = function () {\n  return [{\n    type: BreakPointRegistry\n  }, {\n    type: MatchMedia\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LAYOUT_CONFIG]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaTrigger, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: MatchMedia\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/auto-prefixer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\n\n\nfunction applyCssPrefixes(target) {\n  for (var key in target) {\n    /** @type {?} */\n    var value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = ['-webkit-flex', 'flex'];\n        } else if (value === 'inline-flex') {\n          target['display'] = ['-webkit-inline-flex', 'inline-flex'];\n        } else {\n          target['display'] = value;\n        }\n\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n\n  return target;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-utils/style-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar StyleUtils = /*#__PURE__*/function () {\n  /**\n   * @param {?} _serverStylesheet\n   * @param {?} _serverModuleLoaded\n   * @param {?} _platformId\n   * @param {?} layoutConfig\n   */\n  function StyleUtils(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n    _classCallCheck(this, StyleUtils);\n\n    this._serverStylesheet = _serverStylesheet;\n    this._serverModuleLoaded = _serverModuleLoaded;\n    this._platformId = _platformId;\n    this.layoutConfig = layoutConfig;\n  }\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   * @param {?} element\n   * @param {?} style\n   * @param {?=} value\n   * @return {?}\n   */\n\n\n  _createClass(StyleUtils, [{\n    key: \"applyStyleToElement\",\n    value: function applyStyleToElement(element, style) {\n      var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      /** @type {?} */\n      var styles = {};\n\n      if (typeof style === 'string') {\n        styles[style] = value;\n        style = styles;\n      }\n\n      styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n\n      this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     * @param {?} style\n     * @param {?=} elements\n     * @return {?}\n     */\n\n  }, {\n    key: \"applyStyleToElements\",\n    value: function applyStyleToElements(style) {\n      var _this20 = this;\n\n      var elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      /** @type {?} */\n      var styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n      elements.forEach(\n      /**\n      * @param {?} el\n      * @return {?}\n      */\n      function (el) {\n        _this20._applyMultiValueStyleToElement(styles, el);\n      });\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFlowDirection\",\n    value: function getFlowDirection(target) {\n      /** @type {?} */\n      var query = 'flex-direction';\n      /** @type {?} */\n\n      var value = this.lookupStyle(target, query);\n      /** @type {?} */\n\n      var hasInlineValue = this.lookupInlineStyle(target, query) || isPlatformServer(this._platformId) && this._serverModuleLoaded ? value : '';\n      return [value || 'row', hasInlineValue];\n    }\n    /**\n     * @param {?} target\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasWrap\",\n    value: function hasWrap(target) {\n      /** @type {?} */\n      var query = 'flex-wrap';\n      return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n\n  }, {\n    key: \"lookupAttributeValue\",\n    value: function lookupAttributeValue(element, attribute) {\n      return element.getAttribute(attribute) || '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n\n  }, {\n    key: \"lookupInlineStyle\",\n    value: function lookupInlineStyle(element, styleName) {\n      return isPlatformBrowser(this._platformId) ? element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} inlineOnly\n     * @return {?}\n     */\n\n  }, {\n    key: \"lookupStyle\",\n    value: function lookupStyle(element, styleName) {\n      var inlineOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      /** @type {?} */\n      var value = '';\n\n      if (element) {\n        /** @type {?} */\n        var immediateValue = value = this.lookupInlineStyle(element, styleName);\n\n        if (!immediateValue) {\n          if (isPlatformBrowser(this._platformId)) {\n            if (!inlineOnly) {\n              value = getComputedStyle(element).getPropertyValue(styleName);\n            }\n          } else {\n            if (this._serverModuleLoaded) {\n              value = this._serverStylesheet.getStyleForElement(element, styleName);\n            }\n          }\n        }\n      } // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n      //       in which case getComputedStyle() should determine a valid value.\n\n\n      return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     * @private\n     * @param {?} styles\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"_applyMultiValueStyleToElement\",\n    value: function _applyMultiValueStyleToElement(styles, element) {\n      var _this21 = this;\n\n      Object.keys(styles).sort().forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        /** @type {?} */\n        var el = styles[key];\n        /** @type {?} */\n\n        var values = Array.isArray(el) ? el : [el];\n        values.sort();\n\n        var _iterator = _createForOfIteratorHelper(values),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var value = _step.value;\n            value = value ? value + '' : '';\n\n            if (isPlatformBrowser(_this21._platformId) || !_this21._serverModuleLoaded) {\n              isPlatformBrowser(_this21._platformId) ? element.style.setProperty(key, value) : _this21._setServerStyle(element, key, value);\n            } else {\n              _this21._serverStylesheet.addStyleToElement(element, key, value);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setServerStyle\",\n    value: function _setServerStyle(element, styleName, styleValue) {\n      styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      /** @type {?} */\n\n      var styleMap = this._readStyleAttribute(element);\n\n      styleMap[styleName] = styleValue || '';\n\n      this._writeStyleAttribute(element, styleMap);\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getServerStyle\",\n    value: function _getServerStyle(element, styleName) {\n      /** @type {?} */\n      var styleMap = this._readStyleAttribute(element);\n\n      return styleMap[styleName] || '';\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"_readStyleAttribute\",\n    value: function _readStyleAttribute(element) {\n      /** @type {?} */\n      var styleMap = {};\n      /** @type {?} */\n\n      var styleAttribute = element.getAttribute('style');\n\n      if (styleAttribute) {\n        /** @type {?} */\n        var styleList = styleAttribute.split(/;+/g);\n\n        for (var i = 0; i < styleList.length; i++) {\n          /** @type {?} */\n          var style = styleList[i].trim();\n\n          if (style.length > 0) {\n            /** @type {?} */\n            var colonIndex = style.indexOf(':');\n\n            if (colonIndex === -1) {\n              throw new Error(\"Invalid CSS style: \".concat(style));\n            }\n            /** @type {?} */\n\n\n            var name = style.substr(0, colonIndex).trim();\n            styleMap[name] = style.substr(colonIndex + 1).trim();\n          }\n        }\n      }\n\n      return styleMap;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleMap\n     * @return {?}\n     */\n\n  }, {\n    key: \"_writeStyleAttribute\",\n    value: function _writeStyleAttribute(element, styleMap) {\n      /** @type {?} */\n      var styleAttrValue = '';\n\n      for (var key in styleMap) {\n        /** @type {?} */\n        var newValue = styleMap[key];\n\n        if (newValue) {\n          styleAttrValue += key + ':' + styleMap[key] + ';';\n        }\n      }\n\n      element.setAttribute('style', styleAttrValue);\n    }\n  }]);\n\n  return StyleUtils;\n}();\n\nStyleUtils.ɵfac = function StyleUtils_Factory(t) {\n  return new (t || StyleUtils)(ɵngcc0.ɵɵinject(StylesheetMap), ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LAYOUT_CONFIG));\n};\n/** @nocollapse */\n\n\nStyleUtils.ɵprov = ɵɵdefineInjectable({\n  factory: function StyleUtils_Factory() {\n    return new StyleUtils(ɵɵinject(StylesheetMap), ɵɵinject(SERVER_TOKEN), ɵɵinject(PLATFORM_ID), ɵɵinject(LAYOUT_CONFIG));\n  },\n  token: StyleUtils,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nStyleUtils.ctorParameters = function () {\n  return [{\n    type: StylesheetMap\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [SERVER_TOKEN]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LAYOUT_CONFIG]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StyleUtils, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StylesheetMap\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-builder/style-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * A class that encapsulates CSS style generation for common directives\n * @abstract\n */\n\n\nvar StyleBuilder = /*#__PURE__*/function () {\n  function StyleBuilder() {\n    _classCallCheck(this, StyleBuilder);\n\n    /**\n     * Whether to cache the generated output styles\n     */\n    this.shouldCache = true;\n  }\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   * @param {?} _input\n   * @param {?} _styles\n   * @param {?=} _parent\n   * @return {?}\n   */\n\n\n  _createClass(StyleBuilder, [{\n    key: \"sideEffect\",\n    value: function sideEffect(_input, _styles, _parent) {}\n  }]);\n\n  return StyleBuilder;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/basis-validator/basis-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n * @param {?} basis\n * @param {?=} grow\n * @param {?=} shrink\n * @return {?}\n */\n\n\nfunction validateBasis(basis) {\n  var grow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var shrink = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '1';\n\n  /** @type {?} */\n  var parts = [grow, shrink, basis];\n  /** @type {?} */\n\n  var j = basis.indexOf('calc');\n\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    /** @type {?} */\n\n    var matches = basis.substr(0, j).trim().split(' ');\n\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    /** @type {?} */\n    var _matches = basis.split(' ');\n\n    parts = _matches.length === 3 ? _matches : [grow, shrink, basis];\n  }\n\n  return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n * @param {?} calc\n * @return {?}\n */\n\n\nfunction _validateCalcValue(calc) {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/media-marshaller.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n\n\nvar MediaMarshaller = /*#__PURE__*/function () {\n  /**\n   * @param {?} matchMedia\n   * @param {?} breakpoints\n   * @param {?} hook\n   */\n  function MediaMarshaller(matchMedia, breakpoints, hook) {\n    _classCallCheck(this, MediaMarshaller);\n\n    this.matchMedia = matchMedia;\n    this.breakpoints = breakpoints;\n    this.hook = hook;\n    this.activatedBreakpoints = [];\n    this.elementMap = new Map();\n    this.elementKeyMap = new WeakMap();\n    this.watcherMap = new WeakMap(); // special triggers to update elements\n    // special triggers to update elements\n\n    this.updateMap = new WeakMap(); // callback functions to update styles\n    // callback functions to update styles\n\n    this.clearMap = new WeakMap(); // callback functions to clear styles\n    // callback functions to clear styles\n\n    this.subject = new Subject();\n    this.observeActivations();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(MediaMarshaller, [{\n    key: \"activatedAlias\",\n    get: function get() {\n      return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param {?} mc\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMediaChange\",\n    value: function onMediaChange(mc) {\n      /** @type {?} */\n      var bp = this.findByQuery(mc.mediaQuery);\n\n      if (bp) {\n        mc = mergeAlias(mc, bp);\n\n        if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n          this.activatedBreakpoints.push(bp);\n          this.activatedBreakpoints.sort(sortDescendingPriority);\n          this.updateStyles();\n        } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n          // Remove the breakpoint when it's deactivated\n          this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n          this.activatedBreakpoints.sort(sortDescendingPriority);\n          this.updateStyles();\n        }\n      }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     * @return {?}\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(element, key, updateFn, clearFn) {\n      var extraTriggers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n      initBuilderMap(this.updateMap, element, key, updateFn);\n      initBuilderMap(this.clearMap, element, key, clearFn);\n      this.buildElementKeyMap(element, key);\n      this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} bp\n     * @return {?}\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue(element, key, bp) {\n      /** @type {?} */\n      var bpMap = this.elementMap.get(element);\n\n      if (bpMap) {\n        /** @type {?} */\n        var values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n\n        if (values) {\n          return values.get(key);\n        }\n      }\n\n      return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasValue\",\n    value: function hasValue(element, key) {\n      /** @type {?} */\n      var bpMap = this.elementMap.get(element);\n\n      if (bpMap) {\n        /** @type {?} */\n        var values = this.getActivatedValues(bpMap, key);\n\n        if (values) {\n          return values.get(key) !== undefined || false;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param {?} element the element in question\n     * @param {?} key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param {?} val the value for the breakpoint\n     * @param {?} bp the breakpoint suffix (empty string = default)\n     * @return {?}\n     */\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(element, key, val, bp) {\n      /** @type {?} */\n      var bpMap = this.elementMap.get(element);\n\n      if (!bpMap) {\n        bpMap = new Map().set(bp, new Map().set(key, val));\n        this.elementMap.set(element, bpMap);\n      } else {\n        /** @type {?} */\n        var values = (bpMap.get(bp) || new Map()).set(key, val);\n        bpMap.set(bp, values);\n        this.elementMap.set(element, bpMap);\n      }\n      /** @type {?} */\n\n\n      var value = this.getValue(element, key);\n\n      if (value !== undefined) {\n        this.updateElement(element, key, value);\n      }\n    }\n    /**\n     * Track element value changes for a specific key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"trackValue\",\n    value: function trackValue(element, key) {\n      return this.subject.asObservable().pipe(filter(\n      /**\n      * @param {?} v\n      * @return {?}\n      */\n      function (v) {\n        return v.element === element && v.key === key;\n      }));\n    }\n    /**\n     * update all styles for all elements on the current breakpoint\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles() {\n      var _this22 = this;\n\n      this.elementMap.forEach(\n      /**\n      * @param {?} bpMap\n      * @param {?} el\n      * @return {?}\n      */\n      function (bpMap, el) {\n        /** @type {?} */\n        var keyMap = new Set(\n        /** @type {?} */\n        _this22.elementKeyMap.get(el));\n        /** @type {?} */\n\n        var valueMap = _this22.getActivatedValues(bpMap);\n\n        if (valueMap) {\n          valueMap.forEach(\n          /**\n          * @param {?} v\n          * @param {?} k\n          * @return {?}\n          */\n          function (v, k) {\n            _this22.updateElement(el, k, v);\n\n            keyMap.delete(k);\n          });\n        }\n\n        keyMap.forEach(\n        /**\n        * @param {?} k\n        * @return {?}\n        */\n        function (k) {\n          valueMap = _this22.getActivatedValues(bpMap, k);\n\n          if (valueMap) {\n            /** @type {?} */\n            var value = valueMap.get(k);\n\n            _this22.updateElement(el, k, value);\n          } else {\n            _this22.clearElement(el, k);\n          }\n        });\n      });\n    }\n    /**\n     * clear the styles for a given element\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearElement\",\n    value: function clearElement(element, key) {\n      /** @type {?} */\n      var builders = this.clearMap.get(element);\n\n      if (builders) {\n        /** @type {?} */\n        var clearFn =\n        /** @type {?} */\n        builders.get(key);\n\n        if (!!clearFn) {\n          clearFn();\n          this.subject.next({\n            element: element,\n            key: key,\n            value: ''\n          });\n        }\n      }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, key, value) {\n      /** @type {?} */\n      var builders = this.updateMap.get(element);\n\n      if (builders) {\n        /** @type {?} */\n        var updateFn =\n        /** @type {?} */\n        builders.get(key);\n\n        if (!!updateFn) {\n          updateFn(value);\n          this.subject.next({\n            element: element,\n            key: key,\n            value: value\n          });\n        }\n      }\n    }\n    /**\n     * release all references to a given element\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"releaseElement\",\n    value: function releaseElement(element) {\n      /** @type {?} */\n      var watcherMap = this.watcherMap.get(element);\n\n      if (watcherMap) {\n        watcherMap.forEach(\n        /**\n        * @param {?} s\n        * @return {?}\n        */\n        function (s) {\n          return s.unsubscribe();\n        });\n        this.watcherMap.delete(element);\n      }\n      /** @type {?} */\n\n\n      var elementMap = this.elementMap.get(element);\n\n      if (elementMap) {\n        elementMap.forEach(\n        /**\n        * @param {?} _\n        * @param {?} s\n        * @return {?}\n        */\n        function (_, s) {\n          return elementMap.delete(s);\n        });\n        this.elementMap.delete(element);\n      }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param {?} element\n     * @param {?=} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"triggerUpdate\",\n    value: function triggerUpdate(element, key) {\n      var _this23 = this;\n\n      /** @type {?} */\n      var bpMap = this.elementMap.get(element);\n\n      if (bpMap) {\n        /** @type {?} */\n        var valueMap = this.getActivatedValues(bpMap, key);\n\n        if (valueMap) {\n          if (key) {\n            this.updateElement(element, key, valueMap.get(key));\n          } else {\n            valueMap.forEach(\n            /**\n            * @param {?} v\n            * @param {?} k\n            * @return {?}\n            */\n            function (v, k) {\n              return _this23.updateElement(element, k, v);\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Cross-reference for HTMLElement with directive key\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"buildElementKeyMap\",\n    value: function buildElementKeyMap(element, key) {\n      /** @type {?} */\n      var keyMap = this.elementKeyMap.get(element);\n\n      if (!keyMap) {\n        keyMap = new Set();\n        this.elementKeyMap.set(element, keyMap);\n      }\n\n      keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @param {?} triggers\n     * @return {?}\n     */\n\n  }, {\n    key: \"watchExtraTriggers\",\n    value: function watchExtraTriggers(element, key, triggers) {\n      var _this24 = this;\n\n      if (triggers && triggers.length) {\n        /** @type {?} */\n        var watchers = this.watcherMap.get(element);\n\n        if (!watchers) {\n          watchers = new Map();\n          this.watcherMap.set(element, watchers);\n        }\n        /** @type {?} */\n\n\n        var subscription = watchers.get(key);\n\n        if (!subscription) {\n          /** @type {?} */\n          var newSubscription = merge.apply(void 0, _toConsumableArray(triggers)).subscribe(\n          /**\n          * @return {?}\n          */\n          function () {\n            /** @type {?} */\n            var currentValue = _this24.getValue(element, key);\n\n            _this24.updateElement(element, key, currentValue);\n          });\n          watchers.set(key, newSubscription);\n        }\n      }\n    }\n    /**\n     * Breakpoint locator by mediaQuery\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n\n  }, {\n    key: \"findByQuery\",\n    value: function findByQuery(query) {\n      return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @private\n     * @param {?} bpMap\n     * @param {?=} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"getActivatedValues\",\n    value: function getActivatedValues(bpMap, key) {\n      for (var i = 0; i < this.activatedBreakpoints.length; i++) {\n        /** @type {?} */\n        var activatedBp = this.activatedBreakpoints[i];\n        /** @type {?} */\n\n        var valueMap = bpMap.get(activatedBp.alias);\n\n        if (valueMap) {\n          if (key === undefined || valueMap.has(key) && valueMap.get(key) != null) {\n            return valueMap;\n          }\n        }\n      }\n      /** @type {?} */\n\n\n      var lastHope = bpMap.get('');\n      return key === undefined || lastHope && lastHope.has(key) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"observeActivations\",\n    value: function observeActivations() {\n      /** @type {?} */\n      var target =\n      /** @type {?} */\n\n      /** @type {?} */\n      this;\n      /** @type {?} */\n\n      var queries = this.breakpoints.items.map(\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      function (bp) {\n        return bp.mediaQuery;\n      });\n      this.matchMedia.observe(this.hook.withPrintQuery(queries)).pipe(tap(this.hook.interceptEvents(target)), filter(this.hook.blockPropagation())).subscribe(this.onMediaChange.bind(this));\n    }\n  }]);\n\n  return MediaMarshaller;\n}();\n\nMediaMarshaller.ɵfac = function MediaMarshaller_Factory(t) {\n  return new (t || MediaMarshaller)(ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(PrintHook));\n};\n/** @nocollapse */\n\n\nMediaMarshaller.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaMarshaller_Factory() {\n    return new MediaMarshaller(ɵɵinject(MatchMedia), ɵɵinject(BreakPointRegistry), ɵɵinject(PrintHook));\n  },\n  token: MediaMarshaller,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaMarshaller.ctorParameters = function () {\n  return [{\n    type: MatchMedia\n  }, {\n    type: BreakPointRegistry\n  }, {\n    type: PrintHook\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMarshaller, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MatchMedia\n    }, {\n      type: BreakPointRegistry\n    }, {\n      type: PrintHook\n    }];\n  }, null);\n})();\n/**\n * @param {?} map\n * @param {?} element\n * @param {?} key\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction initBuilderMap(map$$1, element, key, input) {\n  if (input !== undefined) {\n    /** @type {?} */\n    var oldMap = map$$1.get(element);\n\n    if (!oldMap) {\n      oldMap = new Map();\n      map$$1.set(element, oldMap);\n    }\n\n    oldMap.set(key, input);\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook };","map":{"version":3,"sources":["C:/Users/user/Desktop/fgs/front/fgs/node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/core.js"],"names":["APP_BOOTSTRAP_LISTENER","PLATFORM_ID","NgModule","Injectable","InjectionToken","Inject","inject","NgZone","ɵɵdefineInjectable","ɵɵinject","DOCUMENT","isPlatformBrowser","isPlatformServer","Subject","BehaviorSubject","Observable","merge","asapScheduler","of","fromEvent","filter","debounceTime","map","switchMap","takeUntil","take","tap","ɵngcc0","removeStyles","_document","platformId","elements","Array","from","querySelectorAll","CLASS_NAME","classRegex","forEach","el","classList","contains","parentNode","removeChild","className","replace","BROWSER_PROVIDER","provide","useFactory","deps","multi","CoreModule","ɵfac","CoreModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","MediaChange","matches","mediaQuery","mqAlias","suffix","priority","property","StylesheetMap","stylesheet","Map","element","style","value","get","set","clear","styleName","styles","StylesheetMap_Factory","ɵprov","factory","token","providedIn","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","LAYOUT_CONFIG","SERVER_TOKEN","BREAKPOINT","mergeAlias","dest","source","clone","alias","INLINE","LAYOUT_VALUES","buildLayoutCSS","validateValue","direction","wrap","isInline","buildCSS","toLowerCase","split","inline","find","x","validateWrapValue","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","nativeElement","parentElement","getValue","setValue","activatedAlias","changes","Object","keys","key","indexOf","bp","slice","join","val","currentValue","next","complete","releaseElement","extraTriggers","init","updateWithValue","bind","clearStyles","input","parent","builder","useCache","shouldCache","genStyles","buildStyles","assign","applyStyleToElement","sideEffect","k","triggerUpdate","target","addIfMissing","getFlowDirection","hasInlineValue","applyStyleToElements","trim","hasWrap","addStyles","BaseDirective2_Factory","ɵɵinvalidFactory","ɵdir","ɵɵdefineDirective","features","ɵɵNgOnChangesFeature","DEFAULT_BREAKPOINTS","overlapping","HANDSET_PORTRAIT","HANDSET_LANDSCAPE","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","ORIENTATION_BREAKPOINTS","HANDSET","TABLET","WEB","extendObject","TypeError","sources","hasOwnProperty","ALIAS_DELIMITERS","firstUpperCase","part","first","length","charAt","remainder","toUpperCase","camelCase","name","validateSuffixes","list","mergeByAlias","defaults","custom","dict","BREAKPOINTS","breakpoints","layoutConfig","bpFlattenArray","concat","apply","v","isArray","builtIns","sortDescendingPriority","a","b","priorityA","priorityB","sortAscendingPriority","pA","pB","BreakPointRegistry","findByMap","items","sort","findWithPredicate","query","it","searchFn","response","BreakPointRegistry_Factory","ctorParameters","decorators","MatchMedia","_zone","_platformId","registry","pendingRemoveListenerFns","_observable$","asObservable","results","mql","push","registerQuery","some","m","mqList","filterOthers","matchMedia$","pipe","change","registration$","observer","lastChange","pop","e","buildQueryCss","onMQLEvent","run","buildMQL","addListener","removeListener","fn","constructMql","MatchMedia_Factory","undefined","ALL_STYLES","mediaQueries","styleEl","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","head","mq","console","error","isBrowser","canListen","window","matchMedia","media","onchange","addEventListener","removeEventListener","dispatchEvent","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","destroy","_validateQuery","isActive","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","findByAlias","findByQuery","_activateByAlias","_activateByQuery","aliases","activate","has","deactivate","MockMediaQueryList","activations","MockMatchMedia_Factory","_mediaQuery","_isActive","_listeners","callback","cb","call","listener","_","__","___","MockMatchMediaProvider","useClass","PRINT","BREAKPOINT_PRINT","PrintHook","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","beforePrintEventListeners","afterPrintEventListeners","isPrinting","queue","PrintQueue","deactivations","queries","startsWith","printAlias","printBreakPoints","event","isPrintEvent","getEventBreakpoints","defaultView","beforePrintListener","startPrinting","updateStyles","afterPrintListener","stopPrinting","registerBeforeAfterPrintHooks","collectActivations","bpList","activatedBreakpoints","addPrintBreakpoints","l","PrintHook_Factory","printBreakpoints","addBreakpoint","bpInList","isPrintBreakPoint","coerceArray","MediaObserver","hook","filterOverlaps","destroyed$","_media$","watchActivations","media$","splitQueries","toMediaQuery","buildObservable","hasChanges","isValidQuery","excludeOverlaps","observe","withPrintQuery","findAllActivations","mergeMQAlias","replaceWithPrintAlias","updateEvent","MediaObserver_Factory","locator","reduce","a1","a2","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","extractQuery","restoreRegistryMatches","resizeSubscription","unsubscribe","enableAutoRestore","resize$","subscribe","restore","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","MediaTrigger_Factory","applyCssPrefixes","isNaN","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","lookupStyle","lookupInlineStyle","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","immediateValue","getComputedStyle","getStyleForElement","values","setProperty","_setServerStyle","addStyleToElement","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","i","colonIndex","Error","substr","styleAttrValue","newValue","StyleUtils_Factory","Boolean","StyleBuilder","_input","_styles","_parent","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","calc","MediaMarshaller","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","observeActivations","mc","splice","updateFn","clearFn","initBuilderMap","buildElementKeyMap","watchExtraTriggers","bpMap","getActivatedValues","updateElement","keyMap","Set","valueMap","delete","clearElement","builders","s","add","triggers","watchers","subscription","newSubscription","activatedBp","lastHope","interceptEvents","blockPropagation","onMediaChange","MediaMarshaller_Factory","map$$1","oldMap","ɵMatchMedia","ɵMockMatchMedia","ɵMockMatchMediaProvider"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, NgZone, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subject, BehaviorSubject, Observable, merge, asapScheduler, of, fromEvent } from 'rxjs';\nimport { filter, debounceTime, map, switchMap, takeUntil, take, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/browser-provider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n * @param {?} _document\n * @param {?} platformId\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction removeStyles(_document, platformId) {\n    return (/**\n     * @return {?}\n     */\n    () => {\n        if (isPlatformBrowser(platformId)) {\n            /** @type {?} */\n            const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            /** @type {?} */\n            const classRegex = /\\bflex-layout-.+?\\b/g;\n            elements.forEach((/**\n             * @param {?} el\n             * @return {?}\n             */\n            el => {\n                el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n            }));\n        }\n    });\n}\n/**\n *  Provider to remove SSR styles on the browser\n * @type {?}\n */\nconst BROWSER_PROVIDER = {\n    provide: (/** @type {?} */ (APP_BOOTSTRAP_LISTENER)),\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\n/** @type {?} */\nconst CLASS_NAME = 'flex-layout-';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\nclass CoreModule {\n}\nCoreModule.ɵfac = function CoreModule_Factory(t) { return new (t || CoreModule)(); };\nCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CoreModule });\nCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [BROWSER_PROVIDER] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CoreModule, [{\n        type: NgModule,\n        args: [{\n                providers: [BROWSER_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-change.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nclass MediaChange {\n    /**\n     * @param {?=} matches whether the mediaQuery is currently activated\n     * @param {?=} mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n     * @param {?=} mqAlias e.g. gt-sm, md, gt-lg\n     * @param {?=} suffix e.g. GtSM, Md, GtLg\n     * @param {?=} priority the priority of activation for the given breakpoint\n     */\n    constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n        this.priority = priority;\n        this.property = '';\n    }\n    /**\n     * Create an exact copy of the MediaChange\n     * @return {?}\n     */\n    clone() {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/stylesheet-map.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nclass StylesheetMap {\n    constructor() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     * @param {?} element\n     * @param {?} style\n     * @param {?} value\n     * @return {?}\n     */\n    addStyleToElement(element, style, value) {\n        /** @type {?} */\n        const stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    }\n    /**\n     * Clear the virtual stylesheet\n     * @return {?}\n     */\n    clearStyles() {\n        this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     * @param {?} el\n     * @param {?} styleName\n     * @return {?}\n     */\n    getStyleForElement(el, styleName) {\n        /** @type {?} */\n        const styles = this.stylesheet.get(el);\n        /** @type {?} */\n        let value = '';\n        if (styles) {\n            /** @type {?} */\n            const style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    }\n}\nStylesheetMap.ɵfac = function StylesheetMap_Factory(t) { return new (t || StylesheetMap)(); };\n/** @nocollapse */ StylesheetMap.ɵprov = ɵɵdefineInjectable({ factory: function StylesheetMap_Factory() { return new StylesheetMap(); }, token: StylesheetMap, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StylesheetMap, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/library-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n    printWithBreakpoints: [],\n    mediaTriggerAutoRestore: true,\n    ssrObserveBreakpoints: [],\n};\n/** @type {?} */\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => DEFAULT_CONFIG)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/server-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n * @type {?}\n */\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => false)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/breakpoint-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => null)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/add-alias.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction mergeAlias(dest, source) {\n    dest = dest ? dest.clone() : new MediaChange();\n    if (source) {\n        dest.mqAlias = source.alias;\n        dest.mediaQuery = source.mediaQuery;\n        dest.suffix = (/** @type {?} */ (source.suffix));\n        dest.priority = (/** @type {?} */ (source.priority));\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst INLINE = 'inline';\n/** @type {?} */\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find((/**\n     * @param {?} x\n     * @return {?}\n     */\n    x => x === direction))) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/base2.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass BaseDirective2 {\n    /**\n     * @protected\n     * @param {?} elementRef\n     * @param {?} styleBuilder\n     * @param {?} styler\n     * @param {?} marshal\n     */\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        this.elementRef = elementRef;\n        this.styleBuilder = styleBuilder;\n        this.styler = styler;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = '';\n        this.inputs = [];\n        /**\n         * The most recently used styles for the builder\n         */\n        this.mru = {};\n        this.destroySubject = new Subject();\n        /**\n         * Cache map for style computation\n         */\n        this.styleCache = new Map();\n    }\n    /**\n     * Access to host element's parent DOM node\n     * @protected\n     * @return {?}\n     */\n    get parentElement() {\n        return this.elementRef.nativeElement.parentElement;\n    }\n    /**\n     * Access to the HTMLElement for the directive\n     * @protected\n     * @return {?}\n     */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    /**\n     * Access to the activated value for the directive\n     * @return {?}\n     */\n    get activatedValue() {\n        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activatedValue(value) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /**\n     * For \\@Input changes\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                /** @type {?} */\n                const bp = key.split('.').slice(1).join('.');\n                /** @type {?} */\n                const val = changes[key].currentValue;\n                this.setValue(val, bp);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroySubject.next();\n        this.destroySubject.complete();\n        this.marshal.releaseElement(this.nativeElement);\n    }\n    /**\n     * Register with central marshaller service\n     * @protected\n     * @param {?=} extraTriggers\n     * @return {?}\n     */\n    init(extraTriggers = []) {\n        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /**\n     * Add styles to the element using predefined style builder\n     * @protected\n     * @param {?} input\n     * @param {?=} parent\n     * @return {?}\n     */\n    addStyles(input, parent) {\n        /** @type {?} */\n        const builder = this.styleBuilder;\n        /** @type {?} */\n        const useCache = builder.shouldCache;\n        /** @type {?} */\n        let genStyles = this.styleCache.get(input);\n        if (!genStyles || !useCache) {\n            genStyles = builder.buildStyles(input, parent);\n            if (useCache) {\n                this.styleCache.set(input, genStyles);\n            }\n        }\n        this.mru = Object.assign({}, genStyles);\n        this.applyStyleToElement(genStyles);\n        builder.sideEffect(input, genStyles, parent);\n    }\n    /**\n     * Remove generated styles from an element using predefined style builder\n     * @protected\n     * @return {?}\n     */\n    clearStyles() {\n        Object.keys(this.mru).forEach((/**\n         * @param {?} k\n         * @return {?}\n         */\n        k => {\n            this.mru[k] = '';\n        }));\n        this.applyStyleToElement(this.mru);\n        this.mru = {};\n    }\n    /**\n     * Force trigger style updates on DOM element\n     * @protected\n     * @return {?}\n     */\n    triggerUpdate() {\n        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @protected\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    getFlexFlowDirection(target, addIfMissing = false) {\n        if (target) {\n            const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n            if (!hasInlineValue && addIfMissing) {\n                /** @type {?} */\n                const style = buildLayoutCSS(value);\n                /** @type {?} */\n                const elements = [target];\n                this.styler.applyStyleToElements(style, elements);\n            }\n            return value.trim();\n        }\n        return 'row';\n    }\n    /**\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n    hasWrap(target) {\n        return this.styler.hasWrap(target);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @protected\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    applyStyleToElement(style, value, element = this.nativeElement) {\n        this.styler.applyStyleToElement(element, style, value);\n    }\n    /**\n     * @protected\n     * @param {?} val\n     * @param {?} bp\n     * @return {?}\n     */\n    setValue(val, bp) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    /**\n     * @protected\n     * @param {?} input\n     * @return {?}\n     */\n    updateWithValue(input) {\n        if (this.currentValue !== input) {\n            this.addStyles(input);\n            this.currentValue = input;\n        }\n    }\n}\nBaseDirective2.ɵfac = function BaseDirective2_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseDirective2.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseDirective2, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n * @type {?}\n */\nconst DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n        priority: 1000,\n    },\n    {\n        alias: 'sm',\n        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n        priority: 900,\n    },\n    {\n        alias: 'md',\n        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n        priority: 800,\n    },\n    {\n        alias: 'lg',\n        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n        priority: 700,\n    },\n    {\n        alias: 'xl',\n        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n        priority: 600,\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 599.98px)',\n        priority: 950,\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 959.98px)',\n        priority: 850,\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 1279.98px)',\n        priority: 750,\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        priority: 650,\n        mediaQuery: 'screen and (max-width: 1919.98px)',\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 600px)',\n        priority: -950,\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 960px)',\n        priority: -850,\n    }, {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1280px)',\n        priority: -750,\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1920px)',\n        priority: -650,\n    }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/orientation-break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/* tslint:disable */\n/** @type {?} */\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\n/** @type {?} */\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\n/** @type {?} */\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\n/** @type {?} */\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\n/** @type {?} */\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\n/** @type {?} */\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\n/** @type {?} */\nconst ScreenTypes = {\n    'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n    'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n    'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n    'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n    'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n    'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n    'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n    'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n    'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n * @type {?}\n */\nconst ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', priority: 2100, 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE },\n    { 'alias': 'tablet.portrait', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/breakpoint-tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\n/**\n * @param {?} part\n * @return {?}\n */\nfunction firstUpperCase(part) {\n    /** @type {?} */\n    let first = part.length > 0 ? part.charAt(0) : '';\n    /** @type {?} */\n    let remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param {?} name Text to UpperCamelCase\n * @return {?}\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n * @param {?} list\n * @return {?}\n */\nfunction validateSuffixes(list) {\n    list.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    (bp) => {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    }));\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n * @param {?} defaults\n * @param {?=} custom\n * @return {?}\n */\nfunction mergeByAlias(defaults, custom = []) {\n    /** @type {?} */\n    const dict = {};\n    defaults.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    bp => {\n        dict[bp.alias] = bp;\n    }));\n    // Merge custom breakpoints\n    custom.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    (bp) => {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    }));\n    return validateSuffixes(Object.keys(dict).map((/**\n     * @param {?} k\n     * @return {?}\n     */\n    k => dict[k])));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-points-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n * @type {?}\n */\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => {\n        /** @type {?} */\n        const breakpoints = inject(BREAKPOINT);\n        /** @type {?} */\n        const layoutConfig = inject(LAYOUT_CONFIG);\n        /** @type {?} */\n        const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        (v) => Array.isArray(v) ? v : [v])));\n        /** @type {?} */\n        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    })\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * HOF to sort the breakpoints by descending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sortDescendingPriority(a, b) {\n    /** @type {?} */\n    const priorityA = a ? a.priority || 0 : 0;\n    /** @type {?} */\n    const priorityB = b ? b.priority || 0 : 0;\n    return priorityB - priorityA;\n}\n/**\n * HOF to sort the breakpoints by ascending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sortAscendingPriority(a, b) {\n    /** @type {?} */\n    const pA = a.priority || 0;\n    /** @type {?} */\n    const pB = b.priority || 0;\n    return pA - pB;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nclass BreakPointRegistry {\n    /**\n     * @param {?} list\n     */\n    constructor(list) {\n        /**\n         * Memoized BreakPoint Lookups\n         */\n        this.findByMap = new Map();\n        this.items = [...list].sort(sortAscendingPriority);\n    }\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     * @param {?} alias\n     * @return {?}\n     */\n    findByAlias(alias) {\n        return !alias ? null : this.findWithPredicate(alias, (/**\n         * @param {?} bp\n         * @return {?}\n         */\n        (bp) => bp.alias == alias));\n    }\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n    findByQuery(query) {\n        return this.findWithPredicate(query, (/**\n         * @param {?} bp\n         * @return {?}\n         */\n        (bp) => bp.mediaQuery == query));\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     * @return {?}\n     */\n    get overlappings() {\n        return this.items.filter((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.overlapping == true));\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     * @return {?}\n     */\n    get aliases() {\n        return this.items.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.alias));\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     * @return {?}\n     */\n    get suffixes() {\n        return this.items.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => !!it.suffix ? it.suffix : ''));\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     * @private\n     * @param {?} key\n     * @param {?} searchFn\n     * @return {?}\n     */\n    findWithPredicate(key, searchFn) {\n        /** @type {?} */\n        let response = this.findByMap.get(key);\n        if (!response) {\n            response = this.items.find(searchFn) || null;\n            this.findByMap.set(key, response);\n        }\n        return response || null;\n    }\n}\nBreakPointRegistry.ɵfac = function BreakPointRegistry_Factory(t) { return new (t || BreakPointRegistry)(ɵngcc0.ɵɵinject(BREAKPOINTS)); };\n/** @nocollapse */ BreakPointRegistry.ɵprov = ɵɵdefineInjectable({ factory: function BreakPointRegistry_Factory() { return new BreakPointRegistry(ɵɵinject(BREAKPOINTS)); }, token: BreakPointRegistry, providedIn: \"root\" });\n/** @nocollapse */\nBreakPointRegistry.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [BREAKPOINTS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakPointRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [BREAKPOINTS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nclass MatchMedia {\n    /**\n     * @param {?} _zone\n     * @param {?} _platformId\n     * @param {?} _document\n     */\n    constructor(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        /**\n         * Initialize source with 'all' so all non-responsive APIs trigger style updates\n         */\n        this.source = new BehaviorSubject(new MediaChange(true));\n        this.registry = new Map();\n        this.pendingRemoveListenerFns = [];\n        this._observable$ = this.source.asObservable();\n    }\n    /**\n     * Publish list of all current activations\n     * @return {?}\n     */\n    get activations() {\n        /** @type {?} */\n        const results = [];\n        this.registry.forEach((/**\n         * @param {?} mql\n         * @param {?} key\n         * @return {?}\n         */\n        (mql, key) => {\n            if (mql.matches) {\n                results.push(key);\n            }\n        }));\n        return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    isActive(mediaQuery) {\n        /** @type {?} */\n        const mql = this.registry.get(mediaQuery);\n        return !!mql ? mql.matches : this.registerQuery(mediaQuery).some((/**\n         * @param {?} m\n         * @return {?}\n         */\n        m => m.matches));\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     * @param {?=} mqList\n     * @param {?=} filterOthers\n     * @return {?}\n     */\n    observe(mqList, filterOthers = false) {\n        if (mqList && mqList.length) {\n            /** @type {?} */\n            const matchMedia$ = this._observable$.pipe(filter((/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1))));\n            /** @type {?} */\n            const registration$ = new Observable((/**\n             * @param {?} observer\n             * @return {?}\n             */\n            (observer) => {\n                // tslint:disable-line:max-line-length\n                /** @type {?} */\n                const matches = this.registerQuery(mqList);\n                if (matches.length) {\n                    /** @type {?} */\n                    const lastChange = (/** @type {?} */ (matches.pop()));\n                    matches.forEach((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    (e) => {\n                        observer.next(e);\n                    }));\n                    this.source.next(lastChange); // last match is cached\n                }\n                observer.complete();\n            }));\n            return merge(registration$, matchMedia$);\n        }\n        return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    registerQuery(mediaQuery) {\n        /** @type {?} */\n        const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n        /** @type {?} */\n        const matches = [];\n        buildQueryCss(list, this._document);\n        list.forEach((/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => {\n            /** @type {?} */\n            const onMQLEvent = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                this._zone.run((/**\n                 * @return {?}\n                 */\n                () => this.source.next(new MediaChange(e.matches, query))));\n            });\n            /** @type {?} */\n            let mql = this.registry.get(query);\n            if (!mql) {\n                mql = this.buildMQL(query);\n                mql.addListener(onMQLEvent);\n                this.pendingRemoveListenerFns.push((/**\n                 * @return {?}\n                 */\n                () => (/** @type {?} */ (mql)).removeListener(onMQLEvent)));\n                this.registry.set(query, mql);\n            }\n            if (mql.matches) {\n                matches.push(new MediaChange(true, query));\n            }\n        }));\n        return matches;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        let fn;\n        while (fn = this.pendingRemoveListenerFns.pop()) {\n            fn();\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n    buildMQL(query) {\n        return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n}\nMatchMedia.ɵfac = function MatchMedia_Factory(t) { return new (t || MatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ MatchMedia.ɵprov = ɵɵdefineInjectable({ factory: function MatchMedia_Factory() { return new MatchMedia(ɵɵinject(NgZone), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT)); }, token: MatchMedia, providedIn: \"root\" });\n/** @nocollapse */\nMatchMedia.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatchMedia, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n * @type {?}\n */\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param {?} mediaQueries\n * @param {?} _document\n * @return {?}\n */\nfunction buildQueryCss(mediaQueries, _document) {\n    /** @type {?} */\n    const list = mediaQueries.filter((/**\n     * @param {?} it\n     * @return {?}\n     */\n    it => !ALL_STYLES[it]));\n    if (list.length > 0) {\n        /** @type {?} */\n        const query = list.join(', ');\n        try {\n            /** @type {?} */\n            const styleEl = _document.createElement('style');\n            styleEl.setAttribute('type', 'text/css');\n            if (!((/** @type {?} */ (styleEl))).styleSheet) {\n                /** @type {?} */\n                const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n                styleEl.appendChild(_document.createTextNode(cssText));\n            }\n            (/** @type {?} */ (_document.head)).appendChild(styleEl);\n            // Store in private global registry\n            list.forEach((/**\n             * @param {?} mq\n             * @return {?}\n             */\n            mq => ALL_STYLES[mq] = styleEl));\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n/**\n * @param {?} query\n * @param {?} isBrowser\n * @return {?}\n */\nfunction constructMql(query, isBrowser) {\n    /** @type {?} */\n    const canListen = isBrowser && !!((/** @type {?} */ (window))).matchMedia('all').addListener;\n    return canListen ? ((/** @type {?} */ (window))).matchMedia(query) : (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => {\n        }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => {\n        }),\n        onchange: null,\n        /**\n         * @return {?}\n         */\n        addEventListener() {\n        },\n        /**\n         * @return {?}\n         */\n        removeEventListener() {\n        },\n        /**\n         * @return {?}\n         */\n        dispatchEvent() {\n            return false;\n        }\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/mock/mock-match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nclass MockMatchMedia extends MatchMedia {\n    // Allow fallback to overlapping mediaQueries\n    /**\n     * @param {?} _zone\n     * @param {?} _platformId\n     * @param {?} _document\n     * @param {?} _breakpoints\n     */\n    constructor(_zone, _platformId, _document, _breakpoints) {\n        super(_zone, _platformId, _document);\n        this._breakpoints = _breakpoints;\n        this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n        // Used for testing BreakPoint registrations\n        this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n    }\n    /**\n     * Easy method to clear all listeners for all mediaQueries\n     * @return {?}\n     */\n    clearAll() {\n        this.registry.forEach((/**\n         * @param {?} mql\n         * @return {?}\n         */\n        (mql) => {\n            ((/** @type {?} */ (mql))).destroy();\n        }));\n        this.registry.clear();\n        this.useOverlaps = false;\n    }\n    /**\n     * Feature to support manual, simulated activation of a mediaQuery.\n     * @param {?} mediaQuery\n     * @param {?=} useOverlaps\n     * @return {?}\n     */\n    activate(mediaQuery, useOverlaps = false) {\n        useOverlaps = useOverlaps || this.useOverlaps;\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    }\n    /**\n     * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n     * @param {?} queryOrAlias\n     * @return {?}\n     */\n    _validateQuery(queryOrAlias) {\n        /** @type {?} */\n        const bp = this._breakpoints.findByAlias(queryOrAlias);\n        return (bp && bp.mediaQuery) || queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     * @private\n     * @param {?} mediaQuery\n     * @param {?} useOverlaps\n     * @return {?}\n     */\n    _activateWithOverlaps(mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            /** @type {?} */\n            const bp = this._breakpoints.findByQuery(mediaQuery);\n            /** @type {?} */\n            const alias = bp ? bp.alias : 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias(['lt-xl']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['lt-xl', 'lt-lg']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n                    break;\n                case 'xs':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n                    break;\n            }\n            // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'lg':\n                    this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['gt-sm', 'gt-xs']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['gt-xs']);\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     * @private\n     * @param {?} aliases\n     * @return {?}\n     */\n    _activateByAlias(aliases) {\n        /** @type {?} */\n        const activate = (/**\n         * @param {?} alias\n         * @return {?}\n         */\n        (alias) => {\n            /** @type {?} */\n            const bp = this._breakpoints.findByAlias(alias);\n            this._activateByQuery(bp ? bp.mediaQuery : alias);\n        });\n        aliases.forEach(activate);\n    }\n    /**\n     *\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    _activateByQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this._registerMediaQuery(mediaQuery);\n        }\n        /** @type {?} */\n        const mql = (/** @type {?} */ (this.registry.get(mediaQuery)));\n        if (mql && !this.isActive(mediaQuery)) {\n            this.registry.set(mediaQuery, mql.activate());\n        }\n        return this.hasActivated;\n    }\n    /**\n     * Deactivate all current MQLs and reset the buffer\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @return {THIS}\n     */\n    _deactivateAll() {\n        (/** @type {?} */ (this)).registry.forEach((/**\n         * @param {?} it\n         * @return {?}\n         */\n        (it) => {\n            ((/** @type {?} */ (it))).deactivate();\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Insure the mediaQuery is registered with MatchMedia\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    _registerMediaQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n    buildMQL(query) {\n        return new MockMediaQueryList(query);\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    get hasActivated() {\n        return this.activations.length > 0;\n    }\n}\nMockMatchMedia.ɵfac = function MockMatchMedia_Factory(t) { return new (t || MockMatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(BreakPointRegistry)); };\nMockMatchMedia.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MockMatchMedia, factory: MockMatchMedia.ɵfac });\n/** @nocollapse */\nMockMatchMedia.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: BreakPointRegistry }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MockMatchMedia, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: BreakPointRegistry }]; }, null); })();\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nclass MockMediaQueryList {\n    /**\n     * @param {?} _mediaQuery\n     */\n    constructor(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n        this.onchange = null;\n    }\n    /**\n     * @return {?}\n     */\n    get matches() {\n        return this._isActive;\n    }\n    /**\n     * @return {?}\n     */\n    get media() {\n        return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    destroy() {\n        this.deactivate();\n        this._listeners = [];\n    }\n    /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    activate() {\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach((/**\n             * @param {?} callback\n             * @return {?}\n             */\n            (callback) => {\n                /** @type {?} */\n                const cb = (/** @type {?} */ (callback));\n                cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n            }));\n        }\n        return this;\n    }\n    /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    deactivate() {\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach((/**\n             * @param {?} callback\n             * @return {?}\n             */\n            (callback) => {\n                /** @type {?} */\n                const cb = (/** @type {?} */ (callback));\n                cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n            }));\n        }\n        return this;\n    }\n    /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    addListener(listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            /** @type {?} */\n            const cb = (/** @type {?} */ (listener));\n            cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n        }\n    }\n    /**\n     * Don't need to remove listeners in the testing environment\n     * @param {?} _\n     * @return {?}\n     */\n    removeListener(_) {\n    }\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n    addEventListener(_, __, ___) {\n    }\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n    removeEventListener(_, __, ___) {\n    }\n    /**\n     * @param {?} _\n     * @return {?}\n     */\n    dispatchEvent(_) {\n        return false;\n    }\n}\n/**\n * Pre-configured provider for MockMatchMedia\n * @type {?}\n */\nconst MockMatchMediaProvider = {\n    // tslint:disable-line:variable-name\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/print-hook.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PRINT = 'print';\n/** @type {?} */\nconst BREAKPOINT_PRINT = {\n    alias: PRINT,\n    mediaQuery: PRINT,\n    priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\nclass PrintHook {\n    /**\n     * @param {?} breakpoints\n     * @param {?} layoutConfig\n     * @param {?} _document\n     */\n    constructor(breakpoints, layoutConfig, _document) {\n        this.breakpoints = breakpoints;\n        this.layoutConfig = layoutConfig;\n        this._document = _document;\n        // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n        //  and `afterprint` event listeners.\n        this.registeredBeforeAfterPrintHooks = false;\n        // isPrintingBeforeAfterEvent is used to track if we are printing from within\n        // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n        // form `interceptEvents` so that printing is not stopped while the dialog\n        // is still open. This is an extension of the `isPrinting` property on\n        // browsers which support `beforeprint` and `afterprint` events.\n        this.isPrintingBeforeAfterEvent = false;\n        this.beforePrintEventListeners = [];\n        this.afterPrintEventListeners = [];\n        /**\n         * Is this service currently in Print-mode ?\n         */\n        this.isPrinting = false;\n        this.queue = new PrintQueue();\n        this.deactivations = [];\n    }\n    /**\n     * Add 'print' mediaQuery: to listen for matchMedia activations\n     * @param {?} queries\n     * @return {?}\n     */\n    withPrintQuery(queries) {\n        return [...queries, PRINT];\n    }\n    /**\n     * Is the MediaChange event for any 'print' \\@media\n     * @param {?} e\n     * @return {?}\n     */\n    isPrintEvent(e) {\n        return e.mediaQuery.startsWith(PRINT);\n    }\n    /**\n     * What is the desired mqAlias to use while printing?\n     * @return {?}\n     */\n    get printAlias() {\n        return this.layoutConfig.printWithBreakpoints || [];\n    }\n    /**\n     * Lookup breakpoints associated with print aliases.\n     * @return {?}\n     */\n    get printBreakPoints() {\n        return (/** @type {?} */ (this.printAlias\n            .map((/**\n         * @param {?} alias\n         * @return {?}\n         */\n        alias => this.breakpoints.findByAlias(alias)))\n            .filter((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp !== null))));\n    }\n    /**\n     * Lookup breakpoint associated with mediaQuery\n     * @param {?} __0\n     * @return {?}\n     */\n    getEventBreakpoints({ mediaQuery }) {\n        /** @type {?} */\n        const bp = this.breakpoints.findByQuery(mediaQuery);\n        /** @type {?} */\n        const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n        return list.sort(sortDescendingPriority);\n    }\n    /**\n     * Update event with printAlias mediaQuery information\n     * @param {?} event\n     * @return {?}\n     */\n    updateEvent(event) {\n        /** @type {?} */\n        let bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (this.isPrintEvent(event)) {\n            // Reset from 'print' to first (highest priority) print breakpoint\n            bp = this.getEventBreakpoints(event)[0];\n            event.mediaQuery = bp ? bp.mediaQuery : '';\n        }\n        return mergeAlias(event, bp);\n    }\n    // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n    /**\n     * @private\n     * @param {?} target\n     * @return {?}\n     */\n    registerBeforeAfterPrintHooks(target) {\n        // `defaultView` may be null when rendering on the server or in other contexts.\n        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n            return;\n        }\n        this.registeredBeforeAfterPrintHooks = true;\n        /** @type {?} */\n        const beforePrintListener = (/**\n         * @return {?}\n         */\n        () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            if (!this.isPrinting) {\n                this.isPrintingBeforeAfterEvent = true;\n                this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n                target.updateStyles();\n            }\n        });\n        /** @type {?} */\n        const afterPrintListener = (/**\n         * @return {?}\n         */\n        () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            this.isPrintingBeforeAfterEvent = false;\n            if (this.isPrinting) {\n                this.stopPrinting(target);\n                target.updateStyles();\n            }\n        });\n        // Could we have teardown logic to remove if there are no print listeners being used?\n        this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n        this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n        this.beforePrintEventListeners.push(beforePrintListener);\n        this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS filter operator with partial application\n     * @param {?} target\n     * @return {?} pipeable filter predicate\n     */\n    interceptEvents(target) {\n        this.registerBeforeAfterPrintHooks(target);\n        return (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this.isPrintEvent(event)) {\n                if (event.matches && !this.isPrinting) {\n                    this.startPrinting(target, this.getEventBreakpoints(event));\n                    target.updateStyles();\n                }\n                else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n                    this.stopPrinting(target);\n                    target.updateStyles();\n                }\n            }\n            else {\n                this.collectActivations(event);\n            }\n        });\n    }\n    /**\n     * Stop mediaChange event propagation in event streams\n     * @return {?}\n     */\n    blockPropagation() {\n        return (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            return !(this.isPrinting || this.isPrintEvent(event));\n        });\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     * @protected\n     * @param {?} target\n     * @param {?} bpList\n     * @return {?}\n     */\n    startPrinting(target, bpList) {\n        this.isPrinting = true;\n        target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /**\n     * For any print de-activations, reset the entire print queue\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n    stopPrinting(target) {\n        target.activatedBreakpoints = this.deactivations;\n        this.deactivations = [];\n        this.queue.clear();\n        this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     * @param {?} event\n     * @return {?}\n     */\n    collectActivations(event) {\n        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n            if (!event.matches) {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(event.mediaQuery);\n                if (bp) { // Deactivating a breakpoint\n                    this.deactivations.push(bp);\n                    this.deactivations.sort(sortDescendingPriority);\n                }\n            }\n            else if (!this.isPrintingBeforeAfterEvent) {\n                // Only clear deactivations if we aren't printing from a `beforeprint` event.\n                // Otherwise this will clear before `stopPrinting()` is called to restore\n                // the pre-Print Activations.\n                this.deactivations = [];\n            }\n        }\n    }\n    /**\n     * Teardown logic for the service.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._document.defaultView) {\n            this.beforePrintEventListeners.forEach((/**\n             * @param {?} l\n             * @return {?}\n             */\n            l => this._document.defaultView.removeEventListener('beforeprint', l)));\n            this.afterPrintEventListeners.forEach((/**\n             * @param {?} l\n             * @return {?}\n             */\n            l => this._document.defaultView.removeEventListener('afterprint', l)));\n        }\n    }\n}\nPrintHook.ɵfac = function PrintHook_Factory(t) { return new (t || PrintHook)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ PrintHook.ɵprov = ɵɵdefineInjectable({ factory: function PrintHook_Factory() { return new PrintHook(ɵɵinject(BreakPointRegistry), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(DOCUMENT)); }, token: PrintHook, providedIn: \"root\" });\n/** @nocollapse */\nPrintHook.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrintHook, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n    constructor() {\n        /**\n         * Sorted queue with prioritized print breakpoints\n         */\n        this.printBreakpoints = [];\n    }\n    /**\n     * @param {?} bpList\n     * @return {?}\n     */\n    addPrintBreakpoints(bpList) {\n        bpList.push(BREAKPOINT_PRINT);\n        bpList.sort(sortDescendingPriority);\n        bpList.forEach((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => this.addBreakpoint(bp)));\n        return this.printBreakpoints;\n    }\n    /**\n     * Add Print breakpoint to queue\n     * @param {?} bp\n     * @return {?}\n     */\n    addBreakpoint(bp) {\n        if (!!bp) {\n            /** @type {?} */\n            const bpInList = this.printBreakpoints.find((/**\n             * @param {?} it\n             * @return {?}\n             */\n            it => it.mediaQuery === bp.mediaQuery));\n            if (bpInList === undefined) {\n                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n                // register as highest priority in the queue\n                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n                    : [...this.printBreakpoints, bp];\n            }\n        }\n    }\n    /**\n     * Restore original activated breakpoints and clear internal caches\n     * @return {?}\n     */\n    clear() {\n        this.printBreakpoints = [];\n    }\n}\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n/**\n * Only support intercept queueing if the Breakpoint is a print \\@media query\n * @param {?} bp\n * @return {?}\n */\nfunction isPrintBreakPoint(bp) {\n    return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/array.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/media-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n * \\@usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '\\@angular/flex-layout';\n *\n * \\@Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\nclass MediaObserver {\n    /**\n     * @param {?} breakpoints\n     * @param {?} matchMedia\n     * @param {?} hook\n     */\n    constructor(breakpoints, matchMedia, hook) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.hook = hook;\n        /**\n         * Filter MediaChange notifications for overlapping breakpoints\n         */\n        this.filterOverlaps = false;\n        this.destroyed$ = new Subject();\n        this._media$ = this.watchActivations();\n        this.media$ = this._media$.pipe(filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => changes.length > 0)), map((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => changes[0])));\n    }\n    /**\n     * Completes the active subject, signalling to all complete for all\n     * MediaObserver subscribers\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    // ************************************************\n    // Public Methods\n    // ************************************************\n    /**\n     * Observe changes to current activation 'list'\n     * @return {?}\n     */\n    asObservable() {\n        return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param {?} value One or more media queries (or aliases) to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isActive(value) {\n        /** @type {?} */\n        const aliases = splitQueries(coerceArray(value));\n        return aliases.some((/**\n         * @param {?} alias\n         * @return {?}\n         */\n        alias => {\n            /** @type {?} */\n            const query = toMediaQuery(alias, this.breakpoints);\n            return query !== null && this.matchMedia.isActive(query);\n        }));\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     * @private\n     * @return {?}\n     */\n    watchActivations() {\n        /** @type {?} */\n        const queries = this.breakpoints.items.map((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp.mediaQuery));\n        return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     * @private\n     * @param {?} mqList\n     * @return {?}\n     */\n    buildObservable(mqList) {\n        /** @type {?} */\n        const hasChanges = (/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => {\n            /** @type {?} */\n            const isValidQuery = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => (change.mediaQuery.length > 0));\n            return (changes.filter(isValidQuery).length > 0);\n        });\n        /** @type {?} */\n        const excludeOverlaps = (/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => {\n            return !this.filterOverlaps ? changes : changes.filter((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return !bp ? true : !bp.overlapping;\n            }));\n        });\n        /**\n         */\n        return this.matchMedia\n            .observe(this.hook.withPrintQuery(mqList))\n            .pipe(filter((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => change.matches)), debounceTime(0, asapScheduler), switchMap((/**\n         * @param {?} _\n         * @return {?}\n         */\n        _ => of(this.findAllActivations()))), map(excludeOverlaps), filter(hasChanges), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     * @private\n     * @return {?}\n     */\n    findAllActivations() {\n        /** @type {?} */\n        const mergeMQAlias = (/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            /** @type {?} */\n            let bp = this.breakpoints.findByQuery(change.mediaQuery);\n            return mergeAlias(change, bp);\n        });\n        /** @type {?} */\n        const replaceWithPrintAlias = (/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n        });\n        return this.matchMedia\n            .activations\n            .map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => new MediaChange(true, query)))\n            .map(replaceWithPrintAlias)\n            .map(mergeMQAlias)\n            .sort(sortDescendingPriority);\n    }\n}\nMediaObserver.ɵfac = function MediaObserver_Factory(t) { return new (t || MediaObserver)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(PrintHook)); };\n/** @nocollapse */ MediaObserver.ɵprov = ɵɵdefineInjectable({ factory: function MediaObserver_Factory() { return new MediaObserver(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(PrintHook)); }, token: MediaObserver, providedIn: \"root\" });\n/** @nocollapse */\nMediaObserver.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: MatchMedia },\n    { type: PrintHook }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: PrintHook }]; }, null); })();\n/**\n * Find associated breakpoint (if any)\n * @param {?} query\n * @param {?} locator\n * @return {?}\n */\nfunction toMediaQuery(query, locator) {\n    /** @type {?} */\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/media-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class\n */\nclass MediaTrigger {\n    /**\n     * @param {?} breakpoints\n     * @param {?} matchMedia\n     * @param {?} layoutConfig\n     * @param {?} _platformId\n     * @param {?} _document\n     */\n    constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.layoutConfig = layoutConfig;\n        this._platformId = _platformId;\n        this._document = _document;\n        this.hasCachedRegistryMatches = false;\n        this.originalActivations = [];\n        this.originalRegistry = new Map();\n    }\n    /**\n     * Manually activate range of breakpoints\n     * @param {?} list array of mediaQuery or alias strings\n     * @return {?}\n     */\n    activate(list) {\n        list = list.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.trim())); // trim queries\n        this.saveActivations();\n        this.deactivateAll();\n        this.setActivations(list);\n        this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     * @return {?}\n     */\n    restore() {\n        if (this.hasCachedRegistryMatches) {\n            /** @type {?} */\n            const extractQuery = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => change.mediaQuery);\n            /** @type {?} */\n            const list = this.originalActivations.map(extractQuery);\n            try {\n                this.deactivateAll();\n                this.restoreRegistryMatches();\n                this.setActivations(list);\n            }\n            finally {\n                this.originalActivations = [];\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                }\n            }\n        }\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     * @private\n     * @return {?}\n     */\n    prepareAutoRestore() {\n        /** @type {?} */\n        const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n        /** @type {?} */\n        const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n        if (enableAutoRestore) {\n            /** @type {?} */\n            const resize$ = fromEvent(window, 'resize').pipe(take(1));\n            this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n        }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     * @private\n     * @return {?}\n     */\n    deactivateAll() {\n        /** @type {?} */\n        const list = this.currentActivations;\n        this.forceRegistryMatches(list, false);\n        this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     * @private\n     * @return {?}\n     */\n    saveActivations() {\n        if (!this.hasCachedRegistryMatches) {\n            /** @type {?} */\n            const toMediaChange = (/**\n             * @param {?} query\n             * @return {?}\n             */\n            (query) => new MediaChange(true, query));\n            /** @type {?} */\n            const mergeMQAlias = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return mergeAlias(change, bp);\n            });\n            this.originalActivations = this.currentActivations\n                .map(toMediaChange)\n                .map(mergeMQAlias)\n                .sort(sortDescendingPriority);\n            this.cacheRegistryMatches();\n        }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     * @private\n     * @param {?} list\n     * @return {?}\n     */\n    setActivations(list) {\n        if (!!this.originalRegistry) {\n            this.forceRegistryMatches(list, true);\n        }\n        this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     * @private\n     * @param {?} queries\n     * @param {?=} matches\n     * @return {?}\n     */\n    simulateMediaChanges(queries, matches = true) {\n        /** @type {?} */\n        const toMediaQuery = (/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => {\n            /** @type {?} */\n            const locator = this.breakpoints;\n            /** @type {?} */\n            const bp = locator.findByAlias(query) || locator.findByQuery(query);\n            return bp ? bp.mediaQuery : query;\n        });\n        /** @type {?} */\n        const emitChangeEvent = (/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => this.emitChangeEvent(matches, query));\n        queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     * @private\n     * @param {?} queries\n     * @param {?} matches\n     * @return {?}\n     */\n    forceRegistryMatches(queries, matches) {\n        /** @type {?} */\n        const registry = new Map();\n        queries.forEach((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => {\n            registry.set(query, (/** @type {?} */ ({ matches })));\n        }));\n        this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     * @private\n     * @return {?}\n     */\n    cacheRegistryMatches() {\n        /** @type {?} */\n        const target = this.originalRegistry;\n        target.clear();\n        this.matchMedia.registry.forEach((/**\n         * @param {?} value\n         * @param {?} key\n         * @return {?}\n         */\n        (value, key) => {\n            target.set(key, value);\n        }));\n        this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     * @private\n     * @return {?}\n     */\n    restoreRegistryMatches() {\n        /** @type {?} */\n        const target = this.matchMedia.registry;\n        target.clear();\n        this.originalRegistry.forEach((/**\n         * @param {?} value\n         * @param {?} key\n         * @return {?}\n         */\n        (value, key) => {\n            target.set(key, value);\n        }));\n        this.originalRegistry.clear();\n        this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     * @private\n     * @param {?} matches\n     * @param {?} query\n     * @return {?}\n     */\n    emitChangeEvent(matches, query) {\n        this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get currentActivations() {\n        return this.matchMedia.activations;\n    }\n}\nMediaTrigger.ɵfac = function MediaTrigger_Factory(t) { return new (t || MediaTrigger)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ MediaTrigger.ɵprov = ɵɵdefineInjectable({ factory: function MediaTrigger_Factory() { return new MediaTrigger(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT)); }, token: MediaTrigger, providedIn: \"root\" });\n/** @nocollapse */\nMediaTrigger.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: MatchMedia },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaTrigger, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/auto-prefixer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        /** @type {?} */\n        let value = target[key] || '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                value = value || 'row';\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-utils/style-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StyleUtils {\n    /**\n     * @param {?} _serverStylesheet\n     * @param {?} _serverModuleLoaded\n     * @param {?} _platformId\n     * @param {?} layoutConfig\n     */\n    constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @param {?} element\n     * @param {?} style\n     * @param {?=} value\n     * @return {?}\n     */\n    applyStyleToElement(element, style, value = null) {\n        /** @type {?} */\n        let styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     * @param {?} style\n     * @param {?=} elements\n     * @return {?}\n     */\n    applyStyleToElements(style, elements = []) {\n        /** @type {?} */\n        const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach((/**\n         * @param {?} el\n         * @return {?}\n         */\n        el => {\n            this._applyMultiValueStyleToElement(styles, el);\n        }));\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     * @param {?} target\n     * @return {?}\n     */\n    getFlowDirection(target) {\n        /** @type {?} */\n        const query = 'flex-direction';\n        /** @type {?} */\n        let value = this.lookupStyle(target, query);\n        /** @type {?} */\n        const hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    }\n    /**\n     * @param {?} target\n     * @return {?}\n     */\n    hasWrap(target) {\n        /** @type {?} */\n        const query = 'flex-wrap';\n        return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    lookupAttributeValue(element, attribute) {\n        return element.getAttribute(attribute) || '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    lookupInlineStyle(element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} inlineOnly\n     * @return {?}\n     */\n    lookupStyle(element, styleName, inlineOnly = false) {\n        /** @type {?} */\n        let value = '';\n        if (element) {\n            /** @type {?} */\n            let immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     * @private\n     * @param {?} styles\n     * @param {?} element\n     * @return {?}\n     */\n    _applyMultiValueStyleToElement(styles, element) {\n        Object.keys(styles).sort().forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const el = styles[key];\n            /** @type {?} */\n            const values = Array.isArray(el) ? el : [el];\n            values.sort();\n            for (let value of values) {\n                value = value ? value + '' : '';\n                if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n                    isPlatformBrowser(this._platformId) ?\n                        element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n                }\n                else {\n                    this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    _setServerStyle(element, styleName, styleValue) {\n        styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        /** @type {?} */\n        const styleMap = this._readStyleAttribute(element);\n        styleMap[styleName] = styleValue || '';\n        this._writeStyleAttribute(element, styleMap);\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    _getServerStyle(element, styleName) {\n        /** @type {?} */\n        const styleMap = this._readStyleAttribute(element);\n        return styleMap[styleName] || '';\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _readStyleAttribute(element) {\n        /** @type {?} */\n        const styleMap = {};\n        /** @type {?} */\n        const styleAttribute = element.getAttribute('style');\n        if (styleAttribute) {\n            /** @type {?} */\n            const styleList = styleAttribute.split(/;+/g);\n            for (let i = 0; i < styleList.length; i++) {\n                /** @type {?} */\n                const style = styleList[i].trim();\n                if (style.length > 0) {\n                    /** @type {?} */\n                    const colonIndex = style.indexOf(':');\n                    if (colonIndex === -1) {\n                        throw new Error(`Invalid CSS style: ${style}`);\n                    }\n                    /** @type {?} */\n                    const name = style.substr(0, colonIndex).trim();\n                    styleMap[name] = style.substr(colonIndex + 1).trim();\n                }\n            }\n        }\n        return styleMap;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleMap\n     * @return {?}\n     */\n    _writeStyleAttribute(element, styleMap) {\n        /** @type {?} */\n        let styleAttrValue = '';\n        for (const key in styleMap) {\n            /** @type {?} */\n            const newValue = styleMap[key];\n            if (newValue) {\n                styleAttrValue += key + ':' + styleMap[key] + ';';\n            }\n        }\n        element.setAttribute('style', styleAttrValue);\n    }\n}\nStyleUtils.ɵfac = function StyleUtils_Factory(t) { return new (t || StyleUtils)(ɵngcc0.ɵɵinject(StylesheetMap), ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LAYOUT_CONFIG)); };\n/** @nocollapse */ StyleUtils.ɵprov = ɵɵdefineInjectable({ factory: function StyleUtils_Factory() { return new StyleUtils(ɵɵinject(StylesheetMap), ɵɵinject(SERVER_TOKEN), ɵɵinject(PLATFORM_ID), ɵɵinject(LAYOUT_CONFIG)); }, token: StyleUtils, providedIn: \"root\" });\n/** @nocollapse */\nStyleUtils.ctorParameters = () => [\n    { type: StylesheetMap },\n    { type: Boolean, decorators: [{ type: Inject, args: [SERVER_TOKEN,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StyleUtils, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: StylesheetMap }, { type: Boolean, decorators: [{\n                type: Inject,\n                args: [SERVER_TOKEN]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-builder/style-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A class that encapsulates CSS style generation for common directives\n * @abstract\n */\nclass StyleBuilder {\n    constructor() {\n        /**\n         * Whether to cache the generated output styles\n         */\n        this.shouldCache = true;\n    }\n    /**\n     * Run a side effect computation given the input string and the computed styles\n     * from the build task and the host configuration object\n     * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n     * @param {?} _input\n     * @param {?} _styles\n     * @param {?=} _parent\n     * @return {?}\n     */\n    sideEffect(_input, _styles, _parent) {\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/basis-validator/basis-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n * @param {?} basis\n * @param {?=} grow\n * @param {?=} shrink\n * @return {?}\n */\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n    /** @type {?} */\n    let parts = [grow, shrink, basis];\n    /** @type {?} */\n    let j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        /** @type {?} */\n        let matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        /** @type {?} */\n        let matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n * @param {?} calc\n * @return {?}\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/media-marshaller.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\nclass MediaMarshaller {\n    /**\n     * @param {?} matchMedia\n     * @param {?} breakpoints\n     * @param {?} hook\n     */\n    constructor(matchMedia, breakpoints, hook) {\n        this.matchMedia = matchMedia;\n        this.breakpoints = breakpoints;\n        this.hook = hook;\n        this.activatedBreakpoints = [];\n        this.elementMap = new Map();\n        this.elementKeyMap = new WeakMap();\n        this.watcherMap = new WeakMap(); // special triggers to update elements\n        // special triggers to update elements\n        this.updateMap = new WeakMap(); // callback functions to update styles\n        // callback functions to update styles\n        this.clearMap = new WeakMap(); // callback functions to clear styles\n        // callback functions to clear styles\n        this.subject = new Subject();\n        this.observeActivations();\n    }\n    /**\n     * @return {?}\n     */\n    get activatedAlias() {\n        return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param {?} mc\n     * @return {?}\n     */\n    onMediaChange(mc) {\n        /** @type {?} */\n        const bp = this.findByQuery(mc.mediaQuery);\n        if (bp) {\n            mc = mergeAlias(mc, bp);\n            if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n                this.activatedBreakpoints.push(bp);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n            else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n                // Remove the breakpoint when it's deactivated\n                this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n        }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     * @return {?}\n     */\n    init(element, key, updateFn, clearFn, extraTriggers = []) {\n        initBuilderMap(this.updateMap, element, key, updateFn);\n        initBuilderMap(this.clearMap, element, key, clearFn);\n        this.buildElementKeyMap(element, key);\n        this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} bp\n     * @return {?}\n     */\n    getValue(element, key, bp) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    hasValue(element, key) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const values = this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key) !== undefined || false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param {?} element the element in question\n     * @param {?} key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param {?} val the value for the breakpoint\n     * @param {?} bp the breakpoint suffix (empty string = default)\n     * @return {?}\n     */\n    setValue(element, key, val, bp) {\n        /** @type {?} */\n        let bpMap = this.elementMap.get(element);\n        if (!bpMap) {\n            bpMap = new Map().set(bp, new Map().set(key, val));\n            this.elementMap.set(element, bpMap);\n        }\n        else {\n            /** @type {?} */\n            const values = (bpMap.get(bp) || new Map()).set(key, val);\n            bpMap.set(bp, values);\n            this.elementMap.set(element, bpMap);\n        }\n        /** @type {?} */\n        const value = this.getValue(element, key);\n        if (value !== undefined) {\n            this.updateElement(element, key, value);\n        }\n    }\n    /**\n     * Track element value changes for a specific key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    trackValue(element, key) {\n        return this.subject\n            .asObservable()\n            .pipe(filter((/**\n         * @param {?} v\n         * @return {?}\n         */\n        v => v.element === element && v.key === key)));\n    }\n    /**\n     * update all styles for all elements on the current breakpoint\n     * @return {?}\n     */\n    updateStyles() {\n        this.elementMap.forEach((/**\n         * @param {?} bpMap\n         * @param {?} el\n         * @return {?}\n         */\n        (bpMap, el) => {\n            /** @type {?} */\n            const keyMap = new Set((/** @type {?} */ (this.elementKeyMap.get(el))));\n            /** @type {?} */\n            let valueMap = this.getActivatedValues(bpMap);\n            if (valueMap) {\n                valueMap.forEach((/**\n                 * @param {?} v\n                 * @param {?} k\n                 * @return {?}\n                 */\n                (v, k) => {\n                    this.updateElement(el, k, v);\n                    keyMap.delete(k);\n                }));\n            }\n            keyMap.forEach((/**\n             * @param {?} k\n             * @return {?}\n             */\n            k => {\n                valueMap = this.getActivatedValues(bpMap, k);\n                if (valueMap) {\n                    /** @type {?} */\n                    const value = valueMap.get(k);\n                    this.updateElement(el, k, value);\n                }\n                else {\n                    this.clearElement(el, k);\n                }\n            }));\n        }));\n    }\n    /**\n     * clear the styles for a given element\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    clearElement(element, key) {\n        /** @type {?} */\n        const builders = this.clearMap.get(element);\n        if (builders) {\n            /** @type {?} */\n            const clearFn = (/** @type {?} */ (builders.get(key)));\n            if (!!clearFn) {\n                clearFn();\n                this.subject.next({ element, key, value: '' });\n            }\n        }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    updateElement(element, key, value) {\n        /** @type {?} */\n        const builders = this.updateMap.get(element);\n        if (builders) {\n            /** @type {?} */\n            const updateFn = (/** @type {?} */ (builders.get(key)));\n            if (!!updateFn) {\n                updateFn(value);\n                this.subject.next({ element, key, value });\n            }\n        }\n    }\n    /**\n     * release all references to a given element\n     * @param {?} element\n     * @return {?}\n     */\n    releaseElement(element) {\n        /** @type {?} */\n        const watcherMap = this.watcherMap.get(element);\n        if (watcherMap) {\n            watcherMap.forEach((/**\n             * @param {?} s\n             * @return {?}\n             */\n            s => s.unsubscribe()));\n            this.watcherMap.delete(element);\n        }\n        /** @type {?} */\n        const elementMap = this.elementMap.get(element);\n        if (elementMap) {\n            elementMap.forEach((/**\n             * @param {?} _\n             * @param {?} s\n             * @return {?}\n             */\n            (_, s) => elementMap.delete(s)));\n            this.elementMap.delete(element);\n        }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param {?} element\n     * @param {?=} key\n     * @return {?}\n     */\n    triggerUpdate(element, key) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const valueMap = this.getActivatedValues(bpMap, key);\n            if (valueMap) {\n                if (key) {\n                    this.updateElement(element, key, valueMap.get(key));\n                }\n                else {\n                    valueMap.forEach((/**\n                     * @param {?} v\n                     * @param {?} k\n                     * @return {?}\n                     */\n                    (v, k) => this.updateElement(element, k, v)));\n                }\n            }\n        }\n    }\n    /**\n     * Cross-reference for HTMLElement with directive key\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    buildElementKeyMap(element, key) {\n        /** @type {?} */\n        let keyMap = this.elementKeyMap.get(element);\n        if (!keyMap) {\n            keyMap = new Set();\n            this.elementKeyMap.set(element, keyMap);\n        }\n        keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @param {?} triggers\n     * @return {?}\n     */\n    watchExtraTriggers(element, key, triggers) {\n        if (triggers && triggers.length) {\n            /** @type {?} */\n            let watchers = this.watcherMap.get(element);\n            if (!watchers) {\n                watchers = new Map();\n                this.watcherMap.set(element, watchers);\n            }\n            /** @type {?} */\n            const subscription = watchers.get(key);\n            if (!subscription) {\n                /** @type {?} */\n                const newSubscription = merge(...triggers).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const currentValue = this.getValue(element, key);\n                    this.updateElement(element, key, currentValue);\n                }));\n                watchers.set(key, newSubscription);\n            }\n        }\n    }\n    /**\n     * Breakpoint locator by mediaQuery\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    findByQuery(query) {\n        return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @private\n     * @param {?} bpMap\n     * @param {?=} key\n     * @return {?}\n     */\n    getActivatedValues(bpMap, key) {\n        for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n            /** @type {?} */\n            const activatedBp = this.activatedBreakpoints[i];\n            /** @type {?} */\n            const valueMap = bpMap.get(activatedBp.alias);\n            if (valueMap) {\n                if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n                    return valueMap;\n                }\n            }\n        }\n        /** @type {?} */\n        const lastHope = bpMap.get('');\n        return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     * @private\n     * @return {?}\n     */\n    observeActivations() {\n        /** @type {?} */\n        const target = (/** @type {?} */ ((/** @type {?} */ (this))));\n        /** @type {?} */\n        const queries = this.breakpoints.items.map((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp.mediaQuery));\n        this.matchMedia\n            .observe(this.hook.withPrintQuery(queries))\n            .pipe(tap(this.hook.interceptEvents(target)), filter(this.hook.blockPropagation()))\n            .subscribe(this.onMediaChange.bind(this));\n    }\n}\nMediaMarshaller.ɵfac = function MediaMarshaller_Factory(t) { return new (t || MediaMarshaller)(ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(PrintHook)); };\n/** @nocollapse */ MediaMarshaller.ɵprov = ɵɵdefineInjectable({ factory: function MediaMarshaller_Factory() { return new MediaMarshaller(ɵɵinject(MatchMedia), ɵɵinject(BreakPointRegistry), ɵɵinject(PrintHook)); }, token: MediaMarshaller, providedIn: \"root\" });\n/** @nocollapse */\nMediaMarshaller.ctorParameters = () => [\n    { type: MatchMedia },\n    { type: BreakPointRegistry },\n    { type: PrintHook }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMarshaller, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MatchMedia }, { type: BreakPointRegistry }, { type: PrintHook }]; }, null); })();\n/**\n * @param {?} map\n * @param {?} element\n * @param {?} key\n * @param {?=} input\n * @return {?}\n */\nfunction initBuilderMap(map$$1, element, key, input) {\n    if (input !== undefined) {\n        /** @type {?} */\n        let oldMap = map$$1.get(element);\n        if (!oldMap) {\n            oldMap = new Map();\n            map$$1.set(element, oldMap);\n        }\n        oldMap.set(key, input);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook };\n\n"]},"metadata":{},"sourceType":"module"}