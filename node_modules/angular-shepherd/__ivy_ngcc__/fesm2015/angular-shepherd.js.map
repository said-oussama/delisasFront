{"version":3,"file":"angular-shepherd.js","sources":["../projects/shepherd/src/lib/utils/dom.ts","../projects/shepherd/src/lib/utils/buttons.ts","../../projects/shepherd/src/lib/shepherd.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Helper method to check if element is hidden, since we cannot use :visible without jQuery\n * @param element The element to check for visibility\n * @returns true if element is hidden\n */\nexport function elementIsHidden(element: HTMLElement): boolean {\n  return element.offsetWidth === 0 && element.offsetHeight === 0;\n}\n","/**\n * Creates a button of the specified type, with the given classes and text\n *\n * @param button.type The type of button cancel, back, or next\n * @param button.classes Classes to apply to the button\n * @param button.text The text for the button\n * @param button.action The action to call\n */\nexport function makeButton(button) {\n  const { classes, disabled, label, secondary, type, text } = button;\n  const builtInButtonTypes = ['back', 'cancel', 'next'];\n\n  if (!type) {\n    return button;\n  }\n\n  if (builtInButtonTypes.indexOf(type) === -1) {\n    throw new Error(`'type' property must be one of 'back', 'cancel', or 'next'`);\n  }\n\n  return {\n    action: this[type].bind(this),\n    classes,\n    disabled,\n    label,\n    secondary,\n    text\n  };\n}\n","import { Injectable } from '@angular/core';\nimport Shepherd from 'shepherd.js';\nimport { elementIsHidden } from './utils/dom';\nimport { makeButton } from './utils/buttons';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShepherdService {\n  confirmCancel = false;\n  confirmCancelMessage: string = null;\n  defaultStepOptions: object = {};\n  errorTitle = null;\n  isActive = false;\n  messageForUser: string = null;\n  modal = false;\n  requiredElements = [];\n  steps = [];\n  tourName = undefined;\n  tourObject: Shepherd.Tour = null;\n\n  constructor() {\n  }\n\n  /**\n   * Get the tour object and call back\n   */\n  back() {\n    this.tourObject.back();\n  }\n\n  /**\n   * Cancel the tour\n   */\n  cancel() {\n    this.tourObject.cancel();\n  }\n\n  /**\n   * Complete the tour\n   */\n  complete() {\n    this.tourObject.complete();\n  }\n\n  /**\n   * Hides the current step\n   */\n  hide() {\n    this.tourObject.hide();\n  }\n\n  /**\n   * Advance the tour to the next step\n   */\n  next() {\n    this.tourObject.next();\n  }\n\n  /**\n   * Show a specific step, by passing its id\n   * @param id The id of the step you want to show\n   */\n  show(id) {\n    this.tourObject.show(id);\n  }\n\n  /**\n   * Start the tour\n   */\n  start() {\n    this.isActive = true;\n    this.tourObject.start();\n  }\n\n  /**\n   * This function is called when a tour is completed or cancelled to initiate cleanup.\n   * @param completeOrCancel 'complete' or 'cancel'\n   */\n  onTourFinish(completeOrCancel: string) {\n    this.isActive = false;\n  }\n\n  /**\n   * Take a set of steps and create a tour object based on the current configuration\n   * @param steps An array of steps\n   */\n  addSteps(steps: Array<any>) {\n    this._initialize();\n    const tour = this.tourObject;\n\n    // Return nothing if there are no steps\n    if (!steps || !Array.isArray(steps) || steps.length === 0) {\n      return;\n    }\n\n    if (!this.requiredElementsPresent()) {\n      tour.addStep({\n        buttons: [{\n          text: 'Exit',\n          action: tour.cancel\n        }],\n        id: 'error',\n        title: this.errorTitle,\n        text: [this.messageForUser]\n      });\n      return;\n    }\n\n    steps.forEach((step) => {\n      if (step.buttons) {\n        step.buttons = step.buttons.map(makeButton.bind(this), this);\n      }\n\n      tour.addStep(step);\n    });\n  }\n\n  /**\n   * Observes the array of requiredElements, which are the elements that must be present at the start of the tour,\n   * and determines if they exist, and are visible, if either is false, it will stop the tour from executing.\n   */\n  private requiredElementsPresent() {\n    let allElementsPresent = true;\n\n    /* istanbul ignore next: also can't test this due to things attached to root blowing up tests */\n    this.requiredElements.forEach((element) => {\n      const selectedElement = document.querySelector(element.selector);\n\n      if (allElementsPresent && (!selectedElement || elementIsHidden(selectedElement))) {\n        allElementsPresent = false;\n        this.errorTitle = element.title;\n        this.messageForUser = element.message;\n      }\n    });\n\n    return allElementsPresent;\n  }\n\n  /**\n   * Initializes the tour, creates a new Shepherd.Tour. sets options, and binds events\n   */\n  private _initialize() {\n    const tourObject = new Shepherd.Tour({\n      confirmCancel: this.confirmCancel,\n      confirmCancelMessage: this.confirmCancelMessage,\n      defaultStepOptions: this.defaultStepOptions,\n      tourName: this.tourName,\n      useModalOverlay: this.modal\n    });\n\n    tourObject.on('complete', this.onTourFinish.bind(this, 'complete'));\n    tourObject.on('cancel', this.onTourFinish.bind(this, 'cancel'));\n\n    this.tourObject = tourObject;\n  }\n}\n"]}