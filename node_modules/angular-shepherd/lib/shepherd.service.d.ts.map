{"version":3,"file":"shepherd.service.d.ts","sources":["shepherd.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import Shepherd from 'shepherd.js';\nexport declare class ShepherdService {\n    confirmCancel: boolean;\n    confirmCancelMessage: string;\n    defaultStepOptions: object;\n    errorTitle: any;\n    isActive: boolean;\n    messageForUser: string;\n    modal: boolean;\n    requiredElements: any[];\n    steps: any[];\n    tourName: any;\n    tourObject: Shepherd.Tour;\n    constructor();\n    /**\n     * Get the tour object and call back\n     */\n    back(): void;\n    /**\n     * Cancel the tour\n     */\n    cancel(): void;\n    /**\n     * Complete the tour\n     */\n    complete(): void;\n    /**\n     * Hides the current step\n     */\n    hide(): void;\n    /**\n     * Advance the tour to the next step\n     */\n    next(): void;\n    /**\n     * Show a specific step, by passing its id\n     * @param id The id of the step you want to show\n     */\n    show(id: any): void;\n    /**\n     * Start the tour\n     */\n    start(): void;\n    /**\n     * This function is called when a tour is completed or cancelled to initiate cleanup.\n     * @param completeOrCancel 'complete' or 'cancel'\n     */\n    onTourFinish(completeOrCancel: string): void;\n    /**\n     * Take a set of steps and create a tour object based on the current configuration\n     * @param steps An array of steps\n     */\n    addSteps(steps: Array<any>): void;\n    /**\n     * Observes the array of requiredElements, which are the elements that must be present at the start of the tour,\n     * and determines if they exist, and are visible, if either is false, it will stop the tour from executing.\n     */\n    private requiredElementsPresent;\n    /**\n     * Initializes the tour, creates a new Shepherd.Tour. sets options, and binds events\n     */\n    private _initialize;\n}\n"]}