{"version":3,"file":"ctrl-ngx-csv.js","sources":["../../src/lib/util.ts","../../src/lib/csv.directive.ts","../../src/lib/csv.module.ts","../../src/lib/ctrl-ngx-csv.ts"],"names":[],"mappings":"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","sourcesContent":["export interface HeaderObj {\n  label: string;\n  key: string;\n}\n\nexport const isJsons = (array: any[]) =>\n  Array.isArray(array) &&\n  array.every(row => typeof row === 'object' && !(row instanceof Array));\n\nexport const isArrays = (array: any[]) =>\n  Array.isArray(array) && array.every(row => Array.isArray(row));\n\nexport function jsonsHeaders(array: object[]) {\n  return Array.from(\n    new Set(\n      array.map(item => Object.keys(item)).reduce((a, b) => [...a, ...b], []),\n    ),\n  );\n}\n\nexport function jsons2arrays(\n  jsons: { [key: string]: string }[],\n  headers?: string[] | HeaderObj[],\n) {\n  headers = headers || jsonsHeaders(jsons);\n\n  // allow headers to have custom labels, defaulting to having the header data key be the label\n  let headerLabels: string[] = headers as string[];\n  let headerKeys: string[] = headers as string[];\n  if (isJsons(headers)) {\n    headerLabels = (headers as HeaderObj[]).map(header => header.label);\n    headerKeys = (headers as HeaderObj[]).map(header => header.key);\n  }\n\n  const data = jsons.map(object =>\n    headerKeys.map(header => (header in object ? object[header] : '')),\n  );\n  return [headerLabels, ...data];\n}\n\nexport const elementOrEmpty = (element: any) =>\n  element || element === 0 ? element : '';\n\nexport function joiner(data: any, delimiter = ',') {\n  return data\n    .map((row: any, index: number) =>\n      row.map((element: any) => '\"' + elementOrEmpty(element) + '\"').join(delimiter),\n    )\n    .join(`\\n`);\n}\n\nexport function arrays2csv(\n  data: string[][],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  return joiner(headers ? [headers, ...data] : data, delimiter);\n}\n\nexport function jsons2csv(\n  data: { [key: string]: string }[],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  return joiner(jsons2arrays(data, headers), delimiter);\n}\n\nexport function string2csv(\n  data: string,\n  headers?: string[],\n  delimiter?: string,\n) {\n  return headers ? `${headers.join(delimiter)}\\n${data}` : data;\n}\n\nexport function toCSV(\n  data: string | string[][] | { [key: string]: string }[] | any[],\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  if (isJsons(data as any)) {\n    return jsons2csv(data as { [key: string]: string }[], headers, delimiter);\n  }\n  if (isArrays(data as any)) {\n    return arrays2csv(data as string[][], headers, delimiter);\n  }\n  if (typeof data === 'string') {\n    return string2csv(data, headers as string[], delimiter);\n  }\n  throw new TypeError(\n    `Data should be a \"String\", \"Array of arrays\" OR \"Array of objects\" `,\n  );\n}\n\nexport function blob(\n  data: string | string[][] | { [key: string]: string }[] | any[],\n  uFEFF = true,\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  const csv = toCSV(data, headers, delimiter);\n  return new Blob([uFEFF ? '\\uFEFF' : '', csv], { type: 'text/csv' });\n}\n\nexport function buildURI(\n  data: string | string[][] | { [key: string]: string }[] | any[],\n  uFEFF = true,\n  headers?: string[] | HeaderObj[],\n  delimiter?: string,\n) {\n  return URL.createObjectURL(blob(data, uFEFF, headers, delimiter));\n}\n","import { Directive, HostBinding, HostListener, Input, OnChanges } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nimport { blob, buildURI, HeaderObj } from './util';\n\n@Directive({ selector: '[csvLink]' })\nexport class CsvDirective implements OnChanges {\n  /** the body of the csv */\n  @Input() data: string | string[][] | { [key: string]: string }[] | any[] = [];\n  /** Set the first line of the csv */\n  @Input() headers?: string[] | HeaderObj[];\n  /** Set the seperator between values */\n  @Input() delimiter = ',';\n  /** Set the filename of the csv. Default is `data.csv` */\n  @Input()\n  set filename(a: string) {\n    this.download = a;\n  }\n  /** adds a Byte order mark to setup the csv as UTF-8  */\n  @Input() uFEFF = true;\n  @HostBinding() href?: SafeResourceUrl;\n  /** filename */\n  @HostBinding() download = 'data.csv';\n  @Input() @HostBinding() target = this.isIEBrowser() ? '' : '_blank';\n  constructor(private sanitizer: DomSanitizer) {}\n\n  @HostListener('click') onClick() {\n    // IE handling\n    if (this.isIEBrowser()) {\n      const file = blob(this.data, this.uFEFF, this.headers, this.delimiter);\n      window.navigator.msSaveBlob(file, this.download);\n    }\n  }\n\n  isIEBrowser(): boolean {\n    return !!window.navigator.msSaveOrOpenBlob;\n  }\n\n  ngOnChanges() {\n    this.href = this.sanitizer.bypassSecurityTrustResourceUrl(\n      buildURI(this.data, this.uFEFF, this.headers, this.delimiter),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CsvDirective } from './csv.directive';\n\n@NgModule({\n  declarations: [CsvDirective],\n  exports: [CsvDirective],\n})\nexport class CsvModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}