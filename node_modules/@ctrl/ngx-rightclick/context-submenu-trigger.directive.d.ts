import { OnDestroy, EventEmitter } from '@angular/core';
import { ActiveContextMenu, ContextMenuService } from './context-menu.service';
import * as ɵngcc0 from '@angular/core';
export declare class ContextSubmenuTriggerDirective implements OnDestroy {
    private contextMenuService;
    hoverDelay: number;
    openDelay: number;
    contextSubmenuTrigger?: any;
    menuContext?: any;
    menuAction: EventEmitter<any>;
    menuClose: EventEmitter<void>;
    menu?: ActiveContextMenu;
    opentimer: any;
    closetimer: any;
    visible: boolean;
    level: number;
    constructor(contextMenuService: ContextMenuService);
    handleSubMenuClick($event: MouseEvent): void;
    handleSubMenuEnter($event: MouseEvent): void;
    /**
     * submenu hides after cursor has exited for a period of time
     */
    handleSubMenuExit(): void;
    /**
     * if overwritten make sure to clear timeouts
     */
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ContextSubmenuTriggerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ContextSubmenuTriggerDirective, "[contextSubmenuTrigger]", never, { "hoverDelay": "hoverDelay"; "openDelay": "openDelay"; "contextSubmenuTrigger": "contextSubmenuTrigger"; "menuContext": "menuContext"; }, { "menuAction": "menuAction"; "menuClose": "menuClose"; }, never>;
}

//# sourceMappingURL=context-submenu-trigger.directive.d.ts.map