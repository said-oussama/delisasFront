import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { ContextMenuService, ActiveContextMenu } from './context-menu.service';
import * as ɵngcc0 from '@angular/core';
export declare class ContextMenuTriggerDirective implements OnDestroy, OnInit {
    private contextMenuService;
    contextMenuTrigger: any;
    menuContext: any;
    holdToDisplay: number;
    menuAction: EventEmitter<any>;
    menuClose: EventEmitter<void>;
    beforeOpen: EventEmitter<any>;
    menu?: ActiveContextMenu;
    visible: boolean;
    private mouseDownTimeoutId;
    private sub;
    handleMenu($event: MouseEvent): void;
    handleMouseDown($event: any): void;
    handleMouseUp(): void;
    constructor(contextMenuService: ContextMenuService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ContextMenuTriggerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ContextMenuTriggerDirective, "[contextMenuTrigger]", ["contextMenuTrigger"], { "holdToDisplay": "holdToDisplay"; "contextMenuTrigger": "contextMenuTrigger"; "menuContext": "menuContext"; }, { "menuAction": "menuAction"; "menuClose": "menuClose"; "beforeOpen": "beforeOpen"; }, never>;
}

//# sourceMappingURL=context-menu-trigger.directive.d.ts.map